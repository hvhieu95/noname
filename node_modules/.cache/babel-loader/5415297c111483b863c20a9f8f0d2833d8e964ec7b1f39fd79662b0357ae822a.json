{"ast":null,"code":"var _assertThisInitialized = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _get = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _slicedToArray = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _toConsumableArray = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _createClass = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/hoang/OneDrive/M\\xE1y t\\xEDnh/xs5wpn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __w_pdfjs_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // define __esModule on exports\n      /******/\n      __w_pdfjs_require__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n      /******/ // create a fake namespace object\n      /******/ // mode & 1: value is a module id, require it\n      /******/ // mode & 2: merge all properties of value into the ns\n      /******/ // mode & 4: return value when already ns object\n      /******/ // mode & 8|1: behave like require\n      /******/\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n        if (mode & 8) return value;\n        /******/\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n        var ns = Object.create(null);\n        /******/\n        __w_pdfjs_require__.r(ns);\n        /******/\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n        if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n        return ns;\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __w_pdfjs_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __w_pdfjs_require__.p = \"\";\n      /******/\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n    /******/([/* 0 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var pdfjsVersion = '2.4.456';\n      var pdfjsBuild = '228a591c';\n      var pdfjsSharedUtil = __w_pdfjs_require__(1);\n      var pdfjsDisplayAPI = __w_pdfjs_require__(3);\n      var pdfjsDisplayTextLayer = __w_pdfjs_require__(16);\n      var pdfjsDisplayAnnotationLayer = __w_pdfjs_require__(17);\n      var pdfjsDisplayDisplayUtils = __w_pdfjs_require__(4);\n      var pdfjsDisplaySVG = __w_pdfjs_require__(18);\n      var pdfjsDisplayWorkerOptions = __w_pdfjs_require__(10);\n      var pdfjsDisplayAPICompatibility = __w_pdfjs_require__(6);\n      {\n        var _w_pdfjs_require__ = __w_pdfjs_require__(7),\n          isNodeJS = _w_pdfjs_require__.isNodeJS;\n        if (isNodeJS) {\n          var PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n          pdfjsDisplayAPI.setPDFNetworkStreamFactory(function (params) {\n            return new PDFNodeStream(params);\n          });\n        } else {\n          var PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n          var PDFFetchStream;\n          if (pdfjsDisplayDisplayUtils.isFetchSupported()) {\n            PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n          }\n          pdfjsDisplayAPI.setPDFNetworkStreamFactory(function (params) {\n            if (PDFFetchStream && pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)) {\n              return new PDFFetchStream(params);\n            }\n            return new PDFNetworkStream(params);\n          });\n        }\n      }\n      exports.build = pdfjsDisplayAPI.build;\n      exports.version = pdfjsDisplayAPI.version;\n      exports.getDocument = pdfjsDisplayAPI.getDocument;\n      exports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\n      exports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\n      exports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\n      exports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\n      exports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\n      exports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\n      exports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\n      exports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\n      exports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\n      exports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\n      exports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\n      exports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;\n      exports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;\n      exports.UnexpectedResponseException = pdfjsSharedUtil.UnexpectedResponseException;\n      exports.OPS = pdfjsSharedUtil.OPS;\n      exports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;\n      exports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\n      exports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\n      exports.createObjectURL = pdfjsSharedUtil.createObjectURL;\n      exports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\n      exports.shadow = pdfjsSharedUtil.shadow;\n      exports.Util = pdfjsSharedUtil.Util;\n      exports.RenderingCancelledException = pdfjsDisplayDisplayUtils.RenderingCancelledException;\n      exports.getFilenameFromUrl = pdfjsDisplayDisplayUtils.getFilenameFromUrl;\n      exports.LinkTarget = pdfjsDisplayDisplayUtils.LinkTarget;\n      exports.addLinkAttributes = pdfjsDisplayDisplayUtils.addLinkAttributes;\n      exports.loadScript = pdfjsDisplayDisplayUtils.loadScript;\n      exports.PDFDateString = pdfjsDisplayDisplayUtils.PDFDateString;\n      exports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;\n      exports.apiCompatibilityParams = pdfjsDisplayAPICompatibility.apiCompatibilityParams;\n\n      /***/\n    }, /* 1 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isBool = isBool;\n      exports.isEmptyObj = isEmptyObj;\n      exports.isNum = isNum;\n      exports.isString = isString;\n      exports.isSameOrigin = isSameOrigin;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.removeNullCharacters = removeNullCharacters;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      exports.unreachable = unreachable;\n      exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.NativeImageDecoding = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n      __w_pdfjs_require__(2);\n      var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      var NativeImageDecoding = {\n        NONE: \"none\",\n        DECODE: \"decode\",\n        DISPLAY: \"display\"\n      };\n      exports.NativeImageDecoding = NativeImageDecoding;\n      var PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      var TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      var ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      var AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      var AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      var AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      var AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      var AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      var AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      var AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      var AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      var StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      var FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      var VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      var CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      var OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      var UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      var PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      var verbosity = VerbosityLevel.WARNINGS;\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(\"Info: \".concat(msg));\n        }\n      }\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(\"Warning: \".concat(msg));\n        }\n      }\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n      function isSameOrigin(baseUrl, otherUrl) {\n        var base;\n        try {\n          base = new URL(baseUrl);\n          if (!base.origin || base.origin === \"null\") {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n        var other = new URL(otherUrl, base);\n        return base.origin === other.origin;\n      }\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n          default:\n            return false;\n        }\n      }\n      function createValidAbsoluteUrl(url, baseUrl) {\n        if (!url) {\n          return null;\n        }\n        try {\n          var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n        return null;\n      }\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n      var BaseException = function BaseExceptionClosure() {\n        function BaseException(message) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n          this.message = message;\n          this.name = this.constructor.name;\n        }\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n      exports.BaseException = BaseException;\n      var PasswordException = /*#__PURE__*/function (_BaseException) {\n        _inherits(PasswordException, _BaseException);\n        var _super = _createSuper(PasswordException);\n        function PasswordException(msg, code) {\n          var _this;\n          _classCallCheck(this, PasswordException);\n          _this = _super.call(this, msg);\n          _this.code = code;\n          return _this;\n        }\n        return _createClass(PasswordException);\n      }(BaseException);\n      exports.PasswordException = PasswordException;\n      var UnknownErrorException = /*#__PURE__*/function (_BaseException2) {\n        _inherits(UnknownErrorException, _BaseException2);\n        var _super2 = _createSuper(UnknownErrorException);\n        function UnknownErrorException(msg, details) {\n          var _this2;\n          _classCallCheck(this, UnknownErrorException);\n          _this2 = _super2.call(this, msg);\n          _this2.details = details;\n          return _this2;\n        }\n        return _createClass(UnknownErrorException);\n      }(BaseException);\n      exports.UnknownErrorException = UnknownErrorException;\n      var InvalidPDFException = /*#__PURE__*/function (_BaseException3) {\n        _inherits(InvalidPDFException, _BaseException3);\n        var _super3 = _createSuper(InvalidPDFException);\n        function InvalidPDFException() {\n          _classCallCheck(this, InvalidPDFException);\n          return _super3.apply(this, arguments);\n        }\n        return _createClass(InvalidPDFException);\n      }(BaseException);\n      exports.InvalidPDFException = InvalidPDFException;\n      var MissingPDFException = /*#__PURE__*/function (_BaseException4) {\n        _inherits(MissingPDFException, _BaseException4);\n        var _super4 = _createSuper(MissingPDFException);\n        function MissingPDFException() {\n          _classCallCheck(this, MissingPDFException);\n          return _super4.apply(this, arguments);\n        }\n        return _createClass(MissingPDFException);\n      }(BaseException);\n      exports.MissingPDFException = MissingPDFException;\n      var UnexpectedResponseException = /*#__PURE__*/function (_BaseException5) {\n        _inherits(UnexpectedResponseException, _BaseException5);\n        var _super5 = _createSuper(UnexpectedResponseException);\n        function UnexpectedResponseException(msg, status) {\n          var _this3;\n          _classCallCheck(this, UnexpectedResponseException);\n          _this3 = _super5.call(this, msg);\n          _this3.status = status;\n          return _this3;\n        }\n        return _createClass(UnexpectedResponseException);\n      }(BaseException);\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n      var FormatError = /*#__PURE__*/function (_BaseException6) {\n        _inherits(FormatError, _BaseException6);\n        var _super6 = _createSuper(FormatError);\n        function FormatError() {\n          _classCallCheck(this, FormatError);\n          return _super6.apply(this, arguments);\n        }\n        return _createClass(FormatError);\n      }(BaseException);\n      exports.FormatError = FormatError;\n      var AbortException = /*#__PURE__*/function (_BaseException7) {\n        _inherits(AbortException, _BaseException7);\n        var _super7 = _createSuper(AbortException);\n        function AbortException() {\n          _classCallCheck(this, AbortException);\n          return _super7.apply(this, arguments);\n        }\n        return _createClass(AbortException);\n      }(BaseException);\n      exports.AbortException = AbortException;\n      var NullCharactersRegExp = /\\x00/g;\n      function removeNullCharacters(str) {\n        if (typeof str !== \"string\") {\n          warn(\"The argument for removeNullCharacters must be a string.\");\n          return str;\n        }\n        return str.replace(NullCharactersRegExp, \"\");\n      }\n      function bytesToString(bytes) {\n        assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n        var length = bytes.length;\n        var MAX_ARGUMENT_COUNT = 8192;\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n        var strBuf = [];\n        for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          var chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n        return strBuf.join(\"\");\n      }\n      function stringToBytes(str) {\n        assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n        var length = str.length;\n        var bytes = new Uint8Array(length);\n        for (var i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n        return bytes;\n      }\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n        assert(arr.byteLength !== undefined);\n        return arr.byteLength;\n      }\n      function arraysToBytes(arr) {\n        var length = arr.length;\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n        var resultLength = 0;\n        for (var i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n        var pos = 0;\n        var data = new Uint8Array(resultLength);\n        for (var _i = 0; _i < length; _i++) {\n          var item = arr[_i];\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n          var itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n        return data;\n      }\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n      function isLittleEndian() {\n        var buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n      var IsLittleEndianCached = {\n        get value() {\n          return shadow(this, \"value\", isLittleEndian());\n        }\n      };\n      exports.IsLittleEndianCached = IsLittleEndianCached;\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      var IsEvalSupportedCached = {\n        get value() {\n          return shadow(this, \"value\", isEvalSupported());\n        }\n      };\n      exports.IsEvalSupportedCached = IsEvalSupportedCached;\n      var rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n      var Util = /*#__PURE__*/function () {\n        function Util() {\n          _classCallCheck(this, Util);\n        }\n        _createClass(Util, null, [{\n          key: \"makeCssRgb\",\n          value: function makeCssRgb(r, g, b) {\n            rgbBuf[1] = r;\n            rgbBuf[3] = g;\n            rgbBuf[5] = b;\n            return rgbBuf.join(\"\");\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n        }, {\n          key: \"applyTransform\",\n          value: function applyTransform(p, m) {\n            var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n        }, {\n          key: \"applyInverseTransform\",\n          value: function applyInverseTransform(p, m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n        }, {\n          key: \"getAxialAlignedBoundingBox\",\n          value: function getAxialAlignedBoundingBox(r, m) {\n            var p1 = Util.applyTransform(r, m);\n            var p2 = Util.applyTransform(r.slice(2, 4), m);\n            var p3 = Util.applyTransform([r[0], r[3]], m);\n            var p4 = Util.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n        }, {\n          key: \"inverseTransform\",\n          value: function inverseTransform(m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n        }, {\n          key: \"apply3dTransform\",\n          value: function apply3dTransform(m, v) {\n            return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n          }\n        }, {\n          key: \"singularValueDecompose2dScale\",\n          value: function singularValueDecompose2dScale(m) {\n            var transpose = [m[0], m[2], m[1], m[3]];\n            var a = m[0] * transpose[0] + m[1] * transpose[2];\n            var b = m[0] * transpose[1] + m[1] * transpose[3];\n            var c = m[2] * transpose[0] + m[3] * transpose[2];\n            var d = m[2] * transpose[1] + m[3] * transpose[3];\n            var first = (a + d) / 2;\n            var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n            var sx = first + second || 1;\n            var sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n        }, {\n          key: \"normalizeRect\",\n          value: function normalizeRect(rect) {\n            var r = rect.slice(0);\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n            return r;\n          }\n        }, {\n          key: \"intersect\",\n          value: function intersect(rect1, rect2) {\n            function compare(a, b) {\n              return a - b;\n            }\n            var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n            var orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n            var result = [];\n            rect1 = Util.normalizeRect(rect1);\n            rect2 = Util.normalizeRect(rect2);\n            if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n              result[0] = orderedX[1];\n              result[2] = orderedX[2];\n            } else {\n              return null;\n            }\n            if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n              result[1] = orderedY[1];\n              result[3] = orderedY[2];\n            } else {\n              return null;\n            }\n            return result;\n          }\n        }]);\n        return Util;\n      }();\n      exports.Util = Util;\n      var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n      function stringToPDFString(str) {\n        var length = str.length,\n          strBuf = [];\n        if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n          for (var i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n          }\n        } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n          for (var _i2 = 2; _i2 < length; _i2 += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(_i2 + 1) << 8 | str.charCodeAt(_i2)));\n          }\n        } else {\n          for (var _i3 = 0; _i3 < length; ++_i3) {\n            var code = PDFStringTranslateTable[str.charCodeAt(_i3)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(_i3));\n          }\n        }\n        return strBuf.join(\"\");\n      }\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n      function isEmptyObj(obj) {\n        for (var key in obj) {\n          return false;\n        }\n        return true;\n      }\n      function isBool(v) {\n        return typeof v === \"boolean\";\n      }\n      function isNum(v) {\n        return typeof v === \"number\";\n      }\n      function isString(v) {\n        return typeof v === \"string\";\n      }\n      function isArrayBuffer(v) {\n        return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n        return arr1.every(function (element, index) {\n          return element === arr2[index];\n        });\n      }\n      function createPromiseCapability() {\n        var capability = Object.create(null);\n        var isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get: function get() {\n            return isSettled;\n          }\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n      var createObjectURL = function createObjectURLClosure() {\n        var digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        return function createObjectURL(data, contentType) {\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          if (!forceDataSchema && URL.createObjectURL) {\n            var blob = new Blob([data], {\n              type: contentType\n            });\n            return URL.createObjectURL(blob);\n          }\n          var buffer = \"data:\".concat(contentType, \";base64,\");\n          for (var i = 0, ii = data.length; i < ii; i += 3) {\n            var b1 = data[i] & 0xff;\n            var b2 = data[i + 1] & 0xff;\n            var b3 = data[i + 2] & 0xff;\n            var d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n            var d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            var d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n          return buffer;\n        };\n      }();\n      exports.createObjectURL = createObjectURL;\n\n      /***/\n    }, /* 2 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      ;\n\n      /***/\n    }, /* 3 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getDocument = getDocument;\n      exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n      exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(4);\n      var _font_loader = __w_pdfjs_require__(5);\n      var _api_compatibility = __w_pdfjs_require__(6);\n      var _canvas = __w_pdfjs_require__(8);\n      var _worker_options = __w_pdfjs_require__(10);\n      var _is_node = __w_pdfjs_require__(7);\n      var _message_handler = __w_pdfjs_require__(11);\n      var _metadata = __w_pdfjs_require__(12);\n      var _transport_stream = __w_pdfjs_require__(14);\n      var _webgl = __w_pdfjs_require__(15);\n      var DEFAULT_RANGE_CHUNK_SIZE = 65536;\n      var RENDERING_CANCELLED_TIMEOUT = 100;\n      var createPDFNetworkStream;\n      function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n        createPDFNetworkStream = pdfNetworkStreamFactory;\n      }\n      function getDocument(src) {\n        var task = new PDFDocumentLoadingTask();\n        var source;\n        if (typeof src === \"string\") {\n          source = {\n            url: src\n          };\n        } else if ((0, _util.isArrayBuffer)(src)) {\n          source = {\n            data: src\n          };\n        } else if (src instanceof PDFDataRangeTransport) {\n          source = {\n            range: src\n          };\n        } else {\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n          }\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n          source = src;\n        }\n        var params = Object.create(null);\n        var rangeTransport = null,\n          worker = null;\n        for (var key in source) {\n          if (key === \"url\" && typeof window !== \"undefined\") {\n            params[key] = new URL(source[key], window.location).href;\n            continue;\n          } else if (key === \"range\") {\n            rangeTransport = source[key];\n            continue;\n          } else if (key === \"worker\") {\n            worker = source[key];\n            continue;\n          } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n            var pdfBytes = source[key];\n            if (typeof pdfBytes === \"string\") {\n              params[key] = (0, _util.stringToBytes)(pdfBytes);\n            } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else {\n              throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n            }\n            continue;\n          }\n          params[key] = source[key];\n        }\n        params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n        params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n        params.ignoreErrors = params.stopAtErrors !== true;\n        params.pdfBug = params.pdfBug === true;\n        var NativeImageDecoderValues = Object.values(_util.NativeImageDecoding);\n        if (params.nativeImageDecoderSupport === undefined || !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)) {\n          params.nativeImageDecoderSupport = _api_compatibility.apiCompatibilityParams.nativeImageDecoderSupport || _util.NativeImageDecoding.DECODE;\n        }\n        if (!Number.isInteger(params.maxImageSize)) {\n          params.maxImageSize = -1;\n        }\n        if (typeof params.isEvalSupported !== \"boolean\") {\n          params.isEvalSupported = true;\n        }\n        if (typeof params.disableFontFace !== \"boolean\") {\n          params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n        }\n        if (typeof params.disableRange !== \"boolean\") {\n          params.disableRange = false;\n        }\n        if (typeof params.disableStream !== \"boolean\") {\n          params.disableStream = false;\n        }\n        if (typeof params.disableAutoFetch !== \"boolean\") {\n          params.disableAutoFetch = false;\n        }\n        if (typeof params.disableCreateObjectURL !== \"boolean\") {\n          params.disableCreateObjectURL = _api_compatibility.apiCompatibilityParams.disableCreateObjectURL || false;\n        }\n        (0, _util.setVerbosityLevel)(params.verbosity);\n        if (!worker) {\n          var workerParams = {\n            verbosity: params.verbosity,\n            port: _worker_options.GlobalWorkerOptions.workerPort\n          };\n          worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n          task._worker = worker;\n        }\n        var docId = task.docId;\n        worker.promise.then(function () {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n          return _fetchDocument(worker, params, rangeTransport, docId).then(function (workerId) {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n            var networkStream;\n            if (rangeTransport) {\n              networkStream = new _transport_stream.PDFDataTransportStream({\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              }, rangeTransport);\n            } else if (!params.data) {\n              networkStream = createPDFNetworkStream({\n                url: params.url,\n                length: params.length,\n                httpHeaders: params.httpHeaders,\n                withCredentials: params.withCredentials,\n                rangeChunkSize: params.rangeChunkSize,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              });\n            }\n            var messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n            messageHandler.postMessageTransfers = worker.postMessageTransfers;\n            var transport = new WorkerTransport(messageHandler, task, networkStream, params);\n            task._transport = transport;\n            messageHandler.send(\"Ready\", null);\n          });\n        }).catch(task._capability.reject);\n        return task;\n      }\n      function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n        if (worker.destroyed) {\n          return Promise.reject(new Error(\"Worker was destroyed\"));\n        }\n        if (pdfDataRangeTransport) {\n          source.length = pdfDataRangeTransport.length;\n          source.initialData = pdfDataRangeTransport.initialData;\n          source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n        }\n        return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n          docId: docId,\n          apiVersion: '2.4.456',\n          source: {\n            data: source.data,\n            url: source.url,\n            password: source.password,\n            disableAutoFetch: source.disableAutoFetch,\n            rangeChunkSize: source.rangeChunkSize,\n            length: source.length\n          },\n          maxImageSize: source.maxImageSize,\n          disableFontFace: source.disableFontFace,\n          disableCreateObjectURL: source.disableCreateObjectURL,\n          postMessageTransfers: worker.postMessageTransfers,\n          docBaseUrl: source.docBaseUrl,\n          nativeImageDecoderSupport: source.nativeImageDecoderSupport,\n          ignoreErrors: source.ignoreErrors,\n          isEvalSupported: source.isEvalSupported\n        }).then(function (workerId) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n          return workerId;\n        });\n      }\n      var PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n        var nextDocumentId = 0;\n        var PDFDocumentLoadingTask = /*#__PURE__*/function () {\n          function PDFDocumentLoadingTask() {\n            _classCallCheck(this, PDFDocumentLoadingTask);\n            this._capability = (0, _util.createPromiseCapability)();\n            this._transport = null;\n            this._worker = null;\n            this.docId = \"d\" + nextDocumentId++;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n            this.onUnsupportedFeature = null;\n          }\n          _createClass(PDFDocumentLoadingTask, [{\n            key: \"promise\",\n            get: function get() {\n              return this._capability.promise;\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              var _this4 = this;\n              this.destroyed = true;\n              var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n              return transportDestroyed.then(function () {\n                _this4._transport = null;\n                if (_this4._worker) {\n                  _this4._worker.destroy();\n                  _this4._worker = null;\n                }\n              });\n            }\n          }, {\n            key: \"then\",\n            value: function then(onFulfilled, onRejected) {\n              throw new Error(\"Removed API method: \" + \"PDFDocumentLoadingTask.then, use the `promise` getter instead.\");\n            }\n          }]);\n          return PDFDocumentLoadingTask;\n        }();\n        return PDFDocumentLoadingTask;\n      }();\n      var PDFDataRangeTransport = /*#__PURE__*/function () {\n        function PDFDataRangeTransport(length, initialData) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          _classCallCheck(this, PDFDataRangeTransport);\n          this.length = length;\n          this.initialData = initialData;\n          this.progressiveDone = progressiveDone;\n          this._rangeListeners = [];\n          this._progressListeners = [];\n          this._progressiveReadListeners = [];\n          this._progressiveDoneListeners = [];\n          this._readyCapability = (0, _util.createPromiseCapability)();\n        }\n        _createClass(PDFDataRangeTransport, [{\n          key: \"addRangeListener\",\n          value: function addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressListener\",\n          value: function addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveReadListener\",\n          value: function addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n        }, {\n          key: \"addProgressiveDoneListener\",\n          value: function addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n        }, {\n          key: \"onDataRange\",\n          value: function onDataRange(begin, chunk) {\n            var _iterator = _createForOfIteratorHelper(this._rangeListeners),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var listener = _step.value;\n                listener(begin, chunk);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n        }, {\n          key: \"onDataProgress\",\n          value: function onDataProgress(loaded, total) {\n            var _this5 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator2 = _createForOfIteratorHelper(_this5._progressListeners),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var listener = _step2.value;\n                  listener(loaded, total);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveRead\",\n          value: function onDataProgressiveRead(chunk) {\n            var _this6 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator3 = _createForOfIteratorHelper(_this6._progressiveReadListeners),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var listener = _step3.value;\n                  listener(chunk);\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            });\n          }\n        }, {\n          key: \"onDataProgressiveDone\",\n          value: function onDataProgressiveDone() {\n            var _this7 = this;\n            this._readyCapability.promise.then(function () {\n              var _iterator4 = _createForOfIteratorHelper(_this7._progressiveDoneListeners),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var listener = _step4.value;\n                  listener();\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            });\n          }\n        }, {\n          key: \"transportReady\",\n          value: function transportReady() {\n            this._readyCapability.resolve();\n          }\n        }, {\n          key: \"requestDataRange\",\n          value: function requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n        }, {\n          key: \"abort\",\n          value: function abort() {}\n        }]);\n        return PDFDataRangeTransport;\n      }();\n      exports.PDFDataRangeTransport = PDFDataRangeTransport;\n      var PDFDocumentProxy = /*#__PURE__*/function () {\n        function PDFDocumentProxy(pdfInfo, transport) {\n          _classCallCheck(this, PDFDocumentProxy);\n          this._pdfInfo = pdfInfo;\n          this._transport = transport;\n        }\n        _createClass(PDFDocumentProxy, [{\n          key: \"numPages\",\n          get: function get() {\n            return this._pdfInfo.numPages;\n          }\n        }, {\n          key: \"fingerprint\",\n          get: function get() {\n            return this._pdfInfo.fingerprint;\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this._transport.getDestinations();\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this._transport.getPageMode();\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n        }, {\n          key: \"getOpenActionDestination\",\n          value: function getOpenActionDestination() {\n            (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n            return this.getOpenAction().then(function (openAction) {\n              return openAction && openAction.dest ? openAction.dest : null;\n            });\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this._transport.getAttachments();\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this._transport.getJavaScript();\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this._transport.getOutline();\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this._transport.getPermissions();\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            return this._transport.getMetadata();\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this._transport.getData();\n          }\n        }, {\n          key: \"getDownloadInfo\",\n          value: function getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n        }, {\n          key: \"getStats\",\n          value: function getStats() {\n            return this._transport.getStats();\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            return this._transport.startCleanup();\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            return this.loadingTask.destroy();\n          }\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            return this._transport.loadingParams;\n          }\n        }, {\n          key: \"loadingTask\",\n          get: function get() {\n            return this._transport.loadingTask;\n          }\n        }]);\n        return PDFDocumentProxy;\n      }();\n      exports.PDFDocumentProxy = PDFDocumentProxy;\n      var PDFPageProxy = /*#__PURE__*/function () {\n        function PDFPageProxy(pageIndex, pageInfo, transport) {\n          var pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n          _classCallCheck(this, PDFPageProxy);\n          this._pageIndex = pageIndex;\n          this._pageInfo = pageInfo;\n          this._transport = transport;\n          this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n          this._pdfBug = pdfBug;\n          this.commonObjs = transport.commonObjs;\n          this.objs = new PDFObjects();\n          this.cleanupAfterRender = false;\n          this.pendingCleanup = false;\n          this.intentStates = Object.create(null);\n          this.destroyed = false;\n        }\n        _createClass(PDFPageProxy, [{\n          key: \"pageNumber\",\n          get: function get() {\n            return this._pageIndex + 1;\n          }\n        }, {\n          key: \"rotate\",\n          get: function get() {\n            return this._pageInfo.rotate;\n          }\n        }, {\n          key: \"ref\",\n          get: function get() {\n            return this._pageInfo.ref;\n          }\n        }, {\n          key: \"userUnit\",\n          get: function get() {\n            return this._pageInfo.userUnit;\n          }\n        }, {\n          key: \"view\",\n          get: function get() {\n            return this._pageInfo.view;\n          }\n        }, {\n          key: \"getViewport\",\n          value: function getViewport() {\n            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              scale = _ref.scale,\n              _ref$rotation = _ref.rotation,\n              rotation = _ref$rotation === void 0 ? this.rotate : _ref$rotation,\n              _ref$offsetX = _ref.offsetX,\n              offsetX = _ref$offsetX === void 0 ? 0 : _ref$offsetX,\n              _ref$offsetY = _ref.offsetY,\n              offsetY = _ref$offsetY === void 0 ? 0 : _ref$offsetY,\n              _ref$dontFlip = _ref.dontFlip,\n              dontFlip = _ref$dontFlip === void 0 ? false : _ref$dontFlip;\n            if (arguments.length > 1 || typeof arguments[0] === \"number\") {\n              throw new Error(\"PDFPageProxy.getViewport is called with obsolete arguments.\");\n            }\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations() {\n            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref2$intent = _ref2.intent,\n              intent = _ref2$intent === void 0 ? null : _ref2$intent;\n            if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n              this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n              this.annotationsIntent = intent;\n            }\n            return this.annotationsPromise;\n          }\n        }, {\n          key: \"render\",\n          value: function render(_ref3) {\n            var _this8 = this;\n            var canvasContext = _ref3.canvasContext,\n              viewport = _ref3.viewport,\n              _ref3$intent = _ref3.intent,\n              intent = _ref3$intent === void 0 ? \"display\" : _ref3$intent,\n              _ref3$enableWebGL = _ref3.enableWebGL,\n              enableWebGL = _ref3$enableWebGL === void 0 ? false : _ref3$enableWebGL,\n              _ref3$renderInteracti = _ref3.renderInteractiveForms,\n              renderInteractiveForms = _ref3$renderInteracti === void 0 ? false : _ref3$renderInteracti,\n              _ref3$transform = _ref3.transform,\n              transform = _ref3$transform === void 0 ? null : _ref3$transform,\n              _ref3$imageLayer = _ref3.imageLayer,\n              imageLayer = _ref3$imageLayer === void 0 ? null : _ref3$imageLayer,\n              _ref3$canvasFactory = _ref3.canvasFactory,\n              canvasFactory = _ref3$canvasFactory === void 0 ? null : _ref3$canvasFactory,\n              _ref3$background = _ref3.background,\n              background = _ref3$background === void 0 ? null : _ref3$background;\n            if (this._stats) {\n              this._stats.time(\"Overall\");\n            }\n            var renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n            this.pendingCleanup = false;\n            if (!this.intentStates[renderingIntent]) {\n              this.intentStates[renderingIntent] = Object.create(null);\n            }\n            var intentState = this.intentStates[renderingIntent];\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n            var canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n            var webGLContext = new _webgl.WebGLContext({\n              enable: enableWebGL\n            });\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n              this._pumpOperatorList({\n                pageIndex: this._pageIndex,\n                intent: renderingIntent,\n                renderInteractiveForms: renderInteractiveForms === true\n              });\n            }\n            var complete = function complete(error) {\n              var i = intentState.renderTasks.indexOf(internalRenderTask);\n              if (i >= 0) {\n                intentState.renderTasks.splice(i, 1);\n              }\n              if (_this8.cleanupAfterRender || renderingIntent === \"print\") {\n                _this8.pendingCleanup = true;\n              }\n              _this8._tryCleanup();\n              if (error) {\n                internalRenderTask.capability.reject(error);\n                _this8._abortOperatorList({\n                  intentState: intentState,\n                  reason: error\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n              if (_this8._stats) {\n                _this8._stats.timeEnd(\"Rendering\");\n                _this8._stats.timeEnd(\"Overall\");\n              }\n            };\n            var internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext: canvasContext,\n                viewport: viewport,\n                transform: transform,\n                imageLayer: imageLayer,\n                background: background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: canvasFactoryInstance,\n              webGLContext: webGLContext,\n              useRequestAnimationFrame: renderingIntent !== \"print\",\n              pdfBug: this._pdfBug\n            });\n            if (!intentState.renderTasks) {\n              intentState.renderTasks = [];\n            }\n            intentState.renderTasks.push(internalRenderTask);\n            var renderTask = internalRenderTask.task;\n            intentState.displayReadyCapability.promise.then(function (transparency) {\n              if (_this8.pendingCleanup) {\n                complete();\n                return;\n              }\n              if (_this8._stats) {\n                _this8._stats.time(\"Rendering\");\n              }\n              internalRenderTask.initializeGraphics(transparency);\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList() {\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                var i = intentState.renderTasks.indexOf(opListTask);\n                if (i >= 0) {\n                  intentState.renderTasks.splice(i, 1);\n                }\n              }\n            }\n            var renderingIntent = \"oplist\";\n            if (!this.intentStates[renderingIntent]) {\n              this.intentStates[renderingIntent] = Object.create(null);\n            }\n            var intentState = this.intentStates[renderingIntent];\n            var opListTask;\n            if (!intentState.opListReadCapability) {\n              opListTask = {};\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n              intentState.renderTasks = [];\n              intentState.renderTasks.push(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n              this._pumpOperatorList({\n                pageIndex: this._pageIndex,\n                intent: renderingIntent\n              });\n            }\n            return intentState.opListReadCapability.promise;\n          }\n        }, {\n          key: \"streamTextContent\",\n          value: function streamTextContent() {\n            var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n              normalizeWhitespace = _ref4$normalizeWhites === void 0 ? false : _ref4$normalizeWhites,\n              _ref4$disableCombineT = _ref4.disableCombineTextItems,\n              disableCombineTextItems = _ref4$disableCombineT === void 0 ? false : _ref4$disableCombineT;\n            var TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              normalizeWhitespace: normalizeWhitespace === true,\n              combineTextItems: disableCombineTextItems !== true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n              size: function size(textContent) {\n                return textContent.items.length;\n              }\n            });\n          }\n        }, {\n          key: \"getTextContent\",\n          value: function getTextContent() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref5) {\n                  var _textContent$items;\n                  var value = _ref5.value,\n                    done = _ref5.done;\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n                  Object.assign(textContent.styles, value.styles);\n                  (_textContent$items = textContent.items).push.apply(_textContent$items, _toConsumableArray(value.items));\n                  pump();\n                }, reject);\n              }\n              var reader = readableStream.getReader();\n              var textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n        }, {\n          key: \"_destroy\",\n          value: function _destroy() {\n            var _this9 = this;\n            this.destroyed = true;\n            this._transport.pageCache[this._pageIndex] = null;\n            var waitOn = [];\n            Object.keys(this.intentStates).forEach(function (intent) {\n              var intentState = _this9.intentStates[intent];\n              _this9._abortOperatorList({\n                intentState: intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n              if (intent === \"oplist\") {\n                return;\n              }\n              intentState.renderTasks.forEach(function (renderTask) {\n                var renderCompleted = renderTask.capability.promise.catch(function () {});\n                waitOn.push(renderCompleted);\n                renderTask.cancel();\n              });\n            });\n            this.objs.clear();\n            this.annotationsPromise = null;\n            this.pendingCleanup = false;\n            return Promise.all(waitOn);\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.pendingCleanup = true;\n            return this._tryCleanup(resetStats);\n          }\n        }, {\n          key: \"_tryCleanup\",\n          value: function _tryCleanup() {\n            var _this10 = this;\n            var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (!this.pendingCleanup || Object.keys(this.intentStates).some(function (intent) {\n              var intentState = _this10.intentStates[intent];\n              return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n            })) {\n              return false;\n            }\n            Object.keys(this.intentStates).forEach(function (intent) {\n              delete _this10.intentStates[intent];\n            });\n            this.objs.clear();\n            this.annotationsPromise = null;\n            if (resetStats && this._stats) {\n              this._stats = new _display_utils.StatTimer();\n            }\n            this.pendingCleanup = false;\n            return true;\n          }\n        }, {\n          key: \"_startRenderPage\",\n          value: function _startRenderPage(transparency, intent) {\n            var intentState = this.intentStates[intent];\n            if (!intentState) {\n              return;\n            }\n            if (this._stats) {\n              this._stats.timeEnd(\"Page Request\");\n            }\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.resolve(transparency);\n            }\n          }\n        }, {\n          key: \"_renderPageChunk\",\n          value: function _renderPageChunk(operatorListChunk, intentState) {\n            for (var i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n            for (var _i4 = 0; _i4 < intentState.renderTasks.length; _i4++) {\n              intentState.renderTasks[_i4].operatorListChanged();\n            }\n            if (operatorListChunk.lastChunk) {\n              this._tryCleanup();\n            }\n          }\n        }, {\n          key: \"_pumpOperatorList\",\n          value: function _pumpOperatorList(args) {\n            var _this11 = this;\n            (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n            var readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n            var reader = readableStream.getReader();\n            var intentState = this.intentStates[args.intent];\n            intentState.streamReader = reader;\n            var pump = function pump() {\n              reader.read().then(function (_ref6) {\n                var value = _ref6.value,\n                  done = _ref6.done;\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n                if (_this11._transport.destroyed) {\n                  return;\n                }\n                _this11._renderPageChunk(value, intentState);\n                pump();\n              }, function (reason) {\n                intentState.streamReader = null;\n                if (_this11._transport.destroyed) {\n                  return;\n                }\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n                  for (var i = 0; i < intentState.renderTasks.length; i++) {\n                    intentState.renderTasks[i].operatorListChanged();\n                  }\n                  _this11._tryCleanup();\n                }\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n            pump();\n          }\n        }, {\n          key: \"_abortOperatorList\",\n          value: function _abortOperatorList(_ref7) {\n            var _this12 = this;\n            var intentState = _ref7.intentState,\n              reason = _ref7.reason,\n              _ref7$force = _ref7.force,\n              force = _ref7$force === void 0 ? false : _ref7$force;\n            (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n            if (!intentState.streamReader) {\n              return;\n            }\n            if (!force) {\n              if (intentState.renderTasks.length !== 0) {\n                return;\n              }\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                intentState.streamReaderCancelTimeout = setTimeout(function () {\n                  _this12._abortOperatorList({\n                    intentState: intentState,\n                    reason: reason,\n                    force: true\n                  });\n                  intentState.streamReaderCancelTimeout = null;\n                }, RENDERING_CANCELLED_TIMEOUT);\n                return;\n              }\n            }\n            intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n            intentState.streamReader = null;\n            if (this._transport.destroyed) {\n              return;\n            }\n            Object.keys(this.intentStates).some(function (intent) {\n              if (_this12.intentStates[intent] === intentState) {\n                delete _this12.intentStates[intent];\n                return true;\n              }\n              return false;\n            });\n            this.cleanup();\n          }\n        }, {\n          key: \"stats\",\n          get: function get() {\n            return this._stats;\n          }\n        }]);\n        return PDFPageProxy;\n      }();\n      exports.PDFPageProxy = PDFPageProxy;\n      var LoopbackPort = /*#__PURE__*/function () {\n        function LoopbackPort() {\n          var defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n          _classCallCheck(this, LoopbackPort);\n          this._listeners = [];\n          this._defer = defer;\n          this._deferred = Promise.resolve(undefined);\n        }\n        _createClass(LoopbackPort, [{\n          key: \"postMessage\",\n          value: function postMessage(obj, transfers) {\n            var _this13 = this;\n            function cloneValue(value) {\n              if (typeof value !== \"object\" || value === null) {\n                return value;\n              }\n              if (cloned.has(value)) {\n                return cloned.get(value);\n              }\n              var buffer, result;\n              if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n                var transferable = transfers && transfers.includes(buffer);\n                if (transferable) {\n                  result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n                } else {\n                  result = new value.constructor(value);\n                }\n                cloned.set(value, result);\n                return result;\n              }\n              result = Array.isArray(value) ? [] : {};\n              cloned.set(value, result);\n              for (var i in value) {\n                var desc = void 0,\n                  p = value;\n                while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n                  p = Object.getPrototypeOf(p);\n                }\n                if (typeof desc.value === \"undefined\") {\n                  continue;\n                }\n                if (typeof desc.value === \"function\") {\n                  if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                    throw new Error(\"LoopbackPort.postMessage - cannot clone: \".concat(value[i]));\n                  }\n                  continue;\n                }\n                result[i] = cloneValue(desc.value);\n              }\n              return result;\n            }\n            if (!this._defer) {\n              this._listeners.forEach(function (listener) {\n                listener.call(_this13, {\n                  data: obj\n                });\n              });\n              return;\n            }\n            var cloned = new WeakMap();\n            var e = {\n              data: cloneValue(obj)\n            };\n            this._deferred.then(function () {\n              _this13._listeners.forEach(function (listener) {\n                listener.call(_this13, e);\n              });\n            });\n          }\n        }, {\n          key: \"addEventListener\",\n          value: function addEventListener(name, listener) {\n            this._listeners.push(listener);\n          }\n        }, {\n          key: \"removeEventListener\",\n          value: function removeEventListener(name, listener) {\n            var i = this._listeners.indexOf(listener);\n            this._listeners.splice(i, 1);\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate() {\n            this._listeners.length = 0;\n          }\n        }]);\n        return LoopbackPort;\n      }();\n      exports.LoopbackPort = LoopbackPort;\n      var PDFWorker = function PDFWorkerClosure() {\n        var pdfWorkerPorts = new WeakMap();\n        var isWorkerDisabled = false;\n        var fallbackWorkerSrc;\n        var nextFakeWorkerId = 0;\n        var fakeWorkerCapability;\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          isWorkerDisabled = true;\n          fallbackWorkerSrc = \"./pdf.worker.js\";\n        } else if (typeof document === \"object\" && \"currentScript\" in document) {\n          var pdfjsFilePath = document.currentScript && document.currentScript.src;\n          if (pdfjsFilePath) {\n            fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n          }\n        }\n        function _getWorkerSrc() {\n          if (_worker_options.GlobalWorkerOptions.workerSrc) {\n            return _worker_options.GlobalWorkerOptions.workerSrc;\n          }\n          if (typeof fallbackWorkerSrc !== \"undefined\") {\n            if (!_is_node.isNodeJS) {\n              (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n            }\n            return fallbackWorkerSrc;\n          }\n          throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n        function getMainThreadWorkerMessageHandler() {\n          var mainWorkerMessageHandler;\n          try {\n            mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n          } catch (ex) {}\n          return mainWorkerMessageHandler || null;\n        }\n        function setupFakeWorkerGlobal() {\n          if (fakeWorkerCapability) {\n            return fakeWorkerCapability.promise;\n          }\n          fakeWorkerCapability = (0, _util.createPromiseCapability)();\n          var loader = /*#__PURE__*/function () {\n            var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n              var mainWorkerMessageHandler, worker;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n                    if (!mainWorkerMessageHandler) {\n                      _context.next = 3;\n                      break;\n                    }\n                    return _context.abrupt(\"return\", mainWorkerMessageHandler);\n                  case 3:\n                    if (!(_is_node.isNodeJS && typeof require === \"function\")) {\n                      _context.next = 6;\n                      break;\n                    }\n                    worker = eval(\"require\")(_getWorkerSrc());\n                    return _context.abrupt(\"return\", worker.WorkerMessageHandler);\n                  case 6:\n                    _context.next = 8;\n                    return (0, _display_utils.loadScript)(_getWorkerSrc());\n                  case 8:\n                    return _context.abrupt(\"return\", window.pdfjsWorker.WorkerMessageHandler);\n                  case 9:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function loader() {\n              return _ref8.apply(this, arguments);\n            };\n          }();\n          loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n          return fakeWorkerCapability.promise;\n        }\n        function createCDNWrapper(url) {\n          var wrapper = \"importScripts('\" + url + \"');\";\n          return URL.createObjectURL(new Blob([wrapper]));\n        }\n        var PDFWorker = /*#__PURE__*/function () {\n          function PDFWorker() {\n            var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref9$name = _ref9.name,\n              name = _ref9$name === void 0 ? null : _ref9$name,\n              _ref9$port = _ref9.port,\n              port = _ref9$port === void 0 ? null : _ref9$port,\n              _ref9$verbosity = _ref9.verbosity,\n              verbosity = _ref9$verbosity === void 0 ? (0, _util.getVerbosityLevel)() : _ref9$verbosity;\n            _classCallCheck(this, PDFWorker);\n            if (port && pdfWorkerPorts.has(port)) {\n              throw new Error(\"Cannot use more than one PDFWorker per port\");\n            }\n            this.name = name;\n            this.destroyed = false;\n            this.postMessageTransfers = true;\n            this.verbosity = verbosity;\n            this._readyCapability = (0, _util.createPromiseCapability)();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n            if (port) {\n              pdfWorkerPorts.set(port, this);\n              this._initializeFromPort(port);\n              return;\n            }\n            this._initialize();\n          }\n          _createClass(PDFWorker, [{\n            key: \"promise\",\n            get: function get() {\n              return this._readyCapability.promise;\n            }\n          }, {\n            key: \"port\",\n            get: function get() {\n              return this._port;\n            }\n          }, {\n            key: \"messageHandler\",\n            get: function get() {\n              return this._messageHandler;\n            }\n          }, {\n            key: \"_initializeFromPort\",\n            value: function _initializeFromPort(port) {\n              this._port = port;\n              this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n              this._messageHandler.on(\"ready\", function () {});\n              this._readyCapability.resolve();\n            }\n          }, {\n            key: \"_initialize\",\n            value: function _initialize() {\n              var _this14 = this;\n              if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n                var workerSrc = _getWorkerSrc();\n                try {\n                  if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                    workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n                  }\n                  var worker = new Worker(workerSrc);\n                  var messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n                  var terminateEarly = function terminateEarly() {\n                    worker.removeEventListener(\"error\", onWorkerError);\n                    messageHandler.destroy();\n                    worker.terminate();\n                    if (_this14.destroyed) {\n                      _this14._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                    } else {\n                      _this14._setupFakeWorker();\n                    }\n                  };\n                  var onWorkerError = function onWorkerError() {\n                    if (!_this14._webWorker) {\n                      terminateEarly();\n                    }\n                  };\n                  worker.addEventListener(\"error\", onWorkerError);\n                  messageHandler.on(\"test\", function (data) {\n                    worker.removeEventListener(\"error\", onWorkerError);\n                    if (_this14.destroyed) {\n                      terminateEarly();\n                      return;\n                    }\n                    if (data) {\n                      _this14._messageHandler = messageHandler;\n                      _this14._port = worker;\n                      _this14._webWorker = worker;\n                      if (!data.supportTransfers) {\n                        _this14.postMessageTransfers = false;\n                      }\n                      _this14._readyCapability.resolve();\n                      messageHandler.send(\"configure\", {\n                        verbosity: _this14.verbosity\n                      });\n                    } else {\n                      _this14._setupFakeWorker();\n                      messageHandler.destroy();\n                      worker.terminate();\n                    }\n                  });\n                  messageHandler.on(\"ready\", function (data) {\n                    worker.removeEventListener(\"error\", onWorkerError);\n                    if (_this14.destroyed) {\n                      terminateEarly();\n                      return;\n                    }\n                    try {\n                      sendTest();\n                    } catch (e) {\n                      _this14._setupFakeWorker();\n                    }\n                  });\n                  var sendTest = function sendTest() {\n                    var testObj = new Uint8Array([_this14.postMessageTransfers ? 255 : 0]);\n                    try {\n                      messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                    } catch (ex) {\n                      (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                      testObj[0] = 0;\n                      messageHandler.send(\"test\", testObj);\n                    }\n                  };\n                  sendTest();\n                  return;\n                } catch (e) {\n                  (0, _util.info)(\"The worker has been disabled.\");\n                }\n              }\n              this._setupFakeWorker();\n            }\n          }, {\n            key: \"_setupFakeWorker\",\n            value: function _setupFakeWorker() {\n              var _this15 = this;\n              if (!isWorkerDisabled) {\n                (0, _util.warn)(\"Setting up fake worker.\");\n                isWorkerDisabled = true;\n              }\n              setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {\n                if (_this15.destroyed) {\n                  _this15._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  return;\n                }\n                var port = new LoopbackPort();\n                _this15._port = port;\n                var id = \"fake\" + nextFakeWorkerId++;\n                var workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n                WorkerMessageHandler.setup(workerHandler, port);\n                var messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n                _this15._messageHandler = messageHandler;\n                _this15._readyCapability.resolve();\n                messageHandler.send(\"configure\", {\n                  verbosity: _this15.verbosity\n                });\n              }).catch(function (reason) {\n                _this15._readyCapability.reject(new Error(\"Setting up fake worker failed: \\\"\".concat(reason.message, \"\\\".\")));\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.destroyed = true;\n              if (this._webWorker) {\n                this._webWorker.terminate();\n                this._webWorker = null;\n              }\n              pdfWorkerPorts.delete(this._port);\n              this._port = null;\n              if (this._messageHandler) {\n                this._messageHandler.destroy();\n                this._messageHandler = null;\n              }\n            }\n          }], [{\n            key: \"fromPort\",\n            value: function fromPort(params) {\n              if (!params || !params.port) {\n                throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n              }\n              if (pdfWorkerPorts.has(params.port)) {\n                return pdfWorkerPorts.get(params.port);\n              }\n              return new PDFWorker(params);\n            }\n          }, {\n            key: \"getWorkerSrc\",\n            value: function getWorkerSrc() {\n              return _getWorkerSrc();\n            }\n          }]);\n          return PDFWorker;\n        }();\n        return PDFWorker;\n      }();\n      exports.PDFWorker = PDFWorker;\n      var WorkerTransport = /*#__PURE__*/function () {\n        function WorkerTransport(messageHandler, loadingTask, networkStream, params) {\n          _classCallCheck(this, WorkerTransport);\n          this.messageHandler = messageHandler;\n          this.loadingTask = loadingTask;\n          this.commonObjs = new PDFObjects();\n          this.fontLoader = new _font_loader.FontLoader({\n            docId: loadingTask.docId,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n          });\n          this._params = params;\n          this.CMapReaderFactory = new params.CMapReaderFactory({\n            baseUrl: params.cMapUrl,\n            isCompressed: params.cMapPacked\n          });\n          this.destroyed = false;\n          this.destroyCapability = null;\n          this._passwordCapability = null;\n          this._networkStream = networkStream;\n          this._fullReader = null;\n          this._lastProgress = null;\n          this.pageCache = [];\n          this.pagePromises = [];\n          this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n          this.setupMessageHandler();\n        }\n        _createClass(WorkerTransport, [{\n          key: \"destroy\",\n          value: function destroy() {\n            var _this16 = this;\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n            this.destroyed = true;\n            this.destroyCapability = (0, _util.createPromiseCapability)();\n            if (this._passwordCapability) {\n              this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            }\n            var waitOn = [];\n            this.pageCache.forEach(function (page) {\n              if (page) {\n                waitOn.push(page._destroy());\n              }\n            });\n            this.pageCache.length = 0;\n            this.pagePromises.length = 0;\n            var terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(function () {\n              _this16.fontLoader.clear();\n              if (_this16._networkStream) {\n                _this16._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              }\n              if (_this16.messageHandler) {\n                _this16.messageHandler.destroy();\n                _this16.messageHandler = null;\n              }\n              _this16.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n        }, {\n          key: \"setupMessageHandler\",\n          value: function setupMessageHandler() {\n            var _this17 = this;\n            var messageHandler = this.messageHandler,\n              loadingTask = this.loadingTask;\n            messageHandler.on(\"GetReader\", function (data, sink) {\n              (0, _util.assert)(_this17._networkStream);\n              _this17._fullReader = _this17._networkStream.getFullReader();\n              _this17._fullReader.onProgress = function (evt) {\n                _this17._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n              sink.onPull = function () {\n                _this17._fullReader.read().then(function (_ref10) {\n                  var value = _ref10.value,\n                    done = _ref10.done;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value));\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = function (reason) {\n                _this17._fullReader.cancel(reason);\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", function (data) {\n              var headersCapability = (0, _util.createPromiseCapability)();\n              var fullReader = _this17._fullReader;\n              fullReader.headersReady.then(function () {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (_this17._lastProgress && loadingTask.onProgress) {\n                    loadingTask.onProgress(_this17._lastProgress);\n                  }\n                  fullReader.onProgress = function (evt) {\n                    if (loadingTask.onProgress) {\n                      loadingTask.onProgress({\n                        loaded: evt.loaded,\n                        total: evt.total\n                      });\n                    }\n                  };\n                }\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", function (data, sink) {\n              (0, _util.assert)(_this17._networkStream);\n              var rangeReader = _this17._networkStream.getRangeReader(data.begin, data.end);\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n              sink.onPull = function () {\n                rangeReader.read().then(function (_ref11) {\n                  var value = _ref11.value,\n                    done = _ref11.done;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value));\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = function (reason) {\n                rangeReader.cancel(reason);\n              };\n            });\n            messageHandler.on(\"GetDoc\", function (_ref12) {\n              var pdfInfo = _ref12.pdfInfo;\n              _this17._numPages = pdfInfo.numPages;\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, _this17));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              var reason;\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n              }\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", function (exception) {\n              _this17._passwordCapability = (0, _util.createPromiseCapability)();\n              if (loadingTask.onPassword) {\n                var updatePassword = function updatePassword(password) {\n                  _this17._passwordCapability.resolve({\n                    password: password\n                  });\n                };\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  _this17._passwordCapability.reject(ex);\n                }\n              } else {\n                _this17._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n              return _this17._passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", function (data) {\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: data.length,\n                  total: data.length\n                });\n              }\n              _this17.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", function (data) {\n              if (_this17.destroyed) {\n                return;\n              }\n              var page = _this17.pageCache[data.pageIndex];\n              page._startRenderPage(data.transparency, data.intent);\n            });\n            messageHandler.on(\"commonobj\", function (data) {\n              if (_this17.destroyed) {\n                return;\n              }\n              var _data = _slicedToArray(data, 3),\n                id = _data[0],\n                type = _data[1],\n                exportedData = _data[2];\n              if (_this17.commonObjs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Font\":\n                  var params = _this17._params;\n                  if (\"error\" in exportedData) {\n                    var exportedError = exportedData.error;\n                    (0, _util.warn)(\"Error during font loading: \".concat(exportedError));\n                    _this17.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n                  var fontRegistry = null;\n                  if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                    fontRegistry = {\n                      registerFont: function registerFont(font, url) {\n                        globalThis.FontInspector.fontAdded(font, url);\n                      }\n                    };\n                  }\n                  var font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    onUnsupportedFeature: _this17._onUnsupportedFeature.bind(_this17),\n                    fontRegistry: fontRegistry\n                  });\n                  _this17.fontLoader.bind(font).then(function () {\n                    _this17.commonObjs.resolve(id, font);\n                  }, function (reason) {\n                    messageHandler.sendWithPromise(\"FontFallback\", {\n                      id: id\n                    }).finally(function () {\n                      _this17.commonObjs.resolve(id, font);\n                    });\n                  });\n                  break;\n                case \"FontPath\":\n                case \"FontType3Res\":\n                  _this17.commonObjs.resolve(id, exportedData);\n                  break;\n                default:\n                  throw new Error(\"Got unknown common object type \".concat(type));\n              }\n            });\n            messageHandler.on(\"obj\", function (data) {\n              if (_this17.destroyed) {\n                return undefined;\n              }\n              var _data2 = _slicedToArray(data, 4),\n                id = _data2[0],\n                pageIndex = _data2[1],\n                type = _data2[2],\n                imageData = _data2[3];\n              var pageProxy = _this17.pageCache[pageIndex];\n              if (pageProxy.objs.has(id)) {\n                return undefined;\n              }\n              switch (type) {\n                case \"JpegStream\":\n                  return new Promise(function (resolve, reject) {\n                    var img = new Image();\n                    img.onload = function () {\n                      resolve(img);\n                    };\n                    img.onerror = function () {\n                      reject(new Error(\"Error during JPEG image loading\"));\n                      (0, _display_utils.releaseImageResources)(img);\n                    };\n                    img.src = imageData;\n                  }).then(function (img) {\n                    pageProxy.objs.resolve(id, img);\n                  });\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n                  if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                    pageProxy.cleanupAfterRender = true;\n                  }\n                  break;\n                default:\n                  throw new Error(\"Got unknown object type \".concat(type));\n              }\n              return undefined;\n            });\n            messageHandler.on(\"DocProgress\", function (data) {\n              if (_this17.destroyed) {\n                return;\n              }\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: data.loaded,\n                  total: data.total\n                });\n              }\n            });\n            messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n            messageHandler.on(\"JpegDecode\", function (data) {\n              if (_this17.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed\"));\n              }\n              if (typeof document === \"undefined\") {\n                return Promise.reject(new Error('\"document\" is not defined.'));\n              }\n              var _data3 = _slicedToArray(data, 2),\n                imageUrl = _data3[0],\n                components = _data3[1];\n              if (components !== 3 && components !== 1) {\n                return Promise.reject(new Error(\"Only 3 components or 1 component can be returned\"));\n              }\n              return new Promise(function (resolve, reject) {\n                var img = new Image();\n                img.onload = function () {\n                  var width = img.width,\n                    height = img.height;\n                  var size = width * height;\n                  var rgbaLength = size * 4;\n                  var buf = new Uint8ClampedArray(size * components);\n                  var tmpCanvas = document.createElement(\"canvas\");\n                  tmpCanvas.width = width;\n                  tmpCanvas.height = height;\n                  var tmpCtx = tmpCanvas.getContext(\"2d\");\n                  tmpCtx.drawImage(img, 0, 0);\n                  var data = tmpCtx.getImageData(0, 0, width, height).data;\n                  if (components === 3) {\n                    for (var i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n                      buf[j] = data[i];\n                      buf[j + 1] = data[i + 1];\n                      buf[j + 2] = data[i + 2];\n                    }\n                  } else if (components === 1) {\n                    for (var _i5 = 0, _j = 0; _i5 < rgbaLength; _i5 += 4, _j++) {\n                      buf[_j] = data[_i5];\n                    }\n                  }\n                  resolve({\n                    data: buf,\n                    width: width,\n                    height: height\n                  });\n                  (0, _display_utils.releaseImageResources)(img);\n                  tmpCanvas.width = 0;\n                  tmpCanvas.height = 0;\n                  tmpCanvas = null;\n                  tmpCtx = null;\n                };\n                img.onerror = function () {\n                  reject(new Error(\"JpegDecode failed to load image\"));\n                  (0, _display_utils.releaseImageResources)(img);\n                };\n                img.src = imageUrl;\n              });\n            });\n            messageHandler.on(\"FetchBuiltInCMap\", function (data, sink) {\n              if (_this17.destroyed) {\n                sink.error(new Error(\"Worker was destroyed\"));\n                return;\n              }\n              var fetched = false;\n              sink.onPull = function () {\n                if (fetched) {\n                  sink.close();\n                  return;\n                }\n                fetched = true;\n                _this17.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n                  sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n                }).catch(function (reason) {\n                  sink.error(reason);\n                });\n              };\n            });\n          }\n        }, {\n          key: \"_onUnsupportedFeature\",\n          value: function _onUnsupportedFeature(_ref13) {\n            var featureId = _ref13.featureId;\n            if (this.destroyed) {\n              return;\n            }\n            if (this.loadingTask.onUnsupportedFeature) {\n              this.loadingTask.onUnsupportedFeature(featureId);\n            }\n          }\n        }, {\n          key: \"getData\",\n          value: function getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageNumber) {\n            var _this18 = this;\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request\"));\n            }\n            var pageIndex = pageNumber - 1;\n            if (pageIndex in this.pagePromises) {\n              return this.pagePromises[pageIndex];\n            }\n            var promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex: pageIndex\n            }).then(function (pageInfo) {\n              if (_this18.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n              var page = new PDFPageProxy(pageIndex, pageInfo, _this18, _this18._params.pdfBug);\n              _this18.pageCache[pageIndex] = page;\n              return page;\n            });\n            this.pagePromises[pageIndex] = promise;\n            return promise;\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(ref) {\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              ref: ref\n            }).catch(function (reason) {\n              return Promise.reject(new Error(reason));\n            });\n          }\n        }, {\n          key: \"getAnnotations\",\n          value: function getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex: pageIndex,\n              intent: intent\n            });\n          }\n        }, {\n          key: \"getDestinations\",\n          value: function getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id: id\n            });\n          }\n        }, {\n          key: \"getPageLabels\",\n          value: function getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n        }, {\n          key: \"getPageLayout\",\n          value: function getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n        }, {\n          key: \"getPageMode\",\n          value: function getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n        }, {\n          key: \"getViewerPreferences\",\n          value: function getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n        }, {\n          key: \"getOpenAction\",\n          value: function getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n        }, {\n          key: \"getAttachments\",\n          value: function getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n        }, {\n          key: \"getJavaScript\",\n          value: function getJavaScript() {\n            return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n          }\n        }, {\n          key: \"getOutline\",\n          value: function getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n        }, {\n          key: \"getPermissions\",\n          value: function getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n        }, {\n          key: \"getMetadata\",\n          value: function getMetadata() {\n            var _this19 = this;\n            return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(function (results) {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: _this19._fullReader ? _this19._fullReader.filename : null\n              };\n            });\n          }\n        }, {\n          key: \"getStats\",\n          value: function getStats() {\n            return this.messageHandler.sendWithPromise(\"GetStats\", null);\n          }\n        }, {\n          key: \"startCleanup\",\n          value: function startCleanup() {\n            var _this20 = this;\n            return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(function () {\n              for (var i = 0, ii = _this20.pageCache.length; i < ii; i++) {\n                var page = _this20.pageCache[i];\n                if (page) {\n                  var cleanupSuccessful = page.cleanup();\n                  if (!cleanupSuccessful) {\n                    throw new Error(\"startCleanup: Page \".concat(i + 1, \" is currently rendering.\"));\n                  }\n                }\n              }\n              _this20.commonObjs.clear();\n              _this20.fontLoader.clear();\n            });\n          }\n        }, {\n          key: \"loadingParams\",\n          get: function get() {\n            var params = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch: params.disableAutoFetch,\n              disableCreateObjectURL: params.disableCreateObjectURL,\n              disableFontFace: params.disableFontFace,\n              nativeImageDecoderSupport: params.nativeImageDecoderSupport\n            });\n          }\n        }]);\n        return WorkerTransport;\n      }();\n      var PDFObjects = /*#__PURE__*/function () {\n        function PDFObjects() {\n          _classCallCheck(this, PDFObjects);\n          this._objs = Object.create(null);\n        }\n        _createClass(PDFObjects, [{\n          key: \"_ensureObj\",\n          value: function _ensureObj(objId) {\n            if (this._objs[objId]) {\n              return this._objs[objId];\n            }\n            return this._objs[objId] = {\n              capability: (0, _util.createPromiseCapability)(),\n              data: null,\n              resolved: false\n            };\n          }\n        }, {\n          key: \"get\",\n          value: function get(objId) {\n            var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (callback) {\n              this._ensureObj(objId).capability.promise.then(callback);\n              return null;\n            }\n            var obj = this._objs[objId];\n            if (!obj || !obj.resolved) {\n              throw new Error(\"Requesting object that isn't resolved yet \".concat(objId, \".\"));\n            }\n            return obj.data;\n          }\n        }, {\n          key: \"has\",\n          value: function has(objId) {\n            var obj = this._objs[objId];\n            return obj ? obj.resolved : false;\n          }\n        }, {\n          key: \"resolve\",\n          value: function resolve(objId, data) {\n            var obj = this._ensureObj(objId);\n            obj.resolved = true;\n            obj.data = data;\n            obj.capability.resolve(data);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            for (var objId in this._objs) {\n              var data = this._objs[objId].data;\n              if (typeof Image !== \"undefined\" && data instanceof Image) {\n                (0, _display_utils.releaseImageResources)(data);\n              }\n            }\n            this._objs = Object.create(null);\n          }\n        }]);\n        return PDFObjects;\n      }();\n      var RenderTask = /*#__PURE__*/function () {\n        function RenderTask(internalRenderTask) {\n          _classCallCheck(this, RenderTask);\n          this._internalRenderTask = internalRenderTask;\n          this.onContinue = null;\n        }\n        _createClass(RenderTask, [{\n          key: \"promise\",\n          get: function get() {\n            return this._internalRenderTask.capability.promise;\n          }\n        }, {\n          key: \"cancel\",\n          value: function cancel() {\n            this._internalRenderTask.cancel();\n          }\n        }, {\n          key: \"then\",\n          value: function then(onFulfilled, onRejected) {\n            throw new Error(\"Removed API method: \" + \"RenderTask.then, use the `promise` getter instead.\");\n          }\n        }]);\n        return RenderTask;\n      }();\n      var InternalRenderTask = function InternalRenderTaskClosure() {\n        var canvasInRendering = new WeakSet();\n        var InternalRenderTask = /*#__PURE__*/function () {\n          function InternalRenderTask(_ref14) {\n            var callback = _ref14.callback,\n              params = _ref14.params,\n              objs = _ref14.objs,\n              commonObjs = _ref14.commonObjs,\n              operatorList = _ref14.operatorList,\n              pageIndex = _ref14.pageIndex,\n              canvasFactory = _ref14.canvasFactory,\n              webGLContext = _ref14.webGLContext,\n              _ref14$useRequestAnim = _ref14.useRequestAnimationFrame,\n              useRequestAnimationFrame = _ref14$useRequestAnim === void 0 ? false : _ref14$useRequestAnim,\n              _ref14$pdfBug = _ref14.pdfBug,\n              pdfBug = _ref14$pdfBug === void 0 ? false : _ref14$pdfBug;\n            _classCallCheck(this, InternalRenderTask);\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.webGLContext = webGLContext;\n            this._pdfBug = pdfBug;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = (0, _util.createPromiseCapability)();\n            this.task = new RenderTask(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n          _createClass(InternalRenderTask, [{\n            key: \"initializeGraphics\",\n            value: function initializeGraphics() {\n              var transparency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n              if (this.cancelled) {\n                return;\n              }\n              if (this._canvas) {\n                if (canvasInRendering.has(this._canvas)) {\n                  throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n                }\n                canvasInRendering.add(this._canvas);\n              }\n              if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n                this.stepper = globalThis.StepperManager.create(this._pageIndex);\n                this.stepper.init(this.operatorList);\n                this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n              }\n              var _this$params = this.params,\n                canvasContext = _this$params.canvasContext,\n                viewport = _this$params.viewport,\n                transform = _this$params.transform,\n                imageLayer = _this$params.imageLayer,\n                background = _this$params.background;\n              this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n              this.gfx.beginDrawing({\n                transform: transform,\n                viewport: viewport,\n                transparency: transparency,\n                background: background\n              });\n              this.operatorListIdx = 0;\n              this.graphicsReady = true;\n              if (this.graphicsReadyCallback) {\n                this.graphicsReadyCallback();\n              }\n            }\n          }, {\n            key: \"cancel\",\n            value: function cancel() {\n              var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n              this.running = false;\n              this.cancelled = true;\n              if (this.gfx) {\n                this.gfx.endDrawing();\n              }\n              if (this._canvas) {\n                canvasInRendering.delete(this._canvas);\n              }\n              this.callback(error || new _display_utils.RenderingCancelledException(\"Rendering cancelled, page \".concat(this._pageIndex + 1), \"canvas\"));\n            }\n          }, {\n            key: \"operatorListChanged\",\n            value: function operatorListChanged() {\n              if (!this.graphicsReady) {\n                if (!this.graphicsReadyCallback) {\n                  this.graphicsReadyCallback = this._continueBound;\n                }\n                return;\n              }\n              if (this.stepper) {\n                this.stepper.updateOperatorList(this.operatorList);\n              }\n              if (this.running) {\n                return;\n              }\n              this._continue();\n            }\n          }, {\n            key: \"_continue\",\n            value: function _continue() {\n              this.running = true;\n              if (this.cancelled) {\n                return;\n              }\n              if (this.task.onContinue) {\n                this.task.onContinue(this._scheduleNextBound);\n              } else {\n                this._scheduleNext();\n              }\n            }\n          }, {\n            key: \"_scheduleNext\",\n            value: function _scheduleNext() {\n              var _this21 = this;\n              if (this._useRequestAnimationFrame) {\n                window.requestAnimationFrame(function () {\n                  _this21._nextBound().catch(_this21.cancel.bind(_this21));\n                });\n              } else {\n                Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n              }\n            }\n          }, {\n            key: \"_next\",\n            value: function () {\n              var _next2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!this.cancelled) {\n                        _context2.next = 2;\n                        break;\n                      }\n                      return _context2.abrupt(\"return\");\n                    case 2:\n                      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n                      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n                        this.running = false;\n                        if (this.operatorList.lastChunk) {\n                          this.gfx.endDrawing();\n                          if (this._canvas) {\n                            canvasInRendering.delete(this._canvas);\n                          }\n                          this.callback();\n                        }\n                      }\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2, this);\n              }));\n              function _next() {\n                return _next2.apply(this, arguments);\n              }\n              return _next;\n            }()\n          }]);\n          return InternalRenderTask;\n        }();\n        return InternalRenderTask;\n      }();\n      var version = '2.4.456';\n      exports.version = version;\n      var build = '228a591c';\n      exports.build = build;\n\n      /***/\n    }, /* 4 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.addLinkAttributes = addLinkAttributes;\n      exports.getFilenameFromUrl = getFilenameFromUrl;\n      exports.isFetchSupported = isFetchSupported;\n      exports.isValidFetchUrl = isValidFetchUrl;\n      exports.loadScript = loadScript;\n      exports.deprecated = deprecated;\n      exports.releaseImageResources = releaseImageResources;\n      exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n      exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n      var SVG_NS = \"http://www.w3.org/2000/svg\";\n      var DOMCanvasFactory = /*#__PURE__*/function () {\n        function DOMCanvasFactory() {\n          _classCallCheck(this, DOMCanvasFactory);\n        }\n        _createClass(DOMCanvasFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n            canvas.width = width;\n            canvas.height = height;\n            return {\n              canvas: canvas,\n              context: context\n            };\n          }\n        }, {\n          key: \"reset\",\n          value: function reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n        }]);\n        return DOMCanvasFactory;\n      }();\n      exports.DOMCanvasFactory = DOMCanvasFactory;\n      var DOMCMapReaderFactory = /*#__PURE__*/function () {\n        function DOMCMapReaderFactory(_ref15) {\n          var _ref15$baseUrl = _ref15.baseUrl,\n            baseUrl = _ref15$baseUrl === void 0 ? null : _ref15$baseUrl,\n            _ref15$isCompressed = _ref15.isCompressed,\n            isCompressed = _ref15$isCompressed === void 0 ? false : _ref15$isCompressed;\n          _classCallCheck(this, DOMCMapReaderFactory);\n          this.baseUrl = baseUrl;\n          this.isCompressed = isCompressed;\n        }\n        _createClass(DOMCMapReaderFactory, [{\n          key: \"fetch\",\n          value: function (_fetch) {\n            function fetch(_x) {\n              return _fetch.apply(this, arguments);\n            }\n            fetch.toString = function () {\n              return _fetch.toString();\n            };\n            return fetch;\n          }( /*#__PURE__*/function () {\n            var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref16) {\n              var _this22 = this;\n              var name, url, compressionType;\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    name = _ref16.name;\n                    if (this.baseUrl) {\n                      _context4.next = 3;\n                      break;\n                    }\n                    throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n                  case 3:\n                    if (name) {\n                      _context4.next = 5;\n                      break;\n                    }\n                    throw new Error(\"CMap name must be specified.\");\n                  case 5:\n                    url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n                    compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n                    if (!(isFetchSupported() && isValidFetchUrl(url, document.baseURI))) {\n                      _context4.next = 9;\n                      break;\n                    }\n                    return _context4.abrupt(\"return\", fetch(url).then( /*#__PURE__*/function () {\n                      var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(response) {\n                        var cMapData;\n                        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                          while (1) switch (_context3.prev = _context3.next) {\n                            case 0:\n                              if (response.ok) {\n                                _context3.next = 2;\n                                break;\n                              }\n                              throw new Error(response.statusText);\n                            case 2:\n                              if (!_this22.isCompressed) {\n                                _context3.next = 10;\n                                break;\n                              }\n                              _context3.t0 = Uint8Array;\n                              _context3.next = 6;\n                              return response.arrayBuffer();\n                            case 6:\n                              _context3.t1 = _context3.sent;\n                              cMapData = new _context3.t0(_context3.t1);\n                              _context3.next = 15;\n                              break;\n                            case 10:\n                              _context3.t2 = (0, _util.stringToBytes);\n                              _context3.next = 13;\n                              return response.text();\n                            case 13:\n                              _context3.t3 = _context3.sent;\n                              cMapData = (0, _context3.t2)(_context3.t3);\n                            case 15:\n                              return _context3.abrupt(\"return\", {\n                                cMapData: cMapData,\n                                compressionType: compressionType\n                              });\n                            case 16:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }, _callee3);\n                      }));\n                      return function (_x3) {\n                        return _ref18.apply(this, arguments);\n                      };\n                    }()).catch(function (reason) {\n                      throw new Error(\"Unable to load \".concat(_this22.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                    }));\n                  case 9:\n                    return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                      var request = new XMLHttpRequest();\n                      request.open(\"GET\", url, true);\n                      if (_this22.isCompressed) {\n                        request.responseType = \"arraybuffer\";\n                      }\n                      request.onreadystatechange = function () {\n                        if (request.readyState !== XMLHttpRequest.DONE) {\n                          return;\n                        }\n                        if (request.status === 200 || request.status === 0) {\n                          var cMapData;\n                          if (_this22.isCompressed && request.response) {\n                            cMapData = new Uint8Array(request.response);\n                          } else if (!_this22.isCompressed && request.responseText) {\n                            cMapData = (0, _util.stringToBytes)(request.responseText);\n                          }\n                          if (cMapData) {\n                            resolve({\n                              cMapData: cMapData,\n                              compressionType: compressionType\n                            });\n                            return;\n                          }\n                        }\n                        reject(new Error(request.statusText));\n                      };\n                      request.send(null);\n                    }).catch(function (reason) {\n                      throw new Error(\"Unable to load \".concat(_this22.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                    }));\n                  case 10:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4, this);\n            }));\n            return function (_x2) {\n              return _ref17.apply(this, arguments);\n            };\n          }())\n        }]);\n        return DOMCMapReaderFactory;\n      }();\n      exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n      var DOMSVGFactory = /*#__PURE__*/function () {\n        function DOMSVGFactory() {\n          _classCallCheck(this, DOMSVGFactory);\n        }\n        _createClass(DOMSVGFactory, [{\n          key: \"create\",\n          value: function create(width, height) {\n            (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n            var svg = document.createElementNS(SVG_NS, \"svg:svg\");\n            svg.setAttribute(\"version\", \"1.1\");\n            svg.setAttribute(\"width\", width + \"px\");\n            svg.setAttribute(\"height\", height + \"px\");\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n            return svg;\n          }\n        }, {\n          key: \"createElement\",\n          value: function createElement(type) {\n            (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n            return document.createElementNS(SVG_NS, type);\n          }\n        }]);\n        return DOMSVGFactory;\n      }();\n      exports.DOMSVGFactory = DOMSVGFactory;\n      var PageViewport = /*#__PURE__*/function () {\n        function PageViewport(_ref19) {\n          var viewBox = _ref19.viewBox,\n            scale = _ref19.scale,\n            rotation = _ref19.rotation,\n            _ref19$offsetX = _ref19.offsetX,\n            offsetX = _ref19$offsetX === void 0 ? 0 : _ref19$offsetX,\n            _ref19$offsetY = _ref19.offsetY,\n            offsetY = _ref19$offsetY === void 0 ? 0 : _ref19$offsetY,\n            _ref19$dontFlip = _ref19.dontFlip,\n            dontFlip = _ref19$dontFlip === void 0 ? false : _ref19$dontFlip;\n          _classCallCheck(this, PageViewport);\n          this.viewBox = viewBox;\n          this.scale = scale;\n          this.rotation = rotation;\n          this.offsetX = offsetX;\n          this.offsetY = offsetY;\n          var centerX = (viewBox[2] + viewBox[0]) / 2;\n          var centerY = (viewBox[3] + viewBox[1]) / 2;\n          var rotateA, rotateB, rotateC, rotateD;\n          rotation = rotation % 360;\n          rotation = rotation < 0 ? rotation + 360 : rotation;\n          switch (rotation) {\n            case 180:\n              rotateA = -1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = 1;\n              break;\n            case 90:\n              rotateA = 0;\n              rotateB = 1;\n              rotateC = 1;\n              rotateD = 0;\n              break;\n            case 270:\n              rotateA = 0;\n              rotateB = -1;\n              rotateC = -1;\n              rotateD = 0;\n              break;\n            default:\n              rotateA = 1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = -1;\n              break;\n          }\n          if (dontFlip) {\n            rotateC = -rotateC;\n            rotateD = -rotateD;\n          }\n          var offsetCanvasX, offsetCanvasY;\n          var width, height;\n          if (rotateA === 0) {\n            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n            width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          } else {\n            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n            width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          }\n          this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n          this.width = width;\n          this.height = height;\n        }\n        _createClass(PageViewport, [{\n          key: \"clone\",\n          value: function clone() {\n            var _ref20 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref20$scale = _ref20.scale,\n              scale = _ref20$scale === void 0 ? this.scale : _ref20$scale,\n              _ref20$rotation = _ref20.rotation,\n              rotation = _ref20$rotation === void 0 ? this.rotation : _ref20$rotation,\n              _ref20$offsetX = _ref20.offsetX,\n              offsetX = _ref20$offsetX === void 0 ? this.offsetX : _ref20$offsetX,\n              _ref20$offsetY = _ref20.offsetY,\n              offsetY = _ref20$offsetY === void 0 ? this.offsetY : _ref20$offsetY,\n              _ref20$dontFlip = _ref20.dontFlip,\n              dontFlip = _ref20$dontFlip === void 0 ? false : _ref20$dontFlip;\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale: scale,\n              rotation: rotation,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              dontFlip: dontFlip\n            });\n          }\n        }, {\n          key: \"convertToViewportPoint\",\n          value: function convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n        }, {\n          key: \"convertToViewportRectangle\",\n          value: function convertToViewportRectangle(rect) {\n            var topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n            var bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n        }, {\n          key: \"convertToPdfPoint\",\n          value: function convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n        }]);\n        return PageViewport;\n      }();\n      exports.PageViewport = PageViewport;\n      var RenderingCancelledException = /*#__PURE__*/function (_util$BaseException) {\n        _inherits(RenderingCancelledException, _util$BaseException);\n        var _super8 = _createSuper(RenderingCancelledException);\n        function RenderingCancelledException(msg, type) {\n          var _this23;\n          _classCallCheck(this, RenderingCancelledException);\n          _this23 = _super8.call(this, msg);\n          _this23.type = type;\n          return _this23;\n        }\n        return _createClass(RenderingCancelledException);\n      }(_util.BaseException);\n      exports.RenderingCancelledException = RenderingCancelledException;\n      var LinkTarget = {\n        NONE: 0,\n        SELF: 1,\n        BLANK: 2,\n        PARENT: 3,\n        TOP: 4\n      };\n      exports.LinkTarget = LinkTarget;\n      function addLinkAttributes(link) {\n        var _ref21 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          url = _ref21.url,\n          target = _ref21.target,\n          rel = _ref21.rel,\n          _ref21$enabled = _ref21.enabled,\n          enabled = _ref21$enabled === void 0 ? true : _ref21$enabled;\n        (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n        var urlNullRemoved = (0, _util.removeNullCharacters)(url);\n        if (enabled) {\n          link.href = link.title = urlNullRemoved;\n        } else {\n          link.href = \"\";\n          link.title = \"Disabled: \".concat(urlNullRemoved);\n          link.onclick = function () {\n            return false;\n          };\n        }\n        var targetStr = \"\";\n        switch (target) {\n          case LinkTarget.NONE:\n            break;\n          case LinkTarget.SELF:\n            targetStr = \"_self\";\n            break;\n          case LinkTarget.BLANK:\n            targetStr = \"_blank\";\n            break;\n          case LinkTarget.PARENT:\n            targetStr = \"_parent\";\n            break;\n          case LinkTarget.TOP:\n            targetStr = \"_top\";\n            break;\n        }\n        link.target = targetStr;\n        link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n      }\n      function getFilenameFromUrl(url) {\n        var anchor = url.indexOf(\"#\");\n        var query = url.indexOf(\"?\");\n        var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n      }\n      var StatTimer = /*#__PURE__*/function () {\n        function StatTimer() {\n          _classCallCheck(this, StatTimer);\n          this.started = Object.create(null);\n          this.times = [];\n        }\n        _createClass(StatTimer, [{\n          key: \"time\",\n          value: function time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(\"Timer is already running for \".concat(name));\n            }\n            this.started[name] = Date.now();\n          }\n        }, {\n          key: \"timeEnd\",\n          value: function timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(\"Timer has not been started for \".concat(name));\n            }\n            this.times.push({\n              name: name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n        }, {\n          key: \"toString\",\n          value: function toString() {\n            var outBuf = [];\n            var longest = 0;\n            var _iterator5 = _createForOfIteratorHelper(this.times),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var time = _step5.value;\n                var name = time.name;\n                if (name.length > longest) {\n                  longest = name.length;\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n            var _iterator6 = _createForOfIteratorHelper(this.times),\n              _step6;\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var _time = _step6.value;\n                var duration = _time.end - _time.start;\n                outBuf.push(\"\".concat(_time.name.padEnd(longest), \" \").concat(duration, \"ms\\n\"));\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n            return outBuf.join(\"\");\n          }\n        }]);\n        return StatTimer;\n      }();\n      exports.StatTimer = StatTimer;\n      function isFetchSupported() {\n        return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n      }\n      function isValidFetchUrl(url, baseUrl) {\n        try {\n          var _ref22 = baseUrl ? new URL(url, baseUrl) : new URL(url),\n            protocol = _ref22.protocol;\n          return protocol === \"http:\" || protocol === \"https:\";\n        } catch (ex) {\n          return false;\n        }\n      }\n      function loadScript(src) {\n        return new Promise(function (resolve, reject) {\n          var script = document.createElement(\"script\");\n          script.src = src;\n          script.onload = resolve;\n          script.onerror = function () {\n            reject(new Error(\"Cannot load script at: \".concat(script.src)));\n          };\n          (document.head || document.documentElement).appendChild(script);\n        });\n      }\n      function deprecated(details) {\n        console.log(\"Deprecated API usage: \" + details);\n      }\n      function releaseImageResources(img) {\n        (0, _util.assert)(img instanceof Image, \"Invalid `img` parameter.\");\n        var url = img.src;\n        if (typeof url === \"string\" && url.startsWith(\"blob:\") && URL.revokeObjectURL) {\n          URL.revokeObjectURL(url);\n        }\n        img.removeAttribute(\"src\");\n      }\n      var pdfDateStringRegex;\n      var PDFDateString = /*#__PURE__*/function () {\n        function PDFDateString() {\n          _classCallCheck(this, PDFDateString);\n        }\n        _createClass(PDFDateString, null, [{\n          key: \"toDateObject\",\n          value: function toDateObject(input) {\n            if (!input || !(0, _util.isString)(input)) {\n              return null;\n            }\n            if (!pdfDateStringRegex) {\n              pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            }\n            var matches = pdfDateStringRegex.exec(input);\n            if (!matches) {\n              return null;\n            }\n            var year = parseInt(matches[1], 10);\n            var month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            var day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            var hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            var minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            var second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            var universalTimeRelation = matches[7] || \"Z\";\n            var offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            var offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n        }]);\n        return PDFDateString;\n      }();\n      exports.PDFDateString = PDFDateString;\n\n      /***/\n    }, /* 5 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontLoader = exports.FontFaceObject = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var BaseFontLoader = /*#__PURE__*/function () {\n        function BaseFontLoader(_ref23) {\n          var docId = _ref23.docId,\n            onUnsupportedFeature = _ref23.onUnsupportedFeature;\n          _classCallCheck(this, BaseFontLoader);\n          if (this.constructor === BaseFontLoader) {\n            (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n          }\n          this.docId = docId;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.nativeFontFaces = [];\n          this.styleElement = null;\n        }\n        _createClass(BaseFontLoader, [{\n          key: \"addNativeFontFace\",\n          value: function addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.push(nativeFontFace);\n            document.fonts.add(nativeFontFace);\n          }\n        }, {\n          key: \"insertRule\",\n          value: function insertRule(rule) {\n            var styleElement = this.styleElement;\n            if (!styleElement) {\n              styleElement = this.styleElement = document.createElement(\"style\");\n              styleElement.id = \"PDFJS_FONT_STYLE_TAG_\".concat(this.docId);\n              document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n            }\n            var styleSheet = styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this.nativeFontFaces.forEach(function (nativeFontFace) {\n              document.fonts.delete(nativeFontFace);\n            });\n            this.nativeFontFaces.length = 0;\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n        }, {\n          key: \"bind\",\n          value: function () {\n            var _bind = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(font) {\n              var _this24 = this;\n              var nativeFontFace, rule;\n              return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    if (!(font.attached || font.missingFile)) {\n                      _context5.next = 2;\n                      break;\n                    }\n                    return _context5.abrupt(\"return\");\n                  case 2:\n                    font.attached = true;\n                    if (!this.isFontLoadingAPISupported) {\n                      _context5.next = 19;\n                      break;\n                    }\n                    nativeFontFace = font.createNativeFontFace();\n                    if (!nativeFontFace) {\n                      _context5.next = 18;\n                      break;\n                    }\n                    this.addNativeFontFace(nativeFontFace);\n                    _context5.prev = 7;\n                    _context5.next = 10;\n                    return nativeFontFace.loaded;\n                  case 10:\n                    _context5.next = 18;\n                    break;\n                  case 12:\n                    _context5.prev = 12;\n                    _context5.t0 = _context5[\"catch\"](7);\n                    this._onUnsupportedFeature({\n                      featureId: _util.UNSUPPORTED_FEATURES.font\n                    });\n                    (0, _util.warn)(\"Failed to load font '\".concat(nativeFontFace.family, \"': '\").concat(_context5.t0, \"'.\"));\n                    font.disableFontFace = true;\n                    throw _context5.t0;\n                  case 18:\n                    return _context5.abrupt(\"return\");\n                  case 19:\n                    rule = font.createFontFaceRule();\n                    if (!rule) {\n                      _context5.next = 26;\n                      break;\n                    }\n                    this.insertRule(rule);\n                    if (!this.isSyncFontLoadingSupported) {\n                      _context5.next = 24;\n                      break;\n                    }\n                    return _context5.abrupt(\"return\");\n                  case 24:\n                    _context5.next = 26;\n                    return new Promise(function (resolve) {\n                      var request = _this24._queueLoadingCallback(resolve);\n                      _this24._prepareFontLoadEvent([rule], [font], request);\n                    });\n                  case 26:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5, this, [[7, 12]]);\n            }));\n            function bind(_x4) {\n              return _bind.apply(this, arguments);\n            }\n            return bind;\n          }()\n        }, {\n          key: \"_queueLoadingCallback\",\n          value: function _queueLoadingCallback(callback) {\n            (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n          }\n        }, {\n          key: \"isFontLoadingAPISupported\",\n          get: function get() {\n            var supported = typeof document !== \"undefined\" && !!document.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n          }\n        }, {\n          key: \"isSyncFontLoadingSupported\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n          }\n        }, {\n          key: \"_loadTestFont\",\n          get: function get() {\n            (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n          }\n        }, {\n          key: \"_prepareFontLoadEvent\",\n          value: function _prepareFontLoadEvent(rules, fontsToLoad, request) {\n            (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n          }\n        }]);\n        return BaseFontLoader;\n      }();\n      var FontLoader;\n      exports.FontLoader = FontLoader;\n      {\n        exports.FontLoader = FontLoader = /*#__PURE__*/function (_BaseFontLoader) {\n          _inherits(GenericFontLoader, _BaseFontLoader);\n          var _super9 = _createSuper(GenericFontLoader);\n          function GenericFontLoader(docId) {\n            var _this25;\n            _classCallCheck(this, GenericFontLoader);\n            _this25 = _super9.call(this, docId);\n            _this25.loadingContext = {\n              requests: [],\n              nextRequestId: 0\n            };\n            _this25.loadTestFontId = 0;\n            return _this25;\n          }\n          _createClass(GenericFontLoader, [{\n            key: \"isSyncFontLoadingSupported\",\n            get: function get() {\n              var supported = false;\n              if (typeof navigator === \"undefined\") {\n                supported = true;\n              } else {\n                var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n                if (m && m[1] >= 14) {\n                  supported = true;\n                }\n              }\n              return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n            }\n          }, {\n            key: \"_queueLoadingCallback\",\n            value: function _queueLoadingCallback(callback) {\n              function completeRequest() {\n                (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                request.done = true;\n                while (context.requests.length > 0 && context.requests[0].done) {\n                  var otherRequest = context.requests.shift();\n                  setTimeout(otherRequest.callback, 0);\n                }\n              }\n              var context = this.loadingContext;\n              var request = {\n                id: \"pdfjs-font-loading-\".concat(context.nextRequestId++),\n                done: false,\n                complete: completeRequest,\n                callback: callback\n              };\n              context.requests.push(request);\n              return request;\n            }\n          }, {\n            key: \"_loadTestFont\",\n            get: function get() {\n              var getLoadTestFont = function getLoadTestFont() {\n                return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n              };\n              return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n            }\n          }, {\n            key: \"_prepareFontLoadEvent\",\n            value: function _prepareFontLoadEvent(rules, fonts, request) {\n              function int32(data, offset) {\n                return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n              }\n              function spliceString(s, offset, remove, insert) {\n                var chunk1 = s.substring(0, offset);\n                var chunk2 = s.substring(offset + remove);\n                return chunk1 + insert + chunk2;\n              }\n              var i, ii;\n              var canvas = document.createElement(\"canvas\");\n              canvas.width = 1;\n              canvas.height = 1;\n              var ctx = canvas.getContext(\"2d\");\n              var called = 0;\n              function isFontReady(name, callback) {\n                called++;\n                if (called > 30) {\n                  (0, _util.warn)(\"Load test font never loaded.\");\n                  callback();\n                  return;\n                }\n                ctx.font = \"30px \" + name;\n                ctx.fillText(\".\", 0, 20);\n                var imageData = ctx.getImageData(0, 0, 1, 1);\n                if (imageData.data[3] > 0) {\n                  callback();\n                  return;\n                }\n                setTimeout(isFontReady.bind(null, name, callback));\n              }\n              var loadTestFontId = \"lt\".concat(Date.now()).concat(this.loadTestFontId++);\n              var data = this._loadTestFont;\n              var COMMENT_OFFSET = 976;\n              data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n              var CFF_CHECKSUM_OFFSET = 16;\n              var XXXX_VALUE = 0x58585858;\n              var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n              for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n              }\n              if (i < loadTestFontId.length) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n              }\n              data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n              var url = \"url(data:font/opentype;base64,\".concat(btoa(data), \");\");\n              var rule = \"@font-face {font-family:\\\"\".concat(loadTestFontId, \"\\\";src:\").concat(url, \"}\");\n              this.insertRule(rule);\n              var names = [];\n              for (i = 0, ii = fonts.length; i < ii; i++) {\n                names.push(fonts[i].loadedName);\n              }\n              names.push(loadTestFontId);\n              var div = document.createElement(\"div\");\n              div.style.visibility = \"hidden\";\n              div.style.width = div.style.height = \"10px\";\n              div.style.position = \"absolute\";\n              div.style.top = div.style.left = \"0px\";\n              for (i = 0, ii = names.length; i < ii; ++i) {\n                var span = document.createElement(\"span\");\n                span.textContent = \"Hi\";\n                span.style.fontFamily = names[i];\n                div.appendChild(span);\n              }\n              document.body.appendChild(div);\n              isFontReady(loadTestFontId, function () {\n                document.body.removeChild(div);\n                request.complete();\n              });\n            }\n          }]);\n          return GenericFontLoader;\n        }(BaseFontLoader);\n      }\n      var FontFaceObject = /*#__PURE__*/function () {\n        function FontFaceObject(translatedData, _ref24) {\n          var _ref24$isEvalSupporte = _ref24.isEvalSupported,\n            isEvalSupported = _ref24$isEvalSupporte === void 0 ? true : _ref24$isEvalSupporte,\n            _ref24$disableFontFac = _ref24.disableFontFace,\n            disableFontFace = _ref24$disableFontFac === void 0 ? false : _ref24$disableFontFac,\n            _ref24$ignoreErrors = _ref24.ignoreErrors,\n            ignoreErrors = _ref24$ignoreErrors === void 0 ? false : _ref24$ignoreErrors,\n            _ref24$onUnsupportedF = _ref24.onUnsupportedFeature,\n            onUnsupportedFeature = _ref24$onUnsupportedF === void 0 ? null : _ref24$onUnsupportedF,\n            _ref24$fontRegistry = _ref24.fontRegistry,\n            fontRegistry = _ref24$fontRegistry === void 0 ? null : _ref24$fontRegistry;\n          _classCallCheck(this, FontFaceObject);\n          this.compiledGlyphs = Object.create(null);\n          for (var i in translatedData) {\n            this[i] = translatedData[i];\n          }\n          this.isEvalSupported = isEvalSupported !== false;\n          this.disableFontFace = disableFontFace === true;\n          this.ignoreErrors = ignoreErrors === true;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.fontRegistry = fontRegistry;\n        }\n        _createClass(FontFaceObject, [{\n          key: \"createNativeFontFace\",\n          value: function createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            var nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this);\n            }\n            return nativeFontFace;\n          }\n        }, {\n          key: \"createFontFaceRule\",\n          value: function createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            var data = (0, _util.bytesToString)(new Uint8Array(this.data));\n            var url = \"url(data:\".concat(this.mimetype, \";base64,\").concat(btoa(data), \");\");\n            var rule = \"@font-face {font-family:\\\"\".concat(this.loadedName, \"\\\";src:\").concat(url, \"}\");\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this, url);\n            }\n            return rule;\n          }\n        }, {\n          key: \"getPathGenerator\",\n          value: function getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n            var cmds, current;\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n              if (this._onUnsupportedFeature) {\n                this._onUnsupportedFeature({\n                  featureId: _util.UNSUPPORTED_FEATURES.font\n                });\n              }\n              (0, _util.warn)(\"getPathGenerator - ignoring character: \\\"\".concat(ex, \"\\\".\"));\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n            if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n              var args,\n                js = \"\";\n              for (var i = 0, ii = cmds.length; i < ii; i++) {\n                current = cmds[i];\n                if (current.args !== undefined) {\n                  args = current.args.join(\",\");\n                } else {\n                  args = \"\";\n                }\n                js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n              }\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n            }\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (var _i6 = 0, _ii = cmds.length; _i6 < _ii; _i6++) {\n                current = cmds[_i6];\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n        }]);\n        return FontFaceObject;\n      }();\n      exports.FontFaceObject = FontFaceObject;\n\n      /***/\n    }, /* 6 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var compatibilityParams = Object.create(null);\n      {\n        var _w_pdfjs_require__2 = __w_pdfjs_require__(7),\n          isNodeJS = _w_pdfjs_require__2.isNodeJS;\n        var userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n        var isIE = /Trident/.test(userAgent);\n        var isIOSChrome = /CriOS/.test(userAgent);\n        (function checkOnBlobSupport() {\n          if (isIE || isIOSChrome) {\n            compatibilityParams.disableCreateObjectURL = true;\n          }\n        })();\n        (function checkFontFaceAndImage() {\n          if (isNodeJS) {\n            compatibilityParams.disableFontFace = true;\n            compatibilityParams.nativeImageDecoderSupport = \"none\";\n          }\n        })();\n      }\n      exports.apiCompatibilityParams = Object.freeze(compatibilityParams);\n\n      /***/\n    }, /* 7 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      var isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions[\"nw\"] && !process.versions[\"electron\"];\n      exports.isNodeJS = isNodeJS;\n\n      /***/\n    }, /* 8 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CanvasGraphics = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _pattern_helper = __w_pdfjs_require__(9);\n      var MIN_FONT_SIZE = 16;\n      var MAX_FONT_SIZE = 100;\n      var MAX_GROUP_SIZE = 4096;\n      var MIN_WIDTH_FACTOR = 0.65;\n      var COMPILE_TYPE3_GLYPHS = true;\n      var MAX_SIZE_TO_COMPILE = 1000;\n      var FULL_CHUNK_HEIGHT = 16;\n      function addContextCurrentTransform(ctx) {\n        if (!ctx.mozCurrentTransform) {\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              var m = this._transformMatrix;\n              var a = m[0],\n                b = m[1],\n                c = m[2],\n                d = m[3],\n                e = m[4],\n                f = m[5];\n              var ad_bc = a * d - b * c;\n              var bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n          ctx.save = function ctxSave() {\n            var old = this._transformMatrix;\n            this._transformStack.push(old);\n            this._transformMatrix = old.slice(0, 6);\n            this._originalSave();\n          };\n          ctx.restore = function ctxRestore() {\n            var prev = this._transformStack.pop();\n            if (prev) {\n              this._transformMatrix = prev;\n              this._originalRestore();\n            }\n          };\n          ctx.translate = function ctxTranslate(x, y) {\n            var m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n            this._originalTranslate(x, y);\n          };\n          ctx.scale = function ctxScale(x, y) {\n            var m = this._transformMatrix;\n            m[0] = m[0] * x;\n            m[1] = m[1] * x;\n            m[2] = m[2] * y;\n            m[3] = m[3] * y;\n            this._originalScale(x, y);\n          };\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n          ctx.rotate = function ctxRotate(angle) {\n            var cosValue = Math.cos(angle);\n            var sinValue = Math.sin(angle);\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n            this._originalRotate(angle);\n          };\n        }\n      }\n      var CachedCanvases = function CachedCanvasesClosure() {\n        function CachedCanvases(canvasFactory) {\n          this.canvasFactory = canvasFactory;\n          this.cache = Object.create(null);\n        }\n        CachedCanvases.prototype = {\n          getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n            var canvasEntry;\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n              canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n            if (trackTransform) {\n              addContextCurrentTransform(canvasEntry.context);\n            }\n            return canvasEntry;\n          },\n          clear: function clear() {\n            for (var id in this.cache) {\n              var canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n        };\n        return CachedCanvases;\n      }();\n      function compileType3Glyph(imgData) {\n        var POINT_TO_PROCESS_LIMIT = 1000;\n        var width = imgData.width,\n          height = imgData.height;\n        var i,\n          j,\n          j0,\n          width1 = width + 1;\n        var points = new Uint8Array(width1 * (height + 1));\n        var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n        var lineSize = width + 7 & ~7,\n          data0 = imgData.data;\n        var data = new Uint8Array(lineSize * height),\n          pos = 0,\n          ii;\n        for (i = 0, ii = data0.length; i < ii; i++) {\n          var mask = 128,\n            elem = data0[i];\n          while (mask > 0) {\n            data[pos++] = elem & mask ? 0 : 255;\n            mask >>= 1;\n          }\n        }\n        var count = 0;\n        pos = 0;\n        if (data[pos] !== 0) {\n          points[0] = 1;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j] = data[pos] ? 2 : 1;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j] = 2;\n          ++count;\n        }\n        for (i = 1; i < height; i++) {\n          pos = i * lineSize;\n          j0 = i * width1;\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0] = data[pos] ? 1 : 8;\n            ++count;\n          }\n          var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n          for (j = 1; j < width; j++) {\n            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n            if (POINT_TYPES[sum]) {\n              points[j0 + j] = POINT_TYPES[sum];\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0 + j] = data[pos] ? 2 : 4;\n            ++count;\n          }\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n        }\n        pos = lineSize * (height - 1);\n        j0 = i * width1;\n        if (data[pos] !== 0) {\n          points[j0] = 8;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j0 + j] = data[pos] ? 4 : 8;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j0 + j] = 4;\n          ++count;\n        }\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n        var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n        var outlines = [];\n        for (i = 0; count && i <= height; i++) {\n          var p = i * width1;\n          var end = p + width;\n          while (p < end && !points[p]) {\n            p++;\n          }\n          if (p === end) {\n            continue;\n          }\n          var coords = [p % width1, i];\n          var type = points[p],\n            p0 = p,\n            pp;\n          do {\n            var step = steps[type];\n            do {\n              p += step;\n            } while (!points[p]);\n            pp = points[p];\n            if (pp !== 5 && pp !== 10) {\n              type = pp;\n              points[p] = 0;\n            } else {\n              type = pp & 0x33 * type >> 4;\n              points[p] &= type >> 2 | type << 2;\n            }\n            coords.push(p % width1);\n            coords.push(p / width1 | 0);\n            if (!points[p]) {\n              --count;\n            }\n          } while (p0 !== p);\n          outlines.push(coords);\n          --i;\n        }\n        var drawOutline = function drawOutline(c) {\n          c.save();\n          c.scale(1 / width, -1 / height);\n          c.translate(0, -height);\n          c.beginPath();\n          for (var i = 0, ii = outlines.length; i < ii; i++) {\n            var o = outlines[i];\n            c.moveTo(o[0], o[1]);\n            for (var j = 2, jj = o.length; j < jj; j += 2) {\n              c.lineTo(o[j], o[j + 1]);\n            }\n          }\n          c.fill();\n          c.beginPath();\n          c.restore();\n        };\n        return drawOutline;\n      }\n      var CanvasExtraState = function CanvasExtraStateClosure() {\n        function CanvasExtraState() {\n          this.alphaIsShape = false;\n          this.fontSize = 0;\n          this.fontSizeScale = 1;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.textMatrixScale = 1;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textRise = 0;\n          this.fillColor = \"#000000\";\n          this.strokeColor = \"#000000\";\n          this.patternFill = false;\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.activeSMask = null;\n          this.resumeSMaskCtx = null;\n        }\n        CanvasExtraState.prototype = {\n          clone: function CanvasExtraState_clone() {\n            return Object.create(this);\n          },\n          setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        };\n        return CanvasExtraState;\n      }();\n      var CanvasGraphics = function CanvasGraphicsClosure() {\n        var EXECUTION_TIME = 15;\n        var EXECUTION_STEPS = 10;\n        function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n          this.ctx = canvasCtx;\n          this.current = new CanvasExtraState();\n          this.stateStack = [];\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.res = null;\n          this.xobjs = null;\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this.imageLayer = imageLayer;\n          this.groupStack = [];\n          this.processingType3 = null;\n          this.baseTransform = null;\n          this.baseTransformStack = [];\n          this.groupLevel = 0;\n          this.smaskStack = [];\n          this.smaskCounter = 0;\n          this.tempSMask = null;\n          this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n          if (canvasCtx) {\n            addContextCurrentTransform(canvasCtx);\n          }\n          this._cachedGetSinglePixelWidth = null;\n        }\n        function putBinaryImageData(ctx, imgData) {\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n          var height = imgData.height,\n            width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0,\n            destPos;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n          var i, j, thisChunkHeight, elemsInThisChunk;\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            var srcLength = src.byteLength;\n            var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            var dest32DataLength = dest32.length;\n            var fullSrcDiff = width + 7 >> 3;\n            var white = 0xffffffff;\n            var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n              for (j = 0; j < thisChunkHeight; j++) {\n                var srcDiff = srcLength - srcPos;\n                var k = 0;\n                var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                var kEndUnrolled = kEnd & ~7;\n                var mask = 0;\n                var srcByte = 0;\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n              destPos = 0;\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(\"bad image kind: \".concat(imgData.kind));\n          }\n        }\n        function putBinaryImageMask(ctx, imgData) {\n          var height = imgData.height,\n            width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n          for (var i = 0; i < totalChunks; i++) {\n            var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            var destPos = 3;\n            for (var j = 0; j < thisChunkHeight; j++) {\n              var mask = 0;\n              for (var k = 0; k < width; k++) {\n                if (!mask) {\n                  var elem = src[srcPos++];\n                  mask = 128;\n                }\n                dest[destPos] = elem & mask ? 0 : 255;\n                destPos += 4;\n                mask >>= 1;\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n        function copyCtxState(sourceCtx, destCtx) {\n          var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n          for (var i = 0, ii = properties.length; i < ii; i++) {\n            var property = properties[i];\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = \"#000000\";\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n        }\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          var length = bytes.length;\n          for (var i = 3; i < length; i += 4) {\n            var alpha = bytes[i];\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              var alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          var length = maskData.length;\n          var scale = 1 / 255;\n          for (var i = 3; i < length; i += 4) {\n            var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          var length = maskData.length;\n          for (var i = 3; i < length; i += 4) {\n            var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n          var hasBackdrop = !!backdrop;\n          var r0 = hasBackdrop ? backdrop[0] : 0;\n          var g0 = hasBackdrop ? backdrop[1] : 0;\n          var b0 = hasBackdrop ? backdrop[2] : 0;\n          var composeFn;\n          if (subtype === \"Luminosity\") {\n            composeFn = composeSMaskLuminosity;\n          } else {\n            composeFn = composeSMaskAlpha;\n          }\n          var PIXELS_TO_PROCESS = 1048576;\n          var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n          for (var row = 0; row < height; row += chunkSize) {\n            var chunkHeight = Math.min(chunkSize, height - row);\n            var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n            var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n            composeFn(maskData.data, layerData.data, transferMap);\n            maskCtx.putImageData(layerData, 0, row);\n          }\n        }\n        function composeSMask(ctx, smask, layerCtx, webGLContext) {\n          var mask = smask.canvas;\n          var maskCtx = smask.context;\n          ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n          var backdrop = smask.backdrop || null;\n          if (!smask.transferMap && webGLContext.isEnabled) {\n            var composed = webGLContext.composeSMask({\n              layer: layerCtx.canvas,\n              mask: mask,\n              properties: {\n                subtype: smask.subtype,\n                backdrop: backdrop\n              }\n            });\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n            return;\n          }\n          genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n          ctx.drawImage(mask, 0, 0);\n        }\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var NORMAL_CLIP = {};\n        var EO_CLIP = {};\n        CanvasGraphics.prototype = {\n          beginDrawing: function beginDrawing(_ref25) {\n            var transform = _ref25.transform,\n              viewport = _ref25.viewport,\n              _ref25$transparency = _ref25.transparency,\n              transparency = _ref25$transparency === void 0 ? false : _ref25$transparency,\n              _ref25$background = _ref25.background,\n              background = _ref25$background === void 0 ? null : _ref25$background;\n            var width = this.ctx.canvas.width;\n            var height = this.ctx.canvas.height;\n            this.ctx.save();\n            this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n            if (transparency) {\n              var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n            }\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n            if (transform) {\n              this.ctx.transform.apply(this.ctx, transform);\n            }\n            this.ctx.transform.apply(this.ctx, viewport.transform);\n            this.baseTransform = this.ctx.mozCurrentTransform.slice();\n            if (this.imageLayer) {\n              this.imageLayer.beginLayout();\n            }\n          },\n          executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            var argsArray = operatorList.argsArray;\n            var fnArray = operatorList.fnArray;\n            var i = executionStartIdx || 0;\n            var argsArrayLen = argsArray.length;\n            if (argsArrayLen === i) {\n              return i;\n            }\n            var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            var steps = 0;\n            var commonObjs = this.commonObjs;\n            var objs = this.objs;\n            var fnId;\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n              fnId = fnArray[i];\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                var _iterator7 = _createForOfIteratorHelper(argsArray[i]),\n                  _step7;\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    var depObjId = _step7.value;\n                    var objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                    if (!objsPool.has(depObjId)) {\n                      objsPool.get(depObjId, continueCallback);\n                      return i;\n                    }\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n              }\n              i++;\n              if (i === argsArrayLen) {\n                return i;\n              }\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n                steps = 0;\n              }\n            }\n          },\n          endDrawing: function CanvasGraphics_endDrawing() {\n            if (this.current.activeSMask !== null) {\n              this.endSMaskGroup();\n            }\n            this.ctx.restore();\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n            this.cachedCanvases.clear();\n            this.webGLContext.clear();\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          },\n          setLineWidth: function CanvasGraphics_setLineWidth(width) {\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          },\n          setLineCap: function CanvasGraphics_setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          },\n          setLineJoin: function CanvasGraphics_setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          },\n          setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          },\n          setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n            var ctx = this.ctx;\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          },\n          setRenderingIntent: function setRenderingIntent(intent) {},\n          setFlatness: function setFlatness(flatness) {},\n          setGState: function CanvasGraphics_setGState(states) {\n            for (var i = 0, ii = states.length; i < ii; i++) {\n              var state = states[i];\n              var key = state[0];\n              var value = state[1];\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n                case \"SMask\":\n                  if (this.current.activeSMask) {\n                    if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                      this.suspendSMaskGroup();\n                    } else {\n                      this.endSMaskGroup();\n                    }\n                  }\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  if (this.current.activeSMask) {\n                    this.beginSMaskGroup();\n                  }\n                  this.tempSMask = null;\n                  break;\n              }\n            }\n          },\n          beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n            var activeSMask = this.current.activeSMask;\n            var drawnWidth = activeSMask.canvas.width;\n            var drawnHeight = activeSMask.canvas.height;\n            var cacheId = \"smaskGroupAt\" + this.groupLevel;\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var currentCtx = this.ctx;\n            var currentTransform = currentCtx.mozCurrentTransform;\n            this.ctx.save();\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n            groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n            activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            this.ctx.save();\n            copyCtxState(groupCtx, this.ctx);\n            this.current.resumeSMaskCtx = groupCtx;\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n            groupCtx.save();\n            groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n            groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n            groupCtx.restore();\n          },\n          resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.current.resumeSMaskCtx;\n            var currentCtx = this.ctx;\n            this.ctx = groupCtx;\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            copyCtxState(groupCtx, this.ctx);\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n          },\n          save: function CanvasGraphics_save() {\n            this.ctx.save();\n            var old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n            this.current.resumeSMaskCtx = null;\n          },\n          restore: function CanvasGraphics_restore() {\n            if (this.current.resumeSMaskCtx) {\n              this.resumeSMaskGroup();\n            }\n            if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n              this.endSMaskGroup();\n            }\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              this.ctx.restore();\n              this.pendingClip = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          },\n          transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedGetSinglePixelWidth = null;\n          },\n          constructPath: function CanvasGraphics_constructPath(ops, args) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var x = current.x,\n              y = current.y;\n            for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  var width = args[j++];\n                  var height = args[j++];\n                  if (width === 0) {\n                    width = this.getSinglePixelWidth();\n                  }\n                  if (height === 0) {\n                    height = this.getSinglePixelWidth();\n                  }\n                  var xw = x + width;\n                  var yh = y + height;\n                  this.ctx.moveTo(x, y);\n                  this.ctx.lineTo(xw, y);\n                  this.ctx.lineTo(xw, yh);\n                  this.ctx.lineTo(x, yh);\n                  this.ctx.lineTo(x, y);\n                  this.ctx.closePath();\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  break;\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n            current.setCurrentPoint(x, y);\n          },\n          closePath: function CanvasGraphics_closePath() {\n            this.ctx.closePath();\n          },\n          stroke: function CanvasGraphics_stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n            if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n              ctx.save();\n              var transform = ctx.mozCurrentTransform;\n              var scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n              ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n              ctx.stroke();\n            }\n            if (consumePath) {\n              this.consumePath();\n            }\n            ctx.globalAlpha = this.current.fillAlpha;\n          },\n          closeStroke: function CanvasGraphics_closeStroke() {\n            this.closePath();\n            this.stroke();\n          },\n          fill: function CanvasGraphics_fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var needRestore = false;\n            if (isPatternFill) {\n              ctx.save();\n              if (this.baseTransform) {\n                ctx.setTransform.apply(ctx, this.baseTransform);\n              }\n              ctx.fillStyle = fillColor.getPattern(ctx, this);\n              needRestore = true;\n            }\n            if (this.pendingEOFill) {\n              ctx.fill(\"evenodd\");\n              this.pendingEOFill = false;\n            } else {\n              ctx.fill();\n            }\n            if (needRestore) {\n              ctx.restore();\n            }\n            if (consumePath) {\n              this.consumePath();\n            }\n          },\n          eoFill: function CanvasGraphics_eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          },\n          fillStroke: function CanvasGraphics_fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          },\n          eoFillStroke: function CanvasGraphics_eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          },\n          closeFillStroke: function CanvasGraphics_closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          },\n          closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          },\n          endPath: function CanvasGraphics_endPath() {\n            this.consumePath();\n          },\n          clip: function CanvasGraphics_clip() {\n            this.pendingClip = NORMAL_CLIP;\n          },\n          eoClip: function CanvasGraphics_eoClip() {\n            this.pendingClip = EO_CLIP;\n          },\n          beginText: function CanvasGraphics_beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          endText: function CanvasGraphics_endText() {\n            var paths = this.pendingTextPaths;\n            var ctx = this.ctx;\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n            ctx.save();\n            ctx.beginPath();\n            for (var i = 0; i < paths.length; i++) {\n              var path = paths[i];\n              ctx.setTransform.apply(ctx, path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          },\n          setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          },\n          setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          },\n          setHScale: function CanvasGraphics_setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          },\n          setLeading: function CanvasGraphics_setLeading(leading) {\n            this.current.leading = -leading;\n          },\n          setFont: function CanvasGraphics_setFont(fontRefName, size) {\n            var fontObj = this.commonObjs.get(fontRefName);\n            var current = this.current;\n            if (!fontObj) {\n              throw new Error(\"Can't find font for \".concat(fontRefName));\n            }\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n            if (fontObj.isType3Font) {\n              return;\n            }\n            var name = fontObj.loadedName || \"sans-serif\";\n            var bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            var italic = fontObj.italic ? \"italic\" : \"normal\";\n            var typeface = \"\\\"\".concat(name, \"\\\", \").concat(fontObj.fallbackName);\n            var browserFontSize = size;\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = \"\".concat(italic, \" \").concat(bold, \" \").concat(browserFontSize, \"px \").concat(typeface);\n          },\n          setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          },\n          setTextRise: function CanvasGraphics_setTextRise(rise) {\n            this.current.textRise = rise;\n          },\n          moveText: function CanvasGraphics_moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          },\n          setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          },\n          setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          nextLine: function CanvasGraphics_nextLine() {\n            this.moveText(0, this.current.leading);\n          },\n          paintChar: function paintChar(character, x, y, patternTransform) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var textRenderingMode = current.textRenderingMode;\n            var fontSize = current.fontSize / current.fontSizeScale;\n            var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            var patternFill = current.patternFill && font.data;\n            var addToPath;\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, patternTransform);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n            if (isAddToPathSet) {\n              var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: ctx.mozCurrentTransform,\n                x: x,\n                y: y,\n                fontSize: fontSize,\n                addToPath: addToPath\n              });\n            }\n          },\n          get isFontSubpixelAAEnabled() {\n            var _this$cachedCanvases$ = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10),\n              ctx = _this$cachedCanvases$.context;\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            var data = ctx.getImageData(0, 0, 10, 10).data;\n            var enabled = false;\n            for (var i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          },\n          showText: function CanvasGraphics_showText(glyphs) {\n            var current = this.current;\n            var font = current.font;\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n            var fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return undefined;\n            }\n            var ctx = this.ctx;\n            var fontSizeScale = current.fontSizeScale;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var fontDirection = current.fontDirection;\n            var textHScale = current.textHScale * fontDirection;\n            var glyphsLength = glyphs.length;\n            var vertical = font.vertical;\n            var spacingDir = vertical ? 1 : -1;\n            var defaultVMetrics = font.defaultVMetrics;\n            var widthAdvanceScale = fontSize * current.fontMatrix[0];\n            var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            var patternTransform;\n            if (current.patternFill) {\n              ctx.save();\n              var pattern = current.fillColor.getPattern(ctx, this);\n              patternTransform = ctx.mozCurrentTransform;\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n            var lineWidth = current.lineWidth;\n            var scale = current.textMatrixScale;\n            if (scale === 0 || lineWidth === 0) {\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                this._cachedGetSinglePixelWidth = null;\n                lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n              }\n            } else {\n              lineWidth /= scale;\n            }\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n            ctx.lineWidth = lineWidth;\n            var x = 0,\n              i;\n            for (i = 0; i < glyphsLength; ++i) {\n              var glyph = glyphs[i];\n              if ((0, _util.isNum)(glyph)) {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              var restoreNeeded = false;\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var character = glyph.fontChar;\n              var accent = glyph.accent;\n              var scaledX, scaledY, scaledAccentX, scaledAccentY;\n              var width = glyph.width;\n              if (vertical) {\n                var vmetric, vx, vy;\n                vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (font.remeasure && width > 0) {\n                var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  var characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n              if (glyph.isInFont || font.missingFile) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n                  if (accent) {\n                    scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n                    scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n              var charWidth;\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n              x += charWidth;\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            ctx.restore();\n          },\n          showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var fontSize = current.fontSize;\n            var fontDirection = current.fontDirection;\n            var spacingDir = font.vertical ? 1 : -1;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var textHScale = current.textHScale * fontDirection;\n            var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            var glyphsLength = glyphs.length;\n            var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            var i, glyph, width, spacingLength;\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n              if ((0, _util.isNum)(glyph)) {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var operatorList = font.charProcOperatorList[glyph.operatorListId];\n              if (!operatorList) {\n                (0, _util.warn)(\"Type3 character \\\"\".concat(glyph.operatorListId, \"\\\" is not available.\"));\n                continue;\n              }\n              this.processingType3 = glyph;\n              this.save();\n              ctx.scale(fontSize, fontSize);\n              ctx.transform.apply(ctx, fontMatrix);\n              this.executeOperatorList(operatorList);\n              this.restore();\n              var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n            ctx.restore();\n            this.processingType3 = null;\n          },\n          setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n          setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.clip();\n            this.endPath();\n          },\n          getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n            var _this26 = this;\n            var pattern;\n            if (IR[0] === \"TilingPattern\") {\n              var color = IR[1];\n              var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n              var canvasGraphicsFactory = {\n                createCanvasGraphics: function createCanvasGraphics(ctx) {\n                  return new CanvasGraphics(ctx, _this26.commonObjs, _this26.objs, _this26.canvasFactory, _this26.webGLContext);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n            }\n            return pattern;\n          },\n          setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          },\n          setFillColorN: function CanvasGraphics_setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          },\n          setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          },\n          setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          },\n          shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n            var ctx = this.ctx;\n            this.save();\n            var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n            ctx.fillStyle = pattern.getPattern(ctx, this, true);\n            var inv = ctx.mozCurrentTransformInverse;\n            if (inv) {\n              var canvas = ctx.canvas;\n              var width = canvas.width;\n              var height = canvas.height;\n              var bl = _util.Util.applyTransform([0, 0], inv);\n              var br = _util.Util.applyTransform([0, height], inv);\n              var ul = _util.Util.applyTransform([width, 0], inv);\n              var ur = _util.Util.applyTransform([width, height], inv);\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n            this.restore();\n          },\n          beginInlineImage: function CanvasGraphics_beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          },\n          beginImageData: function CanvasGraphics_beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          },\n          paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, matrix);\n            }\n            this.baseTransform = this.ctx.mozCurrentTransform;\n            if (bbox) {\n              var width = bbox[2] - bbox[0];\n              var height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n          },\n          paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          },\n          beginGroup: function CanvasGraphics_beginGroup(group) {\n            this.save();\n            var currentCtx = this.ctx;\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n            var currentTransform = currentCtx.mozCurrentTransform;\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, group.matrix);\n            }\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n            var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n            var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            var offsetX = Math.floor(bounds[0]);\n            var offsetY = Math.floor(bounds[1]);\n            var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            var scaleX = 1,\n              scaleY = 1;\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n            var cacheId = \"groupAt\" + this.groupLevel;\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n            }\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n            this.current.activeSMask = null;\n          },\n          endGroup: function CanvasGraphics_endGroup(group) {\n            this.groupLevel--;\n            var groupCtx = this.ctx;\n            this.ctx = this.groupStack.pop();\n            if (this.ctx.imageSmoothingEnabled !== undefined) {\n              this.ctx.imageSmoothingEnabled = false;\n            } else {\n              this.ctx.mozImageSmoothingEnabled = false;\n            }\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n            } else {\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n            }\n            this.restore();\n          },\n          beginAnnotations: function CanvasGraphics_beginAnnotations() {\n            this.save();\n            if (this.baseTransform) {\n              this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n            }\n          },\n          endAnnotations: function CanvasGraphics_endAnnotations() {\n            this.restore();\n          },\n          beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n            this.save();\n            resetCtxToDefault(this.ctx);\n            this.current = new CanvasExtraState();\n            if (Array.isArray(rect) && rect.length === 4) {\n              var width = rect[2] - rect[0];\n              var height = rect[3] - rect[1];\n              this.ctx.rect(rect[0], rect[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n            this.transform.apply(this, transform);\n            this.transform.apply(this, matrix);\n          },\n          endAnnotation: function CanvasGraphics_endAnnotation() {\n            this.restore();\n          },\n          paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n            var domImage = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n            if (!domImage) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            this.save();\n            var ctx = this.ctx;\n            ctx.scale(1 / w, -1 / h);\n            ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height, 0, -h, w, h);\n            if (this.imageLayer) {\n              var currentTransform = ctx.mozCurrentTransformInverse;\n              var position = this.getCanvasPosition(0, 0);\n              this.imageLayer.appendImage({\n                objId: objId,\n                left: position[0],\n                top: position[1],\n                width: w / currentTransform[0],\n                height: h / currentTransform[3]\n              });\n            }\n            this.restore();\n          },\n          paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n            var ctx = this.ctx;\n            var width = img.width,\n              height = img.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var glyph = this.processingType3;\n            if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n              if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n                glyph.compiled = compileType3Glyph({\n                  data: img.data,\n                  width: width,\n                  height: height\n                });\n              } else {\n                glyph.compiled = null;\n              }\n            }\n            if (glyph && glyph.compiled) {\n              glyph.compiled(ctx);\n              return;\n            }\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, img);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            this.paintInlineImageXObject(maskCanvas.canvas);\n          },\n          paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, imgData);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            var ctx = this.ctx;\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              ctx.save();\n              ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            for (var i = 0, ii = images.length; i < ii; i++) {\n              var image = images[i];\n              var width = image.width,\n                height = image.height;\n              var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              var maskCtx = maskCanvas.context;\n              maskCtx.save();\n              putBinaryImageMask(maskCtx, image);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform.apply(ctx, image.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n            var imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          },\n          paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            var imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            var width = imgData.width;\n            var height = imgData.height;\n            var map = [];\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n            this.paintInlineImageXObjectGroup(imgData, map);\n          },\n          paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            var currentTransform = ctx.mozCurrentTransformInverse;\n            var a = currentTransform[0],\n              b = currentTransform[1];\n            var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n            var c = currentTransform[2],\n              d = currentTransform[3];\n            var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n            var imgToPaint, tmpCanvas;\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              var tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = tmpCanvas.canvas;\n            }\n            var paintWidth = width,\n              paintHeight = height;\n            var tmpCanvasId = \"prescale1\";\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              var newWidth = paintWidth,\n                newHeight = paintHeight;\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              imgToPaint = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n            ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(0, -height);\n              this.imageLayer.appendImage({\n                imgData: imgData,\n                left: position[0],\n                top: position[1],\n                width: width / currentTransform[0],\n                height: height / currentTransform[3]\n              });\n            }\n            this.restore();\n          },\n          paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n            var ctx = this.ctx;\n            var w = imgData.width;\n            var h = imgData.height;\n            var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData);\n            for (var i = 0, ii = map.length; i < ii; i++) {\n              var entry = map[i];\n              ctx.save();\n              ctx.transform.apply(ctx, entry.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n              if (this.imageLayer) {\n                var position = this.getCanvasPosition(entry.x, entry.y);\n                this.imageLayer.appendImage({\n                  imgData: imgData,\n                  left: position[0],\n                  top: position[1],\n                  width: w,\n                  height: h\n                });\n              }\n              ctx.restore();\n            }\n          },\n          paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n            this.ctx.fillRect(0, 0, 1, 1);\n          },\n          paintXObject: function CanvasGraphics_paintXObject() {\n            (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n          },\n          markPoint: function CanvasGraphics_markPoint(tag) {},\n          markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n          beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n          beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n          endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n          beginCompat: function CanvasGraphics_beginCompat() {},\n          endCompat: function CanvasGraphics_endCompat() {},\n          consumePath: function CanvasGraphics_consumePath() {\n            var ctx = this.ctx;\n            if (this.pendingClip) {\n              if (this.pendingClip === EO_CLIP) {\n                ctx.clip(\"evenodd\");\n              } else {\n                ctx.clip();\n              }\n              this.pendingClip = null;\n            }\n            ctx.beginPath();\n          },\n          getSinglePixelWidth: function getSinglePixelWidth(scale) {\n            if (this._cachedGetSinglePixelWidth === null) {\n              var inverse = this.ctx.mozCurrentTransformInverse;\n              this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n            }\n            return this._cachedGetSinglePixelWidth;\n          },\n          getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n            var transform = this.ctx.mozCurrentTransform;\n            return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n          }\n        };\n        for (var op in _util.OPS) {\n          CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n        }\n        return CanvasGraphics;\n      }();\n      exports.CanvasGraphics = CanvasGraphics;\n\n      /***/\n    }, /* 9 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getShadingPatternFromIR = getShadingPatternFromIR;\n      exports.TilingPattern = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var ShadingIRs = {};\n      function applyBoundingBox(ctx, bbox) {\n        if (!bbox || typeof Path2D === \"undefined\") {\n          return;\n        }\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        var region = new Path2D();\n        region.rect(bbox[0], bbox[1], width, height);\n        ctx.clip(region);\n      }\n      ShadingIRs.RadialAxial = {\n        fromIR: function RadialAxial_fromIR(raw) {\n          var type = raw[1];\n          var bbox = raw[2];\n          var colorStops = raw[3];\n          var p0 = raw[4];\n          var p1 = raw[5];\n          var r0 = raw[6];\n          var r1 = raw[7];\n          return {\n            type: \"Pattern\",\n            getPattern: function RadialAxial_getPattern(ctx) {\n              applyBoundingBox(ctx, bbox);\n              var grad;\n              if (type === \"axial\") {\n                grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n              } else if (type === \"radial\") {\n                grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n              }\n              for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n                var c = colorStops[i];\n                grad.addColorStop(c[0], c[1]);\n              }\n              return grad;\n            }\n          };\n        }\n      };\n      var createMeshCanvas = function createMeshCanvasClosure() {\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          var coords = context.coords,\n            colors = context.colors;\n          var bytes = data.data,\n            rowSize = data.width * 4;\n          var tmp;\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n          if (y1 >= y3) {\n            return;\n          }\n          var c1r = colors[c1],\n            c1g = colors[c1 + 1],\n            c1b = colors[c1 + 2];\n          var c2r = colors[c2],\n            c2g = colors[c2 + 1],\n            c2b = colors[c2 + 2];\n          var c3r = colors[c3],\n            c3g = colors[c3 + 1],\n            c3b = colors[c3 + 2];\n          var minY = Math.round(y1),\n            maxY = Math.round(y3);\n          var xa, car, cag, cab;\n          var xb, cbr, cbg, cbb;\n          for (var y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              var _k = void 0;\n              if (y < y1) {\n                _k = 0;\n              } else if (y1 === y2) {\n                _k = 1;\n              } else {\n                _k = (y1 - y) / (y1 - y2);\n              }\n              xa = x1 - (x1 - x2) * _k;\n              car = c1r - (c1r - c2r) * _k;\n              cag = c1g - (c1g - c2g) * _k;\n              cab = c1b - (c1b - c2b) * _k;\n            } else {\n              var _k2 = void 0;\n              if (y > y3) {\n                _k2 = 1;\n              } else if (y2 === y3) {\n                _k2 = 0;\n              } else {\n                _k2 = (y2 - y) / (y2 - y3);\n              }\n              xa = x2 - (x2 - x3) * _k2;\n              car = c2r - (c2r - c3r) * _k2;\n              cag = c2g - (c2g - c3g) * _k2;\n              cab = c2b - (c2b - c3b) * _k2;\n            }\n            var k = void 0;\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            var x1_ = Math.round(Math.min(xa, xb));\n            var x2_ = Math.round(Math.max(xa, xb));\n            var j = rowSize * y + x1_ * 4;\n            for (var x = x1_; x <= x2_; x++) {\n              var _k3 = (xa - x) / (xa - xb);\n              if (_k3 < 0) {\n                _k3 = 0;\n              } else if (_k3 > 1) {\n                _k3 = 1;\n              }\n              bytes[j++] = car - (car - cbr) * _k3 | 0;\n              bytes[j++] = cag - (cag - cbg) * _k3 | 0;\n              bytes[j++] = cab - (cab - cbb) * _k3 | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n        function drawFigure(data, figure, context) {\n          var ps = figure.coords;\n          var cs = figure.colors;\n          var i, ii;\n          switch (figure.type) {\n            case \"lattice\":\n              var verticesPerRow = figure.verticesPerRow;\n              var rows = Math.floor(ps.length / verticesPerRow) - 1;\n              var cols = verticesPerRow - 1;\n              for (i = 0; i < rows; i++) {\n                var q = i * verticesPerRow;\n                for (var j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n              break;\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n              break;\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n        function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n          var EXPECTED_SCALE = 1.1;\n          var MAX_PATTERN_SIZE = 3000;\n          var BORDER_SIZE = 2;\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n          var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n          var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var scaleX = boundsWidth / width;\n          var scaleY = boundsHeight / height;\n          var context = {\n            coords: coords,\n            colors: colors,\n            offsetX: -offsetX,\n            offsetY: -offsetY,\n            scaleX: 1 / scaleX,\n            scaleY: 1 / scaleY\n          };\n          var paddedWidth = width + BORDER_SIZE * 2;\n          var paddedHeight = height + BORDER_SIZE * 2;\n          var canvas, tmpCanvas, i, ii;\n          if (webGLContext.isEnabled) {\n            canvas = webGLContext.drawFigures({\n              width: width,\n              height: height,\n              backgroundColor: backgroundColor,\n              figures: figures,\n              context: context\n            });\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          } else {\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            var tmpCtx = tmpCanvas.context;\n            var data = tmpCtx.createImageData(width, height);\n            if (backgroundColor) {\n              var bytes = data.data;\n              for (i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n            for (i = 0; i < figures.length; i++) {\n              drawFigure(data, figures[i], context);\n            }\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          }\n          return {\n            canvas: canvas,\n            offsetX: offsetX - BORDER_SIZE * scaleX,\n            offsetY: offsetY - BORDER_SIZE * scaleY,\n            scaleX: scaleX,\n            scaleY: scaleY\n          };\n        }\n        return createMeshCanvas;\n      }();\n      ShadingIRs.Mesh = {\n        fromIR: function Mesh_fromIR(raw) {\n          var coords = raw[2];\n          var colors = raw[3];\n          var figures = raw[4];\n          var bounds = raw[5];\n          var matrix = raw[6];\n          var bbox = raw[7];\n          var background = raw[8];\n          return {\n            type: \"Pattern\",\n            getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n              applyBoundingBox(ctx, bbox);\n              var scale;\n              if (shadingFill) {\n                scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n              } else {\n                scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n                if (matrix) {\n                  var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n                  scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n                }\n              }\n              var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n              if (!shadingFill) {\n                ctx.setTransform.apply(ctx, owner.baseTransform);\n                if (matrix) {\n                  ctx.transform.apply(ctx, matrix);\n                }\n              }\n              ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n              ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n              return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n            }\n          };\n        }\n      };\n      ShadingIRs.Dummy = {\n        fromIR: function Dummy_fromIR() {\n          return {\n            type: \"Pattern\",\n            getPattern: function Dummy_fromIR_getPattern() {\n              return \"hotpink\";\n            }\n          };\n        }\n      };\n      function getShadingPatternFromIR(raw) {\n        var shadingIR = ShadingIRs[raw[0]];\n        if (!shadingIR) {\n          throw new Error(\"Unknown IR type: \".concat(raw[0]));\n        }\n        return shadingIR.fromIR(raw);\n      }\n      var TilingPattern = function TilingPatternClosure() {\n        var PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n        var MAX_PATTERN_SIZE = 3000;\n        function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n          this.operatorList = IR[2];\n          this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n          this.bbox = IR[4];\n          this.xstep = IR[5];\n          this.ystep = IR[6];\n          this.paintType = IR[7];\n          this.tilingType = IR[8];\n          this.color = color;\n          this.canvasGraphicsFactory = canvasGraphicsFactory;\n          this.baseTransform = baseTransform;\n          this.type = \"Pattern\";\n          this.ctx = ctx;\n        }\n        TilingPattern.prototype = {\n          createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n            var operatorList = this.operatorList;\n            var bbox = this.bbox;\n            var xstep = this.xstep;\n            var ystep = this.ystep;\n            var paintType = this.paintType;\n            var tilingType = this.tilingType;\n            var color = this.color;\n            var canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            var x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n            var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n            var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n            var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            var tmpCtx = tmpCanvas.context;\n            var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            graphics.transform(1, 0, 0, 1, -x0, -y0);\n            this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n            graphics.executeOperatorList(operatorList);\n            this.ctx.transform(1, 0, 0, 1, x0, y0);\n            this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n            return tmpCanvas.canvas;\n          },\n          getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n            var size = Math.ceil(step * scale);\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n            return {\n              scale: scale,\n              size: size\n            };\n          },\n          clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n            if (Array.isArray(bbox) && bbox.length === 4) {\n              var bboxWidth = x1 - x0;\n              var bboxHeight = y1 - y0;\n              graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n              graphics.clip();\n              graphics.endPath();\n            }\n          },\n          setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            var context = graphics.ctx,\n              current = graphics.current;\n            switch (paintType) {\n              case PaintType.COLORED:\n                var ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n              case PaintType.UNCOLORED:\n                var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n              default:\n                throw new _util.FormatError(\"Unsupported paint type: \".concat(paintType));\n            }\n          },\n          getPattern: function TilingPattern_getPattern(ctx, owner) {\n            ctx = this.ctx;\n            ctx.setTransform.apply(ctx, this.baseTransform);\n            ctx.transform.apply(ctx, this.matrix);\n            var temporaryPatternCanvas = this.createPatternCanvas(owner);\n            return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n          }\n        };\n        return TilingPattern;\n      }();\n      exports.TilingPattern = TilingPattern;\n\n      /***/\n    }, /* 10 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalWorkerOptions = void 0;\n      var GlobalWorkerOptions = Object.create(null);\n      exports.GlobalWorkerOptions = GlobalWorkerOptions;\n      GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n      /***/\n    }, /* 11 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      var StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n      function wrapReason(reason) {\n        if (typeof reason !== \"object\" || reason === null) {\n          return reason;\n        }\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n      var MessageHandler = /*#__PURE__*/function () {\n        function MessageHandler(sourceName, targetName, comObj) {\n          var _this27 = this;\n          _classCallCheck(this, MessageHandler);\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.postMessageTransfers = true;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n          this._onComObjOnMessage = function (event) {\n            var data = event.data;\n            if (data.targetName !== _this27.sourceName) {\n              return;\n            }\n            if (data.stream) {\n              _this27._processStreamMessage(data);\n              return;\n            }\n            if (data.callback) {\n              var callbackId = data.callbackId;\n              var capability = _this27.callbackCapabilities[callbackId];\n              if (!capability) {\n                throw new Error(\"Cannot resolve callback \".concat(callbackId));\n              }\n              delete _this27.callbackCapabilities[callbackId];\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n              return;\n            }\n            var action = _this27.actionHandler[data.action];\n            if (!action) {\n              throw new Error(\"Unknown action from worker: \".concat(data.action));\n            }\n            if (data.callbackId) {\n              var _sourceName = _this27.sourceName;\n              var _targetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName: _sourceName,\n                  targetName: _targetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: _sourceName,\n                  targetName: _targetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n            if (data.streamId) {\n              _this27._createStreamSink(data);\n              return;\n            }\n            action(data.data);\n          };\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n        _createClass(MessageHandler, [{\n          key: \"on\",\n          value: function on(actionName, handler) {\n            var ah = this.actionHandler;\n            if (ah[actionName]) {\n              throw new Error(\"There is already an actionName called \\\"\".concat(actionName, \"\\\"\"));\n            }\n            ah[actionName] = handler;\n          }\n        }, {\n          key: \"send\",\n          value: function send(actionName, data, transfers) {\n            this._postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data: data\n            }, transfers);\n          }\n        }, {\n          key: \"sendWithPromise\",\n          value: function sendWithPromise(actionName, data, transfers) {\n            var callbackId = this.callbackId++;\n            var capability = (0, _util.createPromiseCapability)();\n            this.callbackCapabilities[callbackId] = capability;\n            try {\n              this._postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId: callbackId,\n                data: data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n            return capability.promise;\n          }\n        }, {\n          key: \"sendWithStream\",\n          value: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n            var _this28 = this;\n            var streamId = this.streamId++;\n            var sourceName = this.sourceName;\n            var targetName = this.targetName;\n            var comObj = this.comObj;\n            return new ReadableStream({\n              start: function start(controller) {\n                var startCapability = (0, _util.createPromiseCapability)();\n                _this28.streamControllers[streamId] = {\n                  controller: controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                _this28._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  action: actionName,\n                  streamId: streamId,\n                  data: data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: function pull(controller) {\n                var pullCapability = (0, _util.createPromiseCapability)();\n                _this28.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL,\n                  streamId: streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: function cancel(reason) {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                var cancelCapability = (0, _util.createPromiseCapability)();\n                _this28.streamControllers[streamId].cancelCall = cancelCapability;\n                _this28.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n        }, {\n          key: \"_createStreamSink\",\n          value: function _createStreamSink(data) {\n            var self = this;\n            var action = this.actionHandler[data.action];\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n            var streamSink = {\n              enqueue: function enqueue(chunk) {\n                var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                var transfers = arguments.length > 2 ? arguments[2] : undefined;\n                if (this.isCancelled) {\n                  return;\n                }\n                var lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = (0, _util.createPromiseCapability)();\n                  this.ready = this.sinkCapability.promise;\n                }\n                self._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId: streamId,\n                  chunk: chunk\n                }, transfers);\n              },\n              close: function close() {\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId: streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n              error: function error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ERROR,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n              sinkCapability: (0, _util.createPromiseCapability)(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n        }, {\n          key: \"_processStreamMessage\",\n          value: function _processStreamMessage(data) {\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].startCall.resolve();\n                } else {\n                  this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].pullCall.resolve();\n                } else {\n                  this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL:\n                if (!this.streamSinks[streamId]) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                  break;\n                }\n                if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                  this.streamSinks[streamId].sinkCapability.resolve();\n                }\n                this.streamSinks[streamId].desiredSize = data.desiredSize;\n                var onPull = this.streamSinks[data.streamId].onPull;\n                new Promise(function (resolve) {\n                  resolve(onPull && onPull());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n                this.streamControllers[streamId].controller.enqueue(data.chunk);\n                break;\n              case StreamKind.CLOSE:\n                (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n                this.streamControllers[streamId].isClosed = true;\n                this.streamControllers[streamId].controller.close();\n                this._deleteStreamController(streamId);\n                break;\n              case StreamKind.ERROR:\n                (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n                this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n                this._deleteStreamController(streamId);\n                break;\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].cancelCall.resolve();\n                } else {\n                  this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n                }\n                this._deleteStreamController(streamId);\n                break;\n              case StreamKind.CANCEL:\n                if (!this.streamSinks[streamId]) {\n                  break;\n                }\n                var onCancel = this.streamSinks[data.streamId].onCancel;\n                new Promise(function (resolve) {\n                  resolve(onCancel && onCancel(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n                this.streamSinks[streamId].isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n        }, {\n          key: \"_deleteStreamController\",\n          value: function () {\n            var _deleteStreamController2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(streamId) {\n              return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n                      return capability && capability.promise;\n                    }));\n                  case 2:\n                    delete this.streamControllers[streamId];\n                  case 3:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6, this);\n            }));\n            function _deleteStreamController(_x5) {\n              return _deleteStreamController2.apply(this, arguments);\n            }\n            return _deleteStreamController;\n          }()\n        }, {\n          key: \"_postMessage\",\n          value: function _postMessage(message, transfers) {\n            if (transfers && this.postMessageTransfers) {\n              this.comObj.postMessage(message, transfers);\n            } else {\n              this.comObj.postMessage(message);\n            }\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n        }]);\n        return MessageHandler;\n      }();\n      exports.MessageHandler = MessageHandler;\n\n      /***/\n    }, /* 12 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Metadata = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _xml_parser = __w_pdfjs_require__(13);\n      var Metadata = /*#__PURE__*/function () {\n        function Metadata(data) {\n          _classCallCheck(this, Metadata);\n          (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n          data = this._repair(data);\n          var parser = new _xml_parser.SimpleXMLParser();\n          var xmlDocument = parser.parseFromString(data);\n          this._metadataMap = new Map();\n          if (xmlDocument) {\n            this._parse(xmlDocument);\n          }\n        }\n        _createClass(Metadata, [{\n          key: \"_repair\",\n          value: function _repair(data) {\n            return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n              var bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n                return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n              }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n                switch (name) {\n                  case \"amp\":\n                    return \"&\";\n                  case \"apos\":\n                    return \"'\";\n                  case \"gt\":\n                    return \">\";\n                  case \"lt\":\n                    return \"<\";\n                  case \"quot\":\n                    return '\"';\n                }\n                throw new Error(\"_repair: \".concat(name, \" isn't defined.\"));\n              });\n              var chars = \"\";\n              for (var i = 0, ii = bytes.length; i < ii; i += 2) {\n                var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n                if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n                  chars += String.fromCharCode(code);\n                } else {\n                  chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n                }\n              }\n              return \">\" + chars;\n            });\n          }\n        }, {\n          key: \"_parse\",\n          value: function _parse(xmlDocument) {\n            var rdf = xmlDocument.documentElement;\n            if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n              rdf = rdf.firstChild;\n              while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n                rdf = rdf.nextSibling;\n              }\n            }\n            var nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n            if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n              return;\n            }\n            var children = rdf.childNodes;\n            for (var i = 0, ii = children.length; i < ii; i++) {\n              var desc = children[i];\n              if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n                continue;\n              }\n              for (var j = 0, jj = desc.childNodes.length; j < jj; j++) {\n                if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n                  var entry = desc.childNodes[j];\n                  var name = entry.nodeName.toLowerCase();\n                  this._metadataMap.set(name, entry.textContent.trim());\n                }\n              }\n            }\n          }\n        }, {\n          key: \"get\",\n          value: function get(name) {\n            return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n          }\n        }, {\n          key: \"getAll\",\n          value: function getAll() {\n            var obj = Object.create(null);\n            var _iterator8 = _createForOfIteratorHelper(this._metadataMap),\n              _step8;\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _step8$value = _slicedToArray(_step8.value, 2),\n                  key = _step8$value[0],\n                  value = _step8$value[1];\n                obj[key] = value;\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n            return obj;\n          }\n        }, {\n          key: \"has\",\n          value: function has(name) {\n            return this._metadataMap.has(name);\n          }\n        }]);\n        return Metadata;\n      }();\n      exports.Metadata = Metadata;\n\n      /***/\n    }, /* 13 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SimpleXMLParser = void 0;\n      var XMLParserErrorCode = {\n        NoError: 0,\n        EndOfDocument: -1,\n        UnterminatedCdat: -2,\n        UnterminatedXmlDeclaration: -3,\n        UnterminatedDoctypeDeclaration: -4,\n        UnterminatedComment: -5,\n        MalformedElement: -6,\n        OutOfMemory: -7,\n        UnterminatedAttributeValue: -8,\n        UnterminatedElement: -9,\n        ElementNeverBegun: -10\n      };\n      function isWhitespace(s, index) {\n        var ch = s[index];\n        return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n      }\n      function isWhitespaceString(s) {\n        for (var i = 0, ii = s.length; i < ii; i++) {\n          if (!isWhitespace(s, i)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      var XMLParserBase = /*#__PURE__*/function () {\n        function XMLParserBase() {\n          _classCallCheck(this, XMLParserBase);\n        }\n        _createClass(XMLParserBase, [{\n          key: \"_resolveEntities\",\n          value: function _resolveEntities(s) {\n            var _this29 = this;\n            return s.replace(/&([^;]+);/g, function (all, entity) {\n              if (entity.substring(0, 2) === \"#x\") {\n                return String.fromCharCode(parseInt(entity.substring(2), 16));\n              } else if (entity.substring(0, 1) === \"#\") {\n                return String.fromCharCode(parseInt(entity.substring(1), 10));\n              }\n              switch (entity) {\n                case \"lt\":\n                  return \"<\";\n                case \"gt\":\n                  return \">\";\n                case \"amp\":\n                  return \"&\";\n                case \"quot\":\n                  return '\"';\n              }\n              return _this29.onResolveEntity(entity);\n            });\n          }\n        }, {\n          key: \"_parseContent\",\n          value: function _parseContent(s, start) {\n            var attributes = [];\n            var pos = start;\n            function skipWs() {\n              while (pos < s.length && isWhitespace(s, pos)) {\n                ++pos;\n              }\n            }\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n              ++pos;\n            }\n            var name = s.substring(start, pos);\n            skipWs();\n            while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n              skipWs();\n              var attrName = \"\",\n                attrValue = \"\";\n              while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n                attrName += s[pos];\n                ++pos;\n              }\n              skipWs();\n              if (s[pos] !== \"=\") {\n                return null;\n              }\n              ++pos;\n              skipWs();\n              var attrEndChar = s[pos];\n              if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n                return null;\n              }\n              var attrEndIndex = s.indexOf(attrEndChar, ++pos);\n              if (attrEndIndex < 0) {\n                return null;\n              }\n              attrValue = s.substring(pos, attrEndIndex);\n              attributes.push({\n                name: attrName,\n                value: this._resolveEntities(attrValue)\n              });\n              pos = attrEndIndex + 1;\n              skipWs();\n            }\n            return {\n              name: name,\n              attributes: attributes,\n              parsed: pos - start\n            };\n          }\n        }, {\n          key: \"_parseProcessingInstruction\",\n          value: function _parseProcessingInstruction(s, start) {\n            var pos = start;\n            function skipWs() {\n              while (pos < s.length && isWhitespace(s, pos)) {\n                ++pos;\n              }\n            }\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n              ++pos;\n            }\n            var name = s.substring(start, pos);\n            skipWs();\n            var attrStart = pos;\n            while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n              ++pos;\n            }\n            var value = s.substring(attrStart, pos);\n            return {\n              name: name,\n              value: value,\n              parsed: pos - start\n            };\n          }\n        }, {\n          key: \"parseXml\",\n          value: function parseXml(s) {\n            var i = 0;\n            while (i < s.length) {\n              var ch = s[i];\n              var j = i;\n              if (ch === \"<\") {\n                ++j;\n                var ch2 = s[j];\n                var q = void 0;\n                switch (ch2) {\n                  case \"/\":\n                    ++j;\n                    q = s.indexOf(\">\", j);\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedElement);\n                      return;\n                    }\n                    this.onEndElement(s.substring(j, q));\n                    j = q + 1;\n                    break;\n                  case \"?\":\n                    ++j;\n                    var pi = this._parseProcessingInstruction(s, j);\n                    if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                      this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                      return;\n                    }\n                    this.onPi(pi.name, pi.value);\n                    j += pi.parsed + 2;\n                    break;\n                  case \"!\":\n                    if (s.substring(j + 1, j + 3) === \"--\") {\n                      q = s.indexOf(\"-->\", j + 3);\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedComment);\n                        return;\n                      }\n                      this.onComment(s.substring(j + 3, q));\n                      j = q + 3;\n                    } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                      q = s.indexOf(\"]]>\", j + 8);\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedCdat);\n                        return;\n                      }\n                      this.onCdata(s.substring(j + 8, q));\n                      j = q + 3;\n                    } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                      var q2 = s.indexOf(\"[\", j + 8);\n                      var complexDoctype = false;\n                      q = s.indexOf(\">\", j + 8);\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                        return;\n                      }\n                      if (q2 > 0 && q > q2) {\n                        q = s.indexOf(\"]>\", j + 8);\n                        if (q < 0) {\n                          this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                          return;\n                        }\n                        complexDoctype = true;\n                      }\n                      var doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                      this.onDoctype(doctypeContent);\n                      j = q + (complexDoctype ? 2 : 1);\n                    } else {\n                      this.onError(XMLParserErrorCode.MalformedElement);\n                      return;\n                    }\n                    break;\n                  default:\n                    var content = this._parseContent(s, j);\n                    if (content === null) {\n                      this.onError(XMLParserErrorCode.MalformedElement);\n                      return;\n                    }\n                    var isClosed = false;\n                    if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                      isClosed = true;\n                    } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                      this.onError(XMLParserErrorCode.UnterminatedElement);\n                      return;\n                    }\n                    this.onBeginElement(content.name, content.attributes, isClosed);\n                    j += content.parsed + (isClosed ? 2 : 1);\n                    break;\n                }\n              } else {\n                while (j < s.length && s[j] !== \"<\") {\n                  j++;\n                }\n                var text = s.substring(i, j);\n                this.onText(this._resolveEntities(text));\n              }\n              i = j;\n            }\n          }\n        }, {\n          key: \"onResolveEntity\",\n          value: function onResolveEntity(name) {\n            return \"&\".concat(name, \";\");\n          }\n        }, {\n          key: \"onPi\",\n          value: function onPi(name, value) {}\n        }, {\n          key: \"onComment\",\n          value: function onComment(text) {}\n        }, {\n          key: \"onCdata\",\n          value: function onCdata(text) {}\n        }, {\n          key: \"onDoctype\",\n          value: function onDoctype(doctypeContent) {}\n        }, {\n          key: \"onText\",\n          value: function onText(text) {}\n        }, {\n          key: \"onBeginElement\",\n          value: function onBeginElement(name, attributes, isEmpty) {}\n        }, {\n          key: \"onEndElement\",\n          value: function onEndElement(name) {}\n        }, {\n          key: \"onError\",\n          value: function onError(code) {}\n        }]);\n        return XMLParserBase;\n      }();\n      var SimpleDOMNode = /*#__PURE__*/function () {\n        function SimpleDOMNode(nodeName, nodeValue) {\n          _classCallCheck(this, SimpleDOMNode);\n          this.nodeName = nodeName;\n          this.nodeValue = nodeValue;\n          Object.defineProperty(this, \"parentNode\", {\n            value: null,\n            writable: true\n          });\n        }\n        _createClass(SimpleDOMNode, [{\n          key: \"firstChild\",\n          get: function get() {\n            return this.childNodes && this.childNodes[0];\n          }\n        }, {\n          key: \"nextSibling\",\n          get: function get() {\n            var childNodes = this.parentNode.childNodes;\n            if (!childNodes) {\n              return undefined;\n            }\n            var index = childNodes.indexOf(this);\n            if (index === -1) {\n              return undefined;\n            }\n            return childNodes[index + 1];\n          }\n        }, {\n          key: \"textContent\",\n          get: function get() {\n            if (!this.childNodes) {\n              return this.nodeValue || \"\";\n            }\n            return this.childNodes.map(function (child) {\n              return child.textContent;\n            }).join(\"\");\n          }\n        }, {\n          key: \"hasChildNodes\",\n          value: function hasChildNodes() {\n            return this.childNodes && this.childNodes.length > 0;\n          }\n        }]);\n        return SimpleDOMNode;\n      }();\n      var SimpleXMLParser = /*#__PURE__*/function (_XMLParserBase) {\n        _inherits(SimpleXMLParser, _XMLParserBase);\n        var _super10 = _createSuper(SimpleXMLParser);\n        function SimpleXMLParser() {\n          var _this30;\n          _classCallCheck(this, SimpleXMLParser);\n          _this30 = _super10.call(this);\n          _this30._currentFragment = null;\n          _this30._stack = null;\n          _this30._errorCode = XMLParserErrorCode.NoError;\n          return _this30;\n        }\n        _createClass(SimpleXMLParser, [{\n          key: \"parseFromString\",\n          value: function parseFromString(data) {\n            this._currentFragment = [];\n            this._stack = [];\n            this._errorCode = XMLParserErrorCode.NoError;\n            this.parseXml(data);\n            if (this._errorCode !== XMLParserErrorCode.NoError) {\n              return undefined;\n            }\n            var _this$_currentFragmen = _slicedToArray(this._currentFragment, 1),\n              documentElement = _this$_currentFragmen[0];\n            if (!documentElement) {\n              return undefined;\n            }\n            return {\n              documentElement: documentElement\n            };\n          }\n        }, {\n          key: \"onResolveEntity\",\n          value: function onResolveEntity(name) {\n            switch (name) {\n              case \"apos\":\n                return \"'\";\n            }\n            return _get(_getPrototypeOf(SimpleXMLParser.prototype), \"onResolveEntity\", this).call(this, name);\n          }\n        }, {\n          key: \"onText\",\n          value: function onText(text) {\n            if (isWhitespaceString(text)) {\n              return;\n            }\n            var node = new SimpleDOMNode(\"#text\", text);\n            this._currentFragment.push(node);\n          }\n        }, {\n          key: \"onCdata\",\n          value: function onCdata(text) {\n            var node = new SimpleDOMNode(\"#text\", text);\n            this._currentFragment.push(node);\n          }\n        }, {\n          key: \"onBeginElement\",\n          value: function onBeginElement(name, attributes, isEmpty) {\n            var node = new SimpleDOMNode(name);\n            node.childNodes = [];\n            this._currentFragment.push(node);\n            if (isEmpty) {\n              return;\n            }\n            this._stack.push(this._currentFragment);\n            this._currentFragment = node.childNodes;\n          }\n        }, {\n          key: \"onEndElement\",\n          value: function onEndElement(name) {\n            this._currentFragment = this._stack.pop() || [];\n            var lastElement = this._currentFragment[this._currentFragment.length - 1];\n            if (!lastElement) {\n              return;\n            }\n            for (var i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n              lastElement.childNodes[i].parentNode = lastElement;\n            }\n          }\n        }, {\n          key: \"onError\",\n          value: function onError(code) {\n            this._errorCode = code;\n          }\n        }]);\n        return SimpleXMLParser;\n      }(XMLParserBase);\n      exports.SimpleXMLParser = SimpleXMLParser;\n\n      /***/\n    }, /* 14 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDataTransportStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var PDFDataTransportStream = /*#__PURE__*/function () {\n        function PDFDataTransportStream(params, pdfDataRangeTransport) {\n          var _this31 = this;\n          _classCallCheck(this, PDFDataTransportStream);\n          (0, _util.assert)(pdfDataRangeTransport);\n          this._queuedChunks = [];\n          this._progressiveDone = params.progressiveDone || false;\n          var initialData = params.initialData;\n          if (initialData && initialData.length > 0) {\n            var buffer = new Uint8Array(initialData).buffer;\n            this._queuedChunks.push(buffer);\n          }\n          this._pdfDataRangeTransport = pdfDataRangeTransport;\n          this._isStreamingSupported = !params.disableStream;\n          this._isRangeSupported = !params.disableRange;\n          this._contentLength = params.length;\n          this._fullRequestReader = null;\n          this._rangeReaders = [];\n          this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {\n            _this31._onReceiveData({\n              begin: begin,\n              chunk: chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressListener(function (loaded, total) {\n            _this31._onProgress({\n              loaded: loaded,\n              total: total\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {\n            _this31._onReceiveData({\n              chunk: chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveDoneListener(function () {\n            _this31._onProgressiveDone();\n          });\n          this._pdfDataRangeTransport.transportReady();\n        }\n        _createClass(PDFDataTransportStream, [{\n          key: \"_onReceiveData\",\n          value: function _onReceiveData(args) {\n            var buffer = new Uint8Array(args.chunk).buffer;\n            if (args.begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              var found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== args.begin) {\n                  return false;\n                }\n                rangeReader._enqueue(buffer);\n                return true;\n              });\n              (0, _util.assert)(found);\n            }\n          }\n        }, {\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (evt.total === undefined) {\n              var firstReader = this._rangeReaders[0];\n              if (firstReader && firstReader.onProgress) {\n                firstReader.onProgress({\n                  loaded: evt.loaded\n                });\n              }\n            } else {\n              var fullReader = this._fullRequestReader;\n              if (fullReader && fullReader.onProgress) {\n                fullReader.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            }\n          }\n        }, {\n          key: \"_onProgressiveDone\",\n          value: function _onProgressiveDone() {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.progressiveDone();\n            }\n            this._progressiveDone = true;\n          }\n        }, {\n          key: \"_removeRangeReader\",\n          value: function _removeRangeReader(reader) {\n            var i = this._rangeReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader);\n            var queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n            this._rangeReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeReaders.slice(0);\n            readers.forEach(function (rangeReader) {\n              rangeReader.cancel(reason);\n            });\n            this._pdfDataRangeTransport.abort();\n          }\n        }]);\n        return PDFDataTransportStream;\n      }();\n      exports.PDFDataTransportStream = PDFDataTransportStream;\n      var PDFDataTransportStreamReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamReader(stream, queuedChunks) {\n          var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          _classCallCheck(this, PDFDataTransportStreamReader);\n          this._stream = stream;\n          this._done = progressiveDone || false;\n          this._filename = null;\n          this._queuedChunks = queuedChunks || [];\n          this._loaded = 0;\n          var _iterator9 = _createForOfIteratorHelper(this._queuedChunks),\n            _step9;\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var chunk = _step9.value;\n              this._loaded += chunk.byteLength;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n          this._requests = [];\n          this._headersReady = Promise.resolve();\n          stream._fullRequestReader = this;\n          this.onProgress = null;\n        }\n        _createClass(PDFDataTransportStreamReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n            this._loaded += chunk.byteLength;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReady;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._stream._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._stream._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._stream._contentLength;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    if (!(this._queuedChunks.length > 0)) {\n                      _context7.next = 3;\n                      break;\n                    }\n                    chunk = this._queuedChunks.shift();\n                    return _context7.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 3:\n                    if (!this._done) {\n                      _context7.next = 5;\n                      break;\n                    }\n                    return _context7.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 5:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context7.abrupt(\"return\", requestCapability.promise);\n                  case 8:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7, this);\n            }));\n            function read() {\n              return _read.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n          }\n        }, {\n          key: \"progressiveDone\",\n          value: function progressiveDone() {\n            if (this._done) {\n              return;\n            }\n            this._done = true;\n          }\n        }]);\n        return PDFDataTransportStreamReader;\n      }();\n      var PDFDataTransportStreamRangeReader = /*#__PURE__*/function () {\n        function PDFDataTransportStreamRangeReader(stream, begin, end) {\n          _classCallCheck(this, PDFDataTransportStreamRangeReader);\n          this._stream = stream;\n          this._begin = begin;\n          this._end = end;\n          this._queuedChunk = null;\n          this._requests = [];\n          this._done = false;\n          this.onProgress = null;\n        }\n        _createClass(PDFDataTransportStreamRangeReader, [{\n          key: \"_enqueue\",\n          value: function _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              var requestsCapability = this._requests.shift();\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n              this._requests.forEach(function (requestCapability) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              });\n              this._requests = [];\n            }\n            this._done = true;\n            this._stream._removeRangeReader(this);\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    if (!this._queuedChunk) {\n                      _context8.next = 4;\n                      break;\n                    }\n                    chunk = this._queuedChunk;\n                    this._queuedChunk = null;\n                    return _context8.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 4:\n                    if (!this._done) {\n                      _context8.next = 6;\n                      break;\n                    }\n                    return _context8.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 6:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context8.abrupt(\"return\", requestCapability.promise);\n                  case 9:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8, this);\n            }));\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            this._stream._removeRangeReader(this);\n          }\n        }]);\n        return PDFDataTransportStreamRangeReader;\n      }();\n      /***/\n    }, /* 15 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebGLContext = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var WebGLContext = /*#__PURE__*/function () {\n        function WebGLContext(_ref26) {\n          var _ref26$enable = _ref26.enable,\n            enable = _ref26$enable === void 0 ? false : _ref26$enable;\n          _classCallCheck(this, WebGLContext);\n          this._enabled = enable === true;\n        }\n        _createClass(WebGLContext, [{\n          key: \"isEnabled\",\n          get: function get() {\n            var enabled = this._enabled;\n            if (enabled) {\n              enabled = WebGLUtils.tryInitGL();\n            }\n            return (0, _util.shadow)(this, \"isEnabled\", enabled);\n          }\n        }, {\n          key: \"composeSMask\",\n          value: function composeSMask(_ref27) {\n            var layer = _ref27.layer,\n              mask = _ref27.mask,\n              properties = _ref27.properties;\n            return WebGLUtils.composeSMask(layer, mask, properties);\n          }\n        }, {\n          key: \"drawFigures\",\n          value: function drawFigures(_ref28) {\n            var width = _ref28.width,\n              height = _ref28.height,\n              backgroundColor = _ref28.backgroundColor,\n              figures = _ref28.figures,\n              context = _ref28.context;\n            return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            WebGLUtils.cleanup();\n          }\n        }]);\n        return WebGLContext;\n      }();\n      exports.WebGLContext = WebGLContext;\n      var WebGLUtils = function WebGLUtilsClosure() {\n        function loadShader(gl, code, shaderType) {\n          var shader = gl.createShader(shaderType);\n          gl.shaderSource(shader, code);\n          gl.compileShader(shader);\n          var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n          if (!compiled) {\n            var errorMsg = gl.getShaderInfoLog(shader);\n            throw new Error(\"Error during shader compilation: \" + errorMsg);\n          }\n          return shader;\n        }\n        function createVertexShader(gl, code) {\n          return loadShader(gl, code, gl.VERTEX_SHADER);\n        }\n        function createFragmentShader(gl, code) {\n          return loadShader(gl, code, gl.FRAGMENT_SHADER);\n        }\n        function createProgram(gl, shaders) {\n          var program = gl.createProgram();\n          for (var i = 0, ii = shaders.length; i < ii; ++i) {\n            gl.attachShader(program, shaders[i]);\n          }\n          gl.linkProgram(program);\n          var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n          if (!linked) {\n            var errorMsg = gl.getProgramInfoLog(program);\n            throw new Error(\"Error during program linking: \" + errorMsg);\n          }\n          return program;\n        }\n        function createTexture(gl, image, textureId) {\n          gl.activeTexture(textureId);\n          var texture = gl.createTexture();\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n          return texture;\n        }\n        var currentGL, currentCanvas;\n        function generateGL() {\n          if (currentGL) {\n            return;\n          }\n          currentCanvas = document.createElement(\"canvas\");\n          currentGL = currentCanvas.getContext(\"webgl\", {\n            premultipliedalpha: false\n          });\n        }\n        var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n        var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n        var smaskCache = null;\n        function initSmaskGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n          cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n          var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n          var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n          var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n          var texCoordBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(texCoordLocation);\n          gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.uniform1i(texLayerLocation, 0);\n          gl.uniform1i(texMaskLocation, 1);\n          smaskCache = cache;\n        }\n        function composeSMask(layer, mask, properties) {\n          var width = layer.width,\n            height = layer.height;\n          if (!smaskCache) {\n            initSmaskGL();\n          }\n          var cache = smaskCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n          if (properties.backdrop) {\n            gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n          } else {\n            gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n          }\n          gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n          var texture = createTexture(gl, layer, gl.TEXTURE0);\n          var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n          var buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.clearColor(0, 0, 0, 0);\n          gl.enable(gl.BLEND);\n          gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\n          gl.flush();\n          gl.deleteTexture(texture);\n          gl.deleteTexture(maskTexture);\n          gl.deleteBuffer(buffer);\n          return canvas;\n        }\n        var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n        var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n        var figuresCache = null;\n        function initFiguresGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n          cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n          figuresCache = cache;\n        }\n        function drawFigures(width, height, backgroundColor, figures, context) {\n          if (!figuresCache) {\n            initFiguresGL();\n          }\n          var cache = figuresCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n          var count = 0;\n          var i, ii, rows;\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            switch (figures[i].type) {\n              case \"lattice\":\n                rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n                count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n                break;\n              case \"triangles\":\n                count += figures[i].coords.length;\n                break;\n            }\n          }\n          var coords = new Float32Array(count * 2);\n          var colors = new Uint8Array(count * 3);\n          var coordsMap = context.coords,\n            colorsMap = context.colors;\n          var pIndex = 0,\n            cIndex = 0;\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            var figure = figures[i],\n              ps = figure.coords,\n              cs = figure.colors;\n            switch (figure.type) {\n              case \"lattice\":\n                var cols = figure.verticesPerRow;\n                rows = ps.length / cols | 0;\n                for (var row = 1; row < rows; row++) {\n                  var offset = row * cols + 1;\n                  for (var col = 1; col < cols; col++, offset++) {\n                    coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                    coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                    coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                    coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                    coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                    coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                    colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                    colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                    colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                    colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                    colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                    colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                    colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                    colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                    colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                    coords[pIndex + 6] = coords[pIndex + 2];\n                    coords[pIndex + 7] = coords[pIndex + 3];\n                    coords[pIndex + 8] = coords[pIndex + 4];\n                    coords[pIndex + 9] = coords[pIndex + 5];\n                    coords[pIndex + 10] = coordsMap[ps[offset]];\n                    coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                    colors[cIndex + 9] = colors[cIndex + 3];\n                    colors[cIndex + 10] = colors[cIndex + 4];\n                    colors[cIndex + 11] = colors[cIndex + 5];\n                    colors[cIndex + 12] = colors[cIndex + 6];\n                    colors[cIndex + 13] = colors[cIndex + 7];\n                    colors[cIndex + 14] = colors[cIndex + 8];\n                    colors[cIndex + 15] = colorsMap[cs[offset]];\n                    colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                    colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                    pIndex += 12;\n                    cIndex += 18;\n                  }\n                }\n                break;\n              case \"triangles\":\n                for (var j = 0, jj = ps.length; j < jj; j++) {\n                  coords[pIndex] = coordsMap[ps[j]];\n                  coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                  colors[cIndex] = colorsMap[cs[j]];\n                  colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                  pIndex += 2;\n                  cIndex += 3;\n                }\n                break;\n            }\n          }\n          if (backgroundColor) {\n            gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n          } else {\n            gl.clearColor(0, 0, 0, 0);\n          }\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          var coordsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          var colorsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.colorLocation);\n          gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n          gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n          gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n          gl.drawArrays(gl.TRIANGLES, 0, count);\n          gl.flush();\n          gl.deleteBuffer(coordsBuffer);\n          gl.deleteBuffer(colorsBuffer);\n          return canvas;\n        }\n        return {\n          tryInitGL: function tryInitGL() {\n            try {\n              generateGL();\n              return !!currentGL;\n            } catch (ex) {}\n            return false;\n          },\n          composeSMask: composeSMask,\n          drawFigures: drawFigures,\n          cleanup: function cleanup() {\n            if (smaskCache && smaskCache.canvas) {\n              smaskCache.canvas.width = 0;\n              smaskCache.canvas.height = 0;\n            }\n            if (figuresCache && figuresCache.canvas) {\n              figuresCache.canvas.width = 0;\n              figuresCache.canvas.height = 0;\n            }\n            smaskCache = null;\n            figuresCache = null;\n          }\n        };\n      }();\n\n      /***/\n    }, /* 16 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.renderTextLayer = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var renderTextLayer = function renderTextLayerClosure() {\n        var MAX_TEXT_DIVS_TO_RENDER = 100000;\n        var NonWhitespaceRegexp = /\\S/;\n        function isAllWhitespace(str) {\n          return !NonWhitespaceRegexp.test(str);\n        }\n        function appendText(task, geom, styles) {\n          var textDiv = document.createElement(\"span\");\n          var textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            isWhitespace: false,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          };\n          task._textDivs.push(textDiv);\n          if (isAllWhitespace(geom.str)) {\n            textDivProperties.isWhitespace = true;\n            task._textDivProperties.set(textDiv, textDivProperties);\n            return;\n          }\n          var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n          var angle = Math.atan2(tx[1], tx[0]);\n          var style = styles[geom.fontName];\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n          var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n          var fontAscent = fontHeight;\n          if (style.ascent) {\n            fontAscent = style.ascent * fontAscent;\n          } else if (style.descent) {\n            fontAscent = (1 + style.descent) * fontAscent;\n          }\n          var left, top;\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n          textDiv.style.left = \"\".concat(left, \"px\");\n          textDiv.style.top = \"\".concat(top, \"px\");\n          textDiv.style.fontSize = \"\".concat(fontHeight, \"px\");\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.textContent = geom.str;\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n          if (geom.str.length > 1) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n          task._textDivProperties.set(textDiv, textDivProperties);\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n          if (task._enhanceTextSelection) {\n            var angleCos = 1,\n              angleSin = 0;\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n            var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            var divHeight = fontHeight;\n            var m, b;\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m: m\n            });\n          }\n        }\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n          var textDivs = task._textDivs;\n          var capability = task._capability;\n          var textDivsLength = textDivs.length;\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n          if (!task._textContentStream) {\n            for (var i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n          task._renderingDone = true;\n          capability.resolve();\n        }\n        function expand(task) {\n          var bounds = task._bounds;\n          var viewport = task._viewport;\n          var expanded = expandBounds(viewport.width, viewport.height, bounds);\n          for (var i = 0; i < expanded.length; i++) {\n            var div = bounds[i].div;\n            var divProperties = task._textDivProperties.get(div);\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n              task._textDivProperties.set(div, divProperties);\n              continue;\n            }\n            var e = expanded[i],\n              b = bounds[i];\n            var m = b.m,\n              c = m[0],\n              s = m[1];\n            var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            var ts = new Float64Array(64);\n            points.forEach(function (p, i) {\n              var t = _util.Util.applyTransform(p, m);\n              ts[i + 0] = c && (e.left - t[0]) / c;\n              ts[i + 4] = s && (e.top - t[1]) / s;\n              ts[i + 8] = c && (e.right - t[0]) / c;\n              ts[i + 12] = s && (e.bottom - t[1]) / s;\n              ts[i + 16] = s && (e.left - t[0]) / -s;\n              ts[i + 20] = c && (e.top - t[1]) / c;\n              ts[i + 24] = s && (e.right - t[0]) / -s;\n              ts[i + 28] = c && (e.bottom - t[1]) / c;\n              ts[i + 32] = c && (e.left - t[0]) / -c;\n              ts[i + 36] = s && (e.top - t[1]) / -s;\n              ts[i + 40] = c && (e.right - t[0]) / -c;\n              ts[i + 44] = s && (e.bottom - t[1]) / -s;\n              ts[i + 48] = s && (e.left - t[0]) / s;\n              ts[i + 52] = c && (e.top - t[1]) / -c;\n              ts[i + 56] = s && (e.right - t[0]) / s;\n              ts[i + 60] = c && (e.bottom - t[1]) / -c;\n            });\n            var findPositiveMin = function findPositiveMin(ts, offset, count) {\n              var result = 0;\n              for (var i = 0; i < count; i++) {\n                var t = ts[offset++];\n                if (t > 0) {\n                  result = result ? Math.min(t, result) : t;\n                }\n              }\n              return result;\n            };\n            var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n        function expandBounds(width, height, boxes) {\n          var bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          var expanded = new Array(boxes.length);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          });\n          boxes.map(function (box, i) {\n            var e = expanded[i],\n              b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i].top = b.x1New;\n            expanded[i].bottom = b.x2New;\n          });\n          return expanded;\n        }\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          var fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          var horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n          bounds.forEach(function (boundary) {\n            var i = 0;\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n            var j = horizon.length - 1;\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n            var horizonPart, affectedBoundary;\n            var q,\n              k,\n              maxXNew = -Infinity;\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var xNew;\n              if (affectedBoundary.x2 > boundary.x1) {\n                xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n              } else if (affectedBoundary.x2New === undefined) {\n                xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = affectedBoundary.x2New;\n              }\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n            boundary.x1New = maxXNew;\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              if (affectedBoundary.x2New === undefined) {\n                if (affectedBoundary.x2 > boundary.x1) {\n                  if (affectedBoundary.index > boundary.index) {\n                    affectedBoundary.x2New = affectedBoundary.x2;\n                  }\n                } else {\n                  affectedBoundary.x2New = maxXNew;\n                }\n              } else if (affectedBoundary.x2New > maxXNew) {\n                affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n              }\n            }\n            var changedHorizon = [],\n              lastBoundary = null;\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n              if (lastBoundary === useBoundary) {\n                changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: horizonPart.start,\n                  end: horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              if (affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n              var used = false;\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === affectedBoundary;\n              }\n              if (!used) {\n                affectedBoundary.x2New = maxXNew;\n              }\n            }\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          });\n          horizon.forEach(function (horizonPart) {\n            var affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          });\n        }\n        function TextLayerRenderTask(_ref29) {\n          var _this32 = this;\n          var textContent = _ref29.textContent,\n            textContentStream = _ref29.textContentStream,\n            container = _ref29.container,\n            viewport = _ref29.viewport,\n            textDivs = _ref29.textDivs,\n            textContentItemsStr = _ref29.textContentItemsStr,\n            enhanceTextSelection = _ref29.enhanceTextSelection;\n          this._textContent = textContent;\n          this._textContentStream = textContentStream;\n          this._container = container;\n          this._viewport = viewport;\n          this._textDivs = textDivs || [];\n          this._textContentItemsStr = textContentItemsStr || [];\n          this._enhanceTextSelection = !!enhanceTextSelection;\n          this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n          this._reader = null;\n          this._layoutTextLastFontSize = null;\n          this._layoutTextLastFontFamily = null;\n          this._layoutTextCtx = null;\n          this._textDivProperties = new WeakMap();\n          this._renderingDone = false;\n          this._canceled = false;\n          this._capability = (0, _util.createPromiseCapability)();\n          this._renderTimer = null;\n          this._bounds = [];\n          this._capability.promise.finally(function () {\n            if (_this32._layoutTextCtx) {\n              _this32._layoutTextCtx.canvas.width = 0;\n              _this32._layoutTextCtx.canvas.height = 0;\n              _this32._layoutTextCtx = null;\n            }\n          }).catch(function () {});\n        }\n        TextLayerRenderTask.prototype = {\n          get promise() {\n            return this._capability.promise;\n          },\n          cancel: function TextLayer_cancel() {\n            this._canceled = true;\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n              this._reader = null;\n            }\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          },\n          _processItems: function _processItems(items, styleCache) {\n            for (var i = 0, len = items.length; i < len; i++) {\n              this._textContentItemsStr.push(items[i].str);\n              appendText(this, items[i], styleCache);\n            }\n          },\n          _layoutText: function _layoutText(textDiv) {\n            var textDivProperties = this._textDivProperties.get(textDiv);\n            if (textDivProperties.isWhitespace) {\n              return;\n            }\n            var transform = \"\";\n            if (textDivProperties.canvasWidth !== 0) {\n              var _textDiv$style = textDiv.style,\n                fontSize = _textDiv$style.fontSize,\n                fontFamily = _textDiv$style.fontFamily;\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = \"\".concat(fontSize, \" \").concat(fontFamily);\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n              var _this$_layoutTextCtx$ = this._layoutTextCtx.measureText(textDiv.textContent),\n                width = _this$_layoutTextCtx$.width;\n              if (width > 0) {\n                textDivProperties.scale = textDivProperties.canvasWidth / width;\n                transform = \"scaleX(\".concat(textDivProperties.scale, \")\");\n              }\n            }\n            if (textDivProperties.angle !== 0) {\n              transform = \"rotate(\".concat(textDivProperties.angle, \"deg) \").concat(transform);\n            }\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n              textDiv.style.transform = transform;\n            }\n            this._textDivProperties.set(textDiv, textDivProperties);\n            this._container.appendChild(textDiv);\n          },\n          _render: function TextLayer_render(timeout) {\n            var _this33 = this;\n            var capability = (0, _util.createPromiseCapability)();\n            var styleCache = Object.create(null);\n            var canvas = document.createElement(\"canvas\");\n            canvas.mozOpaque = true;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n            if (this._textContent) {\n              var textItems = this._textContent.items;\n              var textStyles = this._textContent.styles;\n              this._processItems(textItems, textStyles);\n              capability.resolve();\n            } else if (this._textContentStream) {\n              var pump = function pump() {\n                _this33._reader.read().then(function (_ref30) {\n                  var value = _ref30.value,\n                    done = _ref30.done;\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n                  Object.assign(styleCache, value.styles);\n                  _this33._processItems(value.items, styleCache);\n                  pump();\n                }, capability.reject);\n              };\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n            }\n            capability.promise.then(function () {\n              styleCache = null;\n              if (!timeout) {\n                render(_this33);\n              } else {\n                _this33._renderTimer = setTimeout(function () {\n                  render(_this33);\n                  _this33._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          },\n          expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n            var transformBuf = [],\n              paddingBuf = [];\n            for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n              var div = this._textDivs[i];\n              var divProps = this._textDivProperties.get(div);\n              if (divProps.isWhitespace) {\n                continue;\n              }\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingTop, \"px\"));\n                  transformBuf.push(\"translateY(\".concat(-divProps.paddingTop, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingRight / divProps.scale, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingBottom, \"px\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(\"\".concat(divProps.paddingLeft / divProps.scale, \"px\"));\n                  transformBuf.push(\"translateX(\".concat(-divProps.paddingLeft / divProps.scale, \"px)\"));\n                } else {\n                  paddingBuf.push(0);\n                }\n                div.style.padding = paddingBuf.join(\" \");\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n        };\n        function renderTextLayer(renderParameters) {\n          var task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n          task._render(renderParameters.timeout);\n          return task;\n        }\n        return renderTextLayer;\n      }();\n      exports.renderTextLayer = renderTextLayer;\n\n      /***/\n    }, /* 17 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationLayer = void 0;\n      var _display_utils = __w_pdfjs_require__(4);\n      var _util = __w_pdfjs_require__(1);\n      var AnnotationElementFactory = /*#__PURE__*/function () {\n        function AnnotationElementFactory() {\n          _classCallCheck(this, AnnotationElementFactory);\n        }\n        _createClass(AnnotationElementFactory, null, [{\n          key: \"create\",\n          value: function create(parameters) {\n            var subtype = parameters.data.annotationType;\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n              case _util.AnnotationType.WIDGET:\n                var fieldType = parameters.data.fieldType;\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n                    return new PushButtonWidgetAnnotationElement(parameters);\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                }\n                return new WidgetAnnotationElement(parameters);\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n        }]);\n        return AnnotationElementFactory;\n      }();\n      var AnnotationElement = /*#__PURE__*/function () {\n        function AnnotationElement(parameters) {\n          var isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          _classCallCheck(this, AnnotationElement);\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.page = parameters.page;\n          this.viewport = parameters.viewport;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderInteractiveForms = parameters.renderInteractiveForms;\n          this.svgFactory = parameters.svgFactory;\n          if (isRenderable) {\n            this.container = this._createContainer(ignoreBorder);\n          }\n        }\n        _createClass(AnnotationElement, [{\n          key: \"_createContainer\",\n          value: function _createContainer() {\n            var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var data = this.data,\n              page = this.page,\n              viewport = this.viewport;\n            var container = document.createElement(\"section\");\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            container.setAttribute(\"data-annotation-id\", data.id);\n            var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n            container.style.transform = \"matrix(\".concat(viewport.transform.join(\",\"), \")\");\n            container.style.transformOrigin = \"-\".concat(rect[0], \"px -\").concat(rect[1], \"px\");\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = \"\".concat(data.borderStyle.width, \"px\");\n              if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n                width = width - 2 * data.borderStyle.width;\n                height = height - 2 * data.borderStyle.width;\n              }\n              var horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              var verticalRadius = data.borderStyle.verticalCornerRadius;\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                var radius = \"\".concat(horizontalRadius, \"px / \").concat(verticalRadius, \"px\");\n                container.style.borderRadius = radius;\n              }\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n                default:\n                  break;\n              }\n              if (data.color) {\n                container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n            container.style.left = \"\".concat(rect[0], \"px\");\n            container.style.top = \"\".concat(rect[1], \"px\");\n            container.style.width = \"\".concat(width, \"px\");\n            container.style.height = \"\".concat(height, \"px\");\n            return container;\n          }\n        }, {\n          key: \"_createPopup\",\n          value: function _createPopup(container, trigger, data) {\n            if (!trigger) {\n              trigger = document.createElement(\"div\");\n              trigger.style.height = container.style.height;\n              trigger.style.width = container.style.width;\n              container.appendChild(trigger);\n            }\n            var popupElement = new PopupElement({\n              container: container,\n              trigger: trigger,\n              color: data.color,\n              title: data.title,\n              modificationDate: data.modificationDate,\n              contents: data.contents,\n              hideWrapper: true\n            });\n            var popup = popupElement.render();\n            popup.style.left = container.style.width;\n            container.appendChild(popup);\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n        }]);\n        return AnnotationElement;\n      }();\n      var LinkAnnotationElement = /*#__PURE__*/function (_AnnotationElement) {\n        _inherits(LinkAnnotationElement, _AnnotationElement);\n        var _super11 = _createSuper(LinkAnnotationElement);\n        function LinkAnnotationElement(parameters) {\n          _classCallCheck(this, LinkAnnotationElement);\n          var isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n          return _super11.call(this, parameters, isRenderable);\n        }\n        _createClass(LinkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"linkAnnotation\";\n            var data = this.data,\n              linkService = this.linkService;\n            var link = document.createElement(\"a\");\n            if (data.url) {\n              (0, _display_utils.addLinkAttributes)(link, {\n                url: data.url,\n                target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n                rel: linkService.externalLinkRel,\n                enabled: linkService.externalLinkEnabled\n              });\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n            } else {\n              this._bindLink(link, data.dest);\n            }\n            this.container.appendChild(link);\n            return this.container;\n          }\n        }, {\n          key: \"_bindLink\",\n          value: function _bindLink(link, destination) {\n            var _this34 = this;\n            link.href = this.linkService.getDestinationHash(destination);\n            link.onclick = function () {\n              if (destination) {\n                _this34.linkService.navigateTo(destination);\n              }\n              return false;\n            };\n            if (destination) {\n              link.className = \"internalLink\";\n            }\n          }\n        }, {\n          key: \"_bindNamedAction\",\n          value: function _bindNamedAction(link, action) {\n            var _this35 = this;\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = function () {\n              _this35.linkService.executeNamedAction(action);\n              return false;\n            };\n            link.className = \"internalLink\";\n          }\n        }]);\n        return LinkAnnotationElement;\n      }(AnnotationElement);\n      var TextAnnotationElement = /*#__PURE__*/function (_AnnotationElement2) {\n        _inherits(TextAnnotationElement, _AnnotationElement2);\n        var _super12 = _createSuper(TextAnnotationElement);\n        function TextAnnotationElement(parameters) {\n          _classCallCheck(this, TextAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super12.call(this, parameters, isRenderable);\n        }\n        _createClass(TextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"textAnnotation\";\n            var image = document.createElement(\"img\");\n            image.style.height = this.container.style.height;\n            image.style.width = this.container.style.width;\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, image, this.data);\n            }\n            this.container.appendChild(image);\n            return this.container;\n          }\n        }]);\n        return TextAnnotationElement;\n      }(AnnotationElement);\n      var WidgetAnnotationElement = /*#__PURE__*/function (_AnnotationElement3) {\n        _inherits(WidgetAnnotationElement, _AnnotationElement3);\n        var _super13 = _createSuper(WidgetAnnotationElement);\n        function WidgetAnnotationElement() {\n          _classCallCheck(this, WidgetAnnotationElement);\n          return _super13.apply(this, arguments);\n        }\n        _createClass(WidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            return this.container;\n          }\n        }]);\n        return WidgetAnnotationElement;\n      }(AnnotationElement);\n      var TextWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem) {\n        _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);\n        var _super14 = _createSuper(TextWidgetAnnotationElement);\n        function TextWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, TextWidgetAnnotationElement);\n          var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n          return _super14.call(this, parameters, isRenderable);\n        }\n        _createClass(TextWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            this.container.className = \"textWidgetAnnotation\";\n            var element = null;\n            if (this.renderInteractiveForms) {\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = this.data.fieldValue;\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", this.data.fieldValue);\n              }\n              element.disabled = this.data.readOnly;\n              if (this.data.maxLen !== null) {\n                element.maxLength = this.data.maxLen;\n              }\n              if (this.data.comb) {\n                var fieldWidth = this.data.rect[2] - this.data.rect[0];\n                var combWidth = fieldWidth / this.data.maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = \"calc(\".concat(combWidth, \"px - 1ch)\");\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n              var font = null;\n              if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n                font = this.page.commonObjs.get(this.data.fontRefName);\n              }\n              this._setTextStyle(element, font);\n            }\n            if (this.data.textAlignment !== null) {\n              element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }, {\n          key: \"_setTextStyle\",\n          value: function _setTextStyle(element, font) {\n            var style = element.style;\n            style.fontSize = \"\".concat(this.data.fontSize, \"px\");\n            style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n            if (!font) {\n              return;\n            }\n            var bold = \"normal\";\n            if (font.black) {\n              bold = \"900\";\n            } else if (font.bold) {\n              bold = \"bold\";\n            }\n            style.fontWeight = bold;\n            style.fontStyle = font.italic ? \"italic\" : \"normal\";\n            var fontFamily = font.loadedName ? \"\\\"\".concat(font.loadedName, \"\\\", \") : \"\";\n            var fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n            style.fontFamily = fontFamily + fallbackName;\n          }\n        }]);\n        return TextWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var CheckboxWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem2) {\n        _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);\n        var _super15 = _createSuper(CheckboxWidgetAnnotationElement);\n        function CheckboxWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, CheckboxWidgetAnnotationElement);\n          return _super15.call(this, parameters, parameters.renderInteractiveForms);\n        }\n        _createClass(CheckboxWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"buttonWidgetAnnotation checkBox\";\n            var element = document.createElement(\"input\");\n            element.disabled = this.data.readOnly;\n            element.type = \"checkbox\";\n            if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n              element.setAttribute(\"checked\", true);\n            }\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }]);\n        return CheckboxWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var RadioButtonWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem3) {\n        _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);\n        var _super16 = _createSuper(RadioButtonWidgetAnnotationElement);\n        function RadioButtonWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, RadioButtonWidgetAnnotationElement);\n          return _super16.call(this, parameters, parameters.renderInteractiveForms);\n        }\n        _createClass(RadioButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"buttonWidgetAnnotation radioButton\";\n            var element = document.createElement(\"input\");\n            element.disabled = this.data.readOnly;\n            element.type = \"radio\";\n            element.name = this.data.fieldName;\n            if (this.data.fieldValue === this.data.buttonValue) {\n              element.setAttribute(\"checked\", true);\n            }\n            this.container.appendChild(element);\n            return this.container;\n          }\n        }]);\n        return RadioButtonWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var PushButtonWidgetAnnotationElement = /*#__PURE__*/function (_LinkAnnotationElemen) {\n        _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);\n        var _super17 = _createSuper(PushButtonWidgetAnnotationElement);\n        function PushButtonWidgetAnnotationElement() {\n          _classCallCheck(this, PushButtonWidgetAnnotationElement);\n          return _super17.apply(this, arguments);\n        }\n        _createClass(PushButtonWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var container = _get(_getPrototypeOf(PushButtonWidgetAnnotationElement.prototype), \"render\", this).call(this);\n            container.className = \"buttonWidgetAnnotation pushButton\";\n            return container;\n          }\n        }]);\n        return PushButtonWidgetAnnotationElement;\n      }(LinkAnnotationElement);\n      var ChoiceWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem4) {\n        _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);\n        var _super18 = _createSuper(ChoiceWidgetAnnotationElement);\n        function ChoiceWidgetAnnotationElement(parameters) {\n          _classCallCheck(this, ChoiceWidgetAnnotationElement);\n          return _super18.call(this, parameters, parameters.renderInteractiveForms);\n        }\n        _createClass(ChoiceWidgetAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"choiceWidgetAnnotation\";\n            var selectElement = document.createElement(\"select\");\n            selectElement.disabled = this.data.readOnly;\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n            var _iterator10 = _createForOfIteratorHelper(this.data.options),\n              _step10;\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var option = _step10.value;\n                var optionElement = document.createElement(\"option\");\n                optionElement.textContent = option.displayValue;\n                optionElement.value = option.exportValue;\n                if (this.data.fieldValue.includes(option.displayValue)) {\n                  optionElement.setAttribute(\"selected\", true);\n                }\n                selectElement.appendChild(optionElement);\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n            this.container.appendChild(selectElement);\n            return this.container;\n          }\n        }]);\n        return ChoiceWidgetAnnotationElement;\n      }(WidgetAnnotationElement);\n      var PopupAnnotationElement = /*#__PURE__*/function (_AnnotationElement4) {\n        _inherits(PopupAnnotationElement, _AnnotationElement4);\n        var _super19 = _createSuper(PopupAnnotationElement);\n        function PopupAnnotationElement(parameters) {\n          _classCallCheck(this, PopupAnnotationElement);\n          var isRenderable = !!(parameters.data.title || parameters.data.contents);\n          return _super19.call(this, parameters, isRenderable);\n        }\n        _createClass(PopupAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            var IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n            this.container.className = \"popupAnnotation\";\n            if (IGNORE_TYPES.includes(this.data.parentType)) {\n              return this.container;\n            }\n            var selector = \"[data-annotation-id=\\\"\".concat(this.data.parentId, \"\\\"]\");\n            var parentElement = this.layer.querySelector(selector);\n            if (!parentElement) {\n              return this.container;\n            }\n            var popup = new PopupElement({\n              container: this.container,\n              trigger: parentElement,\n              color: this.data.color,\n              title: this.data.title,\n              modificationDate: this.data.modificationDate,\n              contents: this.data.contents\n            });\n            var parentLeft = parseFloat(parentElement.style.left);\n            var parentWidth = parseFloat(parentElement.style.width);\n            this.container.style.transformOrigin = \"-\".concat(parentLeft + parentWidth, \"px -\").concat(parentElement.style.top);\n            this.container.style.left = \"\".concat(parentLeft + parentWidth, \"px\");\n            this.container.appendChild(popup.render());\n            return this.container;\n          }\n        }]);\n        return PopupAnnotationElement;\n      }(AnnotationElement);\n      var PopupElement = /*#__PURE__*/function () {\n        function PopupElement(parameters) {\n          _classCallCheck(this, PopupElement);\n          this.container = parameters.container;\n          this.trigger = parameters.trigger;\n          this.color = parameters.color;\n          this.title = parameters.title;\n          this.modificationDate = parameters.modificationDate;\n          this.contents = parameters.contents;\n          this.hideWrapper = parameters.hideWrapper || false;\n          this.pinned = false;\n        }\n        _createClass(PopupElement, [{\n          key: \"render\",\n          value: function render() {\n            var BACKGROUND_ENLIGHT = 0.7;\n            var wrapper = document.createElement(\"div\");\n            wrapper.className = \"popupWrapper\";\n            this.hideElement = this.hideWrapper ? wrapper : this.container;\n            this.hideElement.setAttribute(\"hidden\", true);\n            var popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            var color = this.color;\n            if (color) {\n              var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n              var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n              var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n              popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n            }\n            var title = document.createElement(\"h1\");\n            title.textContent = this.title;\n            popup.appendChild(title);\n            var dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n            if (dateObject) {\n              var modificationDate = document.createElement(\"span\");\n              modificationDate.textContent = \"{{date}}, {{time}}\";\n              modificationDate.dataset.l10nId = \"annotation_date_string\";\n              modificationDate.dataset.l10nArgs = JSON.stringify({\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n              popup.appendChild(modificationDate);\n            }\n            var contents = this._formatContents(this.contents);\n            popup.appendChild(contents);\n            this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n            this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n            this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n            popup.addEventListener(\"click\", this._hide.bind(this, true));\n            wrapper.appendChild(popup);\n            return wrapper;\n          }\n        }, {\n          key: \"_formatContents\",\n          value: function _formatContents(contents) {\n            var p = document.createElement(\"p\");\n            var lines = contents.split(/(?:\\r\\n?|\\n)/);\n            for (var i = 0, ii = lines.length; i < ii; ++i) {\n              var line = lines[i];\n              p.appendChild(document.createTextNode(line));\n              if (i < ii - 1) {\n                p.appendChild(document.createElement(\"br\"));\n              }\n            }\n            return p;\n          }\n        }, {\n          key: \"_toggle\",\n          value: function _toggle() {\n            if (this.pinned) {\n              this._hide(true);\n            } else {\n              this._show(true);\n            }\n          }\n        }, {\n          key: \"_show\",\n          value: function _show() {\n            var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (pin) {\n              this.pinned = true;\n            }\n            if (this.hideElement.hasAttribute(\"hidden\")) {\n              this.hideElement.removeAttribute(\"hidden\");\n              this.container.style.zIndex += 1;\n            }\n          }\n        }, {\n          key: \"_hide\",\n          value: function _hide() {\n            var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            if (unpin) {\n              this.pinned = false;\n            }\n            if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n              this.hideElement.setAttribute(\"hidden\", true);\n              this.container.style.zIndex -= 1;\n            }\n          }\n        }]);\n        return PopupElement;\n      }();\n      var FreeTextAnnotationElement = /*#__PURE__*/function (_AnnotationElement5) {\n        _inherits(FreeTextAnnotationElement, _AnnotationElement5);\n        var _super20 = _createSuper(FreeTextAnnotationElement);\n        function FreeTextAnnotationElement(parameters) {\n          _classCallCheck(this, FreeTextAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super20.call(this, parameters, isRenderable, true);\n        }\n        _createClass(FreeTextAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"freeTextAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return FreeTextAnnotationElement;\n      }(AnnotationElement);\n      var LineAnnotationElement = /*#__PURE__*/function (_AnnotationElement6) {\n        _inherits(LineAnnotationElement, _AnnotationElement6);\n        var _super21 = _createSuper(LineAnnotationElement);\n        function LineAnnotationElement(parameters) {\n          _classCallCheck(this, LineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super21.call(this, parameters, isRenderable, true);\n        }\n        _createClass(LineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"lineAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            svg.appendChild(line);\n            this.container.append(svg);\n            this._createPopup(this.container, line, data);\n            return this.container;\n          }\n        }]);\n        return LineAnnotationElement;\n      }(AnnotationElement);\n      var SquareAnnotationElement = /*#__PURE__*/function (_AnnotationElement7) {\n        _inherits(SquareAnnotationElement, _AnnotationElement7);\n        var _super22 = _createSuper(SquareAnnotationElement);\n        function SquareAnnotationElement(parameters) {\n          _classCallCheck(this, SquareAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super22.call(this, parameters, isRenderable, true);\n        }\n        _createClass(SquareAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"squareAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var borderWidth = data.borderStyle.width;\n            var square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"none\");\n            svg.appendChild(square);\n            this.container.append(svg);\n            this._createPopup(this.container, square, data);\n            return this.container;\n          }\n        }]);\n        return SquareAnnotationElement;\n      }(AnnotationElement);\n      var CircleAnnotationElement = /*#__PURE__*/function (_AnnotationElement8) {\n        _inherits(CircleAnnotationElement, _AnnotationElement8);\n        var _super23 = _createSuper(CircleAnnotationElement);\n        function CircleAnnotationElement(parameters) {\n          _classCallCheck(this, CircleAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super23.call(this, parameters, isRenderable, true);\n        }\n        _createClass(CircleAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"circleAnnotation\";\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var borderWidth = data.borderStyle.width;\n            var circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"none\");\n            svg.appendChild(circle);\n            this.container.append(svg);\n            this._createPopup(this.container, circle, data);\n            return this.container;\n          }\n        }]);\n        return CircleAnnotationElement;\n      }(AnnotationElement);\n      var PolylineAnnotationElement = /*#__PURE__*/function (_AnnotationElement9) {\n        _inherits(PolylineAnnotationElement, _AnnotationElement9);\n        var _super24 = _createSuper(PolylineAnnotationElement);\n        function PolylineAnnotationElement(parameters) {\n          var _this36;\n          _classCallCheck(this, PolylineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          _this36 = _super24.call(this, parameters, isRenderable, true);\n          _this36.containerClassName = \"polylineAnnotation\";\n          _this36.svgElementName = \"svg:polyline\";\n          return _this36;\n        }\n        _createClass(PolylineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var points = [];\n            var _iterator11 = _createForOfIteratorHelper(data.vertices),\n              _step11;\n            try {\n              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                var coordinate = _step11.value;\n                var x = coordinate.x - data.rect[0];\n                var y = data.rect[3] - coordinate.y;\n                points.push(x + \",\" + y);\n              }\n            } catch (err) {\n              _iterator11.e(err);\n            } finally {\n              _iterator11.f();\n            }\n            points = points.join(\" \");\n            var polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"none\");\n            svg.appendChild(polyline);\n            this.container.append(svg);\n            this._createPopup(this.container, polyline, data);\n            return this.container;\n          }\n        }]);\n        return PolylineAnnotationElement;\n      }(AnnotationElement);\n      var PolygonAnnotationElement = /*#__PURE__*/function (_PolylineAnnotationEl) {\n        _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);\n        var _super25 = _createSuper(PolygonAnnotationElement);\n        function PolygonAnnotationElement(parameters) {\n          var _this37;\n          _classCallCheck(this, PolygonAnnotationElement);\n          _this37 = _super25.call(this, parameters);\n          _this37.containerClassName = \"polygonAnnotation\";\n          _this37.svgElementName = \"svg:polygon\";\n          return _this37;\n        }\n        return _createClass(PolygonAnnotationElement);\n      }(PolylineAnnotationElement);\n      var CaretAnnotationElement = /*#__PURE__*/function (_AnnotationElement10) {\n        _inherits(CaretAnnotationElement, _AnnotationElement10);\n        var _super26 = _createSuper(CaretAnnotationElement);\n        function CaretAnnotationElement(parameters) {\n          _classCallCheck(this, CaretAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super26.call(this, parameters, isRenderable, true);\n        }\n        _createClass(CaretAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"caretAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return CaretAnnotationElement;\n      }(AnnotationElement);\n      var InkAnnotationElement = /*#__PURE__*/function (_AnnotationElement11) {\n        _inherits(InkAnnotationElement, _AnnotationElement11);\n        var _super27 = _createSuper(InkAnnotationElement);\n        function InkAnnotationElement(parameters) {\n          var _this38;\n          _classCallCheck(this, InkAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          _this38 = _super27.call(this, parameters, isRenderable, true);\n          _this38.containerClassName = \"inkAnnotation\";\n          _this38.svgElementName = \"svg:polyline\";\n          return _this38;\n        }\n        _createClass(InkAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = this.containerClassName;\n            var data = this.data;\n            var width = data.rect[2] - data.rect[0];\n            var height = data.rect[3] - data.rect[1];\n            var svg = this.svgFactory.create(width, height);\n            var _iterator12 = _createForOfIteratorHelper(data.inkLists),\n              _step12;\n            try {\n              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                var inkList = _step12.value;\n                var points = [];\n                var _iterator13 = _createForOfIteratorHelper(inkList),\n                  _step13;\n                try {\n                  for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                    var coordinate = _step13.value;\n                    var x = coordinate.x - data.rect[0];\n                    var y = data.rect[3] - coordinate.y;\n                    points.push(\"\".concat(x, \",\").concat(y));\n                  }\n                } catch (err) {\n                  _iterator13.e(err);\n                } finally {\n                  _iterator13.f();\n                }\n                points = points.join(\" \");\n                var polyline = this.svgFactory.createElement(this.svgElementName);\n                polyline.setAttribute(\"points\", points);\n                polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                polyline.setAttribute(\"stroke\", \"transparent\");\n                polyline.setAttribute(\"fill\", \"none\");\n                this._createPopup(this.container, polyline, data);\n                svg.appendChild(polyline);\n              }\n            } catch (err) {\n              _iterator12.e(err);\n            } finally {\n              _iterator12.f();\n            }\n            this.container.append(svg);\n            return this.container;\n          }\n        }]);\n        return InkAnnotationElement;\n      }(AnnotationElement);\n      var HighlightAnnotationElement = /*#__PURE__*/function (_AnnotationElement12) {\n        _inherits(HighlightAnnotationElement, _AnnotationElement12);\n        var _super28 = _createSuper(HighlightAnnotationElement);\n        function HighlightAnnotationElement(parameters) {\n          _classCallCheck(this, HighlightAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super28.call(this, parameters, isRenderable, true);\n        }\n        _createClass(HighlightAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"highlightAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return HighlightAnnotationElement;\n      }(AnnotationElement);\n      var UnderlineAnnotationElement = /*#__PURE__*/function (_AnnotationElement13) {\n        _inherits(UnderlineAnnotationElement, _AnnotationElement13);\n        var _super29 = _createSuper(UnderlineAnnotationElement);\n        function UnderlineAnnotationElement(parameters) {\n          _classCallCheck(this, UnderlineAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super29.call(this, parameters, isRenderable, true);\n        }\n        _createClass(UnderlineAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"underlineAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return UnderlineAnnotationElement;\n      }(AnnotationElement);\n      var SquigglyAnnotationElement = /*#__PURE__*/function (_AnnotationElement14) {\n        _inherits(SquigglyAnnotationElement, _AnnotationElement14);\n        var _super30 = _createSuper(SquigglyAnnotationElement);\n        function SquigglyAnnotationElement(parameters) {\n          _classCallCheck(this, SquigglyAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super30.call(this, parameters, isRenderable, true);\n        }\n        _createClass(SquigglyAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"squigglyAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return SquigglyAnnotationElement;\n      }(AnnotationElement);\n      var StrikeOutAnnotationElement = /*#__PURE__*/function (_AnnotationElement15) {\n        _inherits(StrikeOutAnnotationElement, _AnnotationElement15);\n        var _super31 = _createSuper(StrikeOutAnnotationElement);\n        function StrikeOutAnnotationElement(parameters) {\n          _classCallCheck(this, StrikeOutAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super31.call(this, parameters, isRenderable, true);\n        }\n        _createClass(StrikeOutAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"strikeoutAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return StrikeOutAnnotationElement;\n      }(AnnotationElement);\n      var StampAnnotationElement = /*#__PURE__*/function (_AnnotationElement16) {\n        _inherits(StampAnnotationElement, _AnnotationElement16);\n        var _super32 = _createSuper(StampAnnotationElement);\n        function StampAnnotationElement(parameters) {\n          _classCallCheck(this, StampAnnotationElement);\n          var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          return _super32.call(this, parameters, isRenderable, true);\n        }\n        _createClass(StampAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"stampAnnotation\";\n            if (!this.data.hasPopup) {\n              this._createPopup(this.container, null, this.data);\n            }\n            return this.container;\n          }\n        }]);\n        return StampAnnotationElement;\n      }(AnnotationElement);\n      var FileAttachmentAnnotationElement = /*#__PURE__*/function (_AnnotationElement17) {\n        _inherits(FileAttachmentAnnotationElement, _AnnotationElement17);\n        var _super33 = _createSuper(FileAttachmentAnnotationElement);\n        function FileAttachmentAnnotationElement(parameters) {\n          var _this39;\n          _classCallCheck(this, FileAttachmentAnnotationElement);\n          _this39 = _super33.call(this, parameters, true);\n          var _this39$data$file = _this39.data.file,\n            filename = _this39$data$file.filename,\n            content = _this39$data$file.content;\n          _this39.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n          _this39.content = content;\n          if (_this39.linkService.eventBus) {\n            _this39.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n              source: _assertThisInitialized(_this39),\n              id: (0, _util.stringToPDFString)(filename),\n              filename: filename,\n              content: content\n            });\n          }\n          return _this39;\n        }\n        _createClass(FileAttachmentAnnotationElement, [{\n          key: \"render\",\n          value: function render() {\n            this.container.className = \"fileAttachmentAnnotation\";\n            var trigger = document.createElement(\"div\");\n            trigger.style.height = this.container.style.height;\n            trigger.style.width = this.container.style.width;\n            trigger.addEventListener(\"dblclick\", this._download.bind(this));\n            if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n              this._createPopup(this.container, trigger, this.data);\n            }\n            this.container.appendChild(trigger);\n            return this.container;\n          }\n        }, {\n          key: \"_download\",\n          value: function _download() {\n            if (!this.downloadManager) {\n              (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n              return;\n            }\n            this.downloadManager.downloadData(this.content, this.filename, \"\");\n          }\n        }]);\n        return FileAttachmentAnnotationElement;\n      }(AnnotationElement);\n      var AnnotationLayer = /*#__PURE__*/function () {\n        function AnnotationLayer() {\n          _classCallCheck(this, AnnotationLayer);\n        }\n        _createClass(AnnotationLayer, null, [{\n          key: \"render\",\n          value: function render(parameters) {\n            var sortedAnnotations = [],\n              popupAnnotations = [];\n            var _iterator14 = _createForOfIteratorHelper(parameters.annotations),\n              _step14;\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var _data4 = _step14.value;\n                if (!_data4) {\n                  continue;\n                }\n                if (_data4.annotationType === _util.AnnotationType.POPUP) {\n                  popupAnnotations.push(_data4);\n                  continue;\n                }\n                sortedAnnotations.push(_data4);\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n            if (popupAnnotations.length) {\n              sortedAnnotations.push.apply(sortedAnnotations, popupAnnotations);\n            }\n            for (var _i7 = 0, _sortedAnnotations = sortedAnnotations; _i7 < _sortedAnnotations.length; _i7++) {\n              var data = _sortedAnnotations[_i7];\n              var element = AnnotationElementFactory.create({\n                data: data,\n                layer: parameters.div,\n                page: parameters.page,\n                viewport: parameters.viewport,\n                linkService: parameters.linkService,\n                downloadManager: parameters.downloadManager,\n                imageResourcesPath: parameters.imageResourcesPath || \"\",\n                renderInteractiveForms: parameters.renderInteractiveForms || false,\n                svgFactory: new _display_utils.DOMSVGFactory()\n              });\n              if (element.isRenderable) {\n                parameters.div.appendChild(element.render());\n              }\n            }\n          }\n        }, {\n          key: \"update\",\n          value: function update(parameters) {\n            var _iterator15 = _createForOfIteratorHelper(parameters.annotations),\n              _step15;\n            try {\n              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                var data = _step15.value;\n                var element = parameters.div.querySelector(\"[data-annotation-id=\\\"\".concat(data.id, \"\\\"]\"));\n                if (element) {\n                  element.style.transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n                }\n              }\n            } catch (err) {\n              _iterator15.e(err);\n            } finally {\n              _iterator15.f();\n            }\n            parameters.div.removeAttribute(\"hidden\");\n          }\n        }]);\n        return AnnotationLayer;\n      }();\n      exports.AnnotationLayer = AnnotationLayer;\n\n      /***/\n    }, /* 18 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SVGGraphics = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(4);\n      var _is_node = __w_pdfjs_require__(7);\n      var SVGGraphics = function SVGGraphics() {\n        throw new Error(\"Not implemented: SVGGraphics\");\n      };\n      exports.SVGGraphics = SVGGraphics;\n      {\n        var opListToTree = function opListToTree(opList) {\n          var opTree = [];\n          var tmp = [];\n          var _iterator16 = _createForOfIteratorHelper(opList),\n            _step16;\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var opListElement = _step16.value;\n              if (opListElement.fn === \"save\") {\n                opTree.push({\n                  fnId: 92,\n                  fn: \"group\",\n                  items: []\n                });\n                tmp.push(opTree);\n                opTree = opTree[opTree.length - 1].items;\n                continue;\n              }\n              if (opListElement.fn === \"restore\") {\n                opTree = tmp.pop();\n              } else {\n                opTree.push(opListElement);\n              }\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n          return opTree;\n        };\n        var pf = function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n          var s = value.toFixed(10);\n          var i = s.length - 1;\n          if (s[i] !== \"0\") {\n            return s;\n          }\n          do {\n            i--;\n          } while (s[i] === \"0\");\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        };\n        var pm = function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n              return \"scale(\".concat(pf(m[0]), \" \").concat(pf(m[3]), \")\");\n            }\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              var a = Math.acos(m[0]) * 180 / Math.PI;\n              return \"rotate(\".concat(pf(a), \")\");\n            }\n          } else {\n            if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n              return \"translate(\".concat(pf(m[4]), \" \").concat(pf(m[5]), \")\");\n            }\n          }\n          return \"matrix(\".concat(pf(m[0]), \" \").concat(pf(m[1]), \" \").concat(pf(m[2]), \" \").concat(pf(m[3]), \" \").concat(pf(m[4]), \" \") + \"\".concat(pf(m[5]), \")\");\n        };\n        var SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        var XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var convertImgDataToPng = function () {\n          var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          var CHUNK_WRAPPER_SIZE = 12;\n          var crcTable = new Int32Array(256);\n          for (var i = 0; i < 256; i++) {\n            var c = i;\n            for (var h = 0; h < 8; h++) {\n              if (c & 1) {\n                c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n              } else {\n                c = c >> 1 & 0x7fffffff;\n              }\n            }\n            crcTable[i] = c;\n          }\n          function crc32(data, start, end) {\n            var crc = -1;\n            for (var _i8 = start; _i8 < end; _i8++) {\n              var a = (crc ^ data[_i8]) & 0xff;\n              var b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n            return crc ^ -1;\n          }\n          function writePngChunk(type, body, data, offset) {\n            var p = offset;\n            var len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            var crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n          function adler32(data, start, end) {\n            var a = 1;\n            var b = 0;\n            for (var _i9 = start; _i9 < end; ++_i9) {\n              a = (a + (data[_i9] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n            return b << 16 | a;\n          }\n          function deflateSync(literals) {\n            if (!_is_node.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n            try {\n              var input;\n              if (parseInt(process.versions.node) >= 8) {\n                input = literals;\n              } else {\n                input = Buffer.from(literals);\n              }\n              var output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n            return deflateSyncUncompressed(literals);\n          }\n          function deflateSyncUncompressed(literals) {\n            var len = literals.length;\n            var maxBlockLength = 0xffff;\n            var deflateBlocks = Math.ceil(len / maxBlockLength);\n            var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            var pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            var pos = 0;\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            var adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var bitDepth, colorType, lineSize;\n            var bytes = imgData.data;\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n              default:\n                throw new Error(\"invalid format\");\n            }\n            var literals = new Uint8Array((1 + lineSize) * height);\n            var offsetLiterals = 0,\n              offsetBytes = 0;\n            for (var y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n              for (var _y = 0; _y < height; _y++) {\n                offsetLiterals++;\n                for (var _i10 = 0; _i10 < lineSize; _i10++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n            var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            var idat = deflateSync(literals);\n            var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            var data = new Uint8Array(pngLength);\n            var offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n          }\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n        var SVGExtraState = /*#__PURE__*/function () {\n          function SVGExtraState() {\n            _classCallCheck(this, SVGExtraState);\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n          _createClass(SVGExtraState, [{\n            key: \"clone\",\n            value: function clone() {\n              return Object.create(this);\n            }\n          }, {\n            key: \"setCurrentPoint\",\n            value: function setCurrentPoint(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n          }]);\n          return SVGExtraState;\n        }();\n        var clipCount = 0;\n        var maskCount = 0;\n        var shadingCount = 0;\n        exports.SVGGraphics = SVGGraphics = /*#__PURE__*/function () {\n          function SVGGraphics(commonObjs, objs, forceDataSchema) {\n            _classCallCheck(this, SVGGraphics);\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n            for (var op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n          _createClass(SVGGraphics, [{\n            key: \"save\",\n            value: function save() {\n              this.transformStack.push(this.transformMatrix);\n              var old = this.current;\n              this.extraStack.push(old);\n              this.current = old.clone();\n            }\n          }, {\n            key: \"restore\",\n            value: function restore() {\n              this.transformMatrix = this.transformStack.pop();\n              this.current = this.extraStack.pop();\n              this.pendingClip = null;\n              this.tgrp = null;\n            }\n          }, {\n            key: \"group\",\n            value: function group(items) {\n              this.save();\n              this.executeOpTree(items);\n              this.restore();\n            }\n          }, {\n            key: \"loadDependencies\",\n            value: function loadDependencies(operatorList) {\n              var _this40 = this;\n              var fnArray = operatorList.fnArray;\n              var argsArray = operatorList.argsArray;\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                if (fnArray[i] !== _util.OPS.dependency) {\n                  continue;\n                }\n                var _iterator17 = _createForOfIteratorHelper(argsArray[i]),\n                  _step17;\n                try {\n                  var _loop = function _loop() {\n                    var obj = _step17.value;\n                    var objsPool = obj.startsWith(\"g_\") ? _this40.commonObjs : _this40.objs;\n                    var promise = new Promise(function (resolve) {\n                      objsPool.get(obj, resolve);\n                    });\n                    _this40.current.dependencies.push(promise);\n                  };\n                  for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                    _loop();\n                  }\n                } catch (err) {\n                  _iterator17.e(err);\n                } finally {\n                  _iterator17.f();\n                }\n              }\n              return Promise.all(this.current.dependencies);\n            }\n          }, {\n            key: \"transform\",\n            value: function transform(a, b, c, d, e, f) {\n              var transformMatrix = [a, b, c, d, e, f];\n              this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n              this.tgrp = null;\n            }\n          }, {\n            key: \"getSVG\",\n            value: function getSVG(operatorList, viewport) {\n              var _this41 = this;\n              this.viewport = viewport;\n              var svgElement = this._initialize(viewport);\n              return this.loadDependencies(operatorList).then(function () {\n                _this41.transformMatrix = _util.IDENTITY_MATRIX;\n                _this41.executeOpTree(_this41.convertOpList(operatorList));\n                return svgElement;\n              });\n            }\n          }, {\n            key: \"convertOpList\",\n            value: function convertOpList(operatorList) {\n              var operatorIdMapping = this._operatorIdMapping;\n              var argsArray = operatorList.argsArray;\n              var fnArray = operatorList.fnArray;\n              var opList = [];\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                var fnId = fnArray[i];\n                opList.push({\n                  fnId: fnId,\n                  fn: operatorIdMapping[fnId],\n                  args: argsArray[i]\n                });\n              }\n              return opListToTree(opList);\n            }\n          }, {\n            key: \"executeOpTree\",\n            value: function executeOpTree(opTree) {\n              var _iterator18 = _createForOfIteratorHelper(opTree),\n                _step18;\n              try {\n                for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                  var opTreeElement = _step18.value;\n                  var fn = opTreeElement.fn;\n                  var fnId = opTreeElement.fnId;\n                  var args = opTreeElement.args;\n                  switch (fnId | 0) {\n                    case _util.OPS.beginText:\n                      this.beginText();\n                      break;\n                    case _util.OPS.dependency:\n                      break;\n                    case _util.OPS.setLeading:\n                      this.setLeading(args);\n                      break;\n                    case _util.OPS.setLeadingMoveText:\n                      this.setLeadingMoveText(args[0], args[1]);\n                      break;\n                    case _util.OPS.setFont:\n                      this.setFont(args);\n                      break;\n                    case _util.OPS.showText:\n                      this.showText(args[0]);\n                      break;\n                    case _util.OPS.showSpacedText:\n                      this.showText(args[0]);\n                      break;\n                    case _util.OPS.endText:\n                      this.endText();\n                      break;\n                    case _util.OPS.moveText:\n                      this.moveText(args[0], args[1]);\n                      break;\n                    case _util.OPS.setCharSpacing:\n                      this.setCharSpacing(args[0]);\n                      break;\n                    case _util.OPS.setWordSpacing:\n                      this.setWordSpacing(args[0]);\n                      break;\n                    case _util.OPS.setHScale:\n                      this.setHScale(args[0]);\n                      break;\n                    case _util.OPS.setTextMatrix:\n                      this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n                    case _util.OPS.setTextRise:\n                      this.setTextRise(args[0]);\n                      break;\n                    case _util.OPS.setTextRenderingMode:\n                      this.setTextRenderingMode(args[0]);\n                      break;\n                    case _util.OPS.setLineWidth:\n                      this.setLineWidth(args[0]);\n                      break;\n                    case _util.OPS.setLineJoin:\n                      this.setLineJoin(args[0]);\n                      break;\n                    case _util.OPS.setLineCap:\n                      this.setLineCap(args[0]);\n                      break;\n                    case _util.OPS.setMiterLimit:\n                      this.setMiterLimit(args[0]);\n                      break;\n                    case _util.OPS.setFillRGBColor:\n                      this.setFillRGBColor(args[0], args[1], args[2]);\n                      break;\n                    case _util.OPS.setStrokeRGBColor:\n                      this.setStrokeRGBColor(args[0], args[1], args[2]);\n                      break;\n                    case _util.OPS.setStrokeColorN:\n                      this.setStrokeColorN(args);\n                      break;\n                    case _util.OPS.setFillColorN:\n                      this.setFillColorN(args);\n                      break;\n                    case _util.OPS.shadingFill:\n                      this.shadingFill(args[0]);\n                      break;\n                    case _util.OPS.setDash:\n                      this.setDash(args[0], args[1]);\n                      break;\n                    case _util.OPS.setRenderingIntent:\n                      this.setRenderingIntent(args[0]);\n                      break;\n                    case _util.OPS.setFlatness:\n                      this.setFlatness(args[0]);\n                      break;\n                    case _util.OPS.setGState:\n                      this.setGState(args[0]);\n                      break;\n                    case _util.OPS.fill:\n                      this.fill();\n                      break;\n                    case _util.OPS.eoFill:\n                      this.eoFill();\n                      break;\n                    case _util.OPS.stroke:\n                      this.stroke();\n                      break;\n                    case _util.OPS.fillStroke:\n                      this.fillStroke();\n                      break;\n                    case _util.OPS.eoFillStroke:\n                      this.eoFillStroke();\n                      break;\n                    case _util.OPS.clip:\n                      this.clip(\"nonzero\");\n                      break;\n                    case _util.OPS.eoClip:\n                      this.clip(\"evenodd\");\n                      break;\n                    case _util.OPS.paintSolidColorImageMask:\n                      this.paintSolidColorImageMask();\n                      break;\n                    case _util.OPS.paintJpegXObject:\n                      this.paintJpegXObject(args[0], args[1], args[2]);\n                      break;\n                    case _util.OPS.paintImageXObject:\n                      this.paintImageXObject(args[0]);\n                      break;\n                    case _util.OPS.paintInlineImageXObject:\n                      this.paintInlineImageXObject(args[0]);\n                      break;\n                    case _util.OPS.paintImageMaskXObject:\n                      this.paintImageMaskXObject(args[0]);\n                      break;\n                    case _util.OPS.paintFormXObjectBegin:\n                      this.paintFormXObjectBegin(args[0], args[1]);\n                      break;\n                    case _util.OPS.paintFormXObjectEnd:\n                      this.paintFormXObjectEnd();\n                      break;\n                    case _util.OPS.closePath:\n                      this.closePath();\n                      break;\n                    case _util.OPS.closeStroke:\n                      this.closeStroke();\n                      break;\n                    case _util.OPS.closeFillStroke:\n                      this.closeFillStroke();\n                      break;\n                    case _util.OPS.closeEOFillStroke:\n                      this.closeEOFillStroke();\n                      break;\n                    case _util.OPS.nextLine:\n                      this.nextLine();\n                      break;\n                    case _util.OPS.transform:\n                      this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                      break;\n                    case _util.OPS.constructPath:\n                      this.constructPath(args[0], args[1]);\n                      break;\n                    case _util.OPS.endPath:\n                      this.endPath();\n                      break;\n                    case 92:\n                      this.group(opTreeElement.items);\n                      break;\n                    default:\n                      (0, _util.warn)(\"Unimplemented operator \".concat(fn));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator18.e(err);\n              } finally {\n                _iterator18.f();\n              }\n            }\n          }, {\n            key: \"setWordSpacing\",\n            value: function setWordSpacing(wordSpacing) {\n              this.current.wordSpacing = wordSpacing;\n            }\n          }, {\n            key: \"setCharSpacing\",\n            value: function setCharSpacing(charSpacing) {\n              this.current.charSpacing = charSpacing;\n            }\n          }, {\n            key: \"nextLine\",\n            value: function nextLine() {\n              this.moveText(0, this.current.leading);\n            }\n          }, {\n            key: \"setTextMatrix\",\n            value: function setTextMatrix(a, b, c, d, e, f) {\n              var current = this.current;\n              current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n              current.textMatrixScale = Math.sqrt(a * a + b * b);\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.xcoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtElement.appendChild(current.tspan);\n            }\n          }, {\n            key: \"beginText\",\n            value: function beginText() {\n              var current = this.current;\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.textMatrix = _util.IDENTITY_MATRIX;\n              current.lineMatrix = _util.IDENTITY_MATRIX;\n              current.textMatrixScale = 1;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n              current.xcoords = [];\n            }\n          }, {\n            key: \"moveText\",\n            value: function moveText(x, y) {\n              var current = this.current;\n              current.x = current.lineX += x;\n              current.y = current.lineY += y;\n              current.xcoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n          }, {\n            key: \"showText\",\n            value: function showText(glyphs) {\n              var current = this.current;\n              var font = current.font;\n              var fontSize = current.fontSize;\n              if (fontSize === 0) {\n                return;\n              }\n              var charSpacing = current.charSpacing;\n              var wordSpacing = current.wordSpacing;\n              var fontDirection = current.fontDirection;\n              var textHScale = current.textHScale * fontDirection;\n              var vertical = font.vertical;\n              var widthAdvanceScale = fontSize * current.fontMatrix[0];\n              var x = 0;\n              var _iterator19 = _createForOfIteratorHelper(glyphs),\n                _step19;\n              try {\n                for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                  var glyph = _step19.value;\n                  if (glyph === null) {\n                    x += fontDirection * wordSpacing;\n                    continue;\n                  } else if ((0, _util.isNum)(glyph)) {\n                    x += -glyph * fontSize * 0.001;\n                    continue;\n                  }\n                  var width = glyph.width;\n                  var character = glyph.fontChar;\n                  var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                  var charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                  if (!glyph.isInFont && !font.missingFile) {\n                    x += charWidth;\n                    continue;\n                  }\n                  current.xcoords.push(current.x + x);\n                  current.tspan.textContent += character;\n                  x += charWidth;\n                }\n              } catch (err) {\n                _iterator19.e(err);\n              } finally {\n                _iterator19.f();\n              }\n              if (vertical) {\n                current.y -= x * textHScale;\n              } else {\n                current.x += x * textHScale;\n              }\n              current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n              if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n                current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n              }\n              if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n                current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n              }\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                  current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                }\n                if (current.fillAlpha < 1) {\n                  current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                }\n              } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n                current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n              } else {\n                current.tspan.setAttributeNS(null, \"fill\", \"none\");\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                var lineWidthScale = 1 / (current.textMatrixScale || 1);\n                this._setStrokeAttributes(current.tspan, lineWidthScale);\n              }\n              var textMatrix = current.textMatrix;\n              if (current.textRise !== 0) {\n                textMatrix = textMatrix.slice();\n                textMatrix[5] += current.textRise;\n              }\n              current.txtElement.setAttributeNS(null, \"transform\", \"\".concat(pm(textMatrix), \" scale(\").concat(pf(textHScale), \", -1)\"));\n              current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n              current.txtElement.appendChild(current.tspan);\n              current.txtgrp.appendChild(current.txtElement);\n              this._ensureTransformGroup().appendChild(current.txtElement);\n            }\n          }, {\n            key: \"setLeadingMoveText\",\n            value: function setLeadingMoveText(x, y) {\n              this.setLeading(-y);\n              this.moveText(x, y);\n            }\n          }, {\n            key: \"addFontStyle\",\n            value: function addFontStyle(fontObj) {\n              if (!this.cssStyle) {\n                this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                this.defs.appendChild(this.cssStyle);\n              }\n              var url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n              this.cssStyle.textContent += \"@font-face { font-family: \\\"\".concat(fontObj.loadedName, \"\\\";\") + \" src: url(\".concat(url, \"); }\\n\");\n            }\n          }, {\n            key: \"setFont\",\n            value: function setFont(details) {\n              var current = this.current;\n              var fontObj = this.commonObjs.get(details[0]);\n              var size = details[1];\n              current.font = fontObj;\n              if (this.embedFonts && fontObj.data && !this.embeddedFonts[fontObj.loadedName]) {\n                this.addFontStyle(fontObj);\n                this.embeddedFonts[fontObj.loadedName] = fontObj;\n              }\n              current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n              var bold = \"normal\";\n              if (fontObj.black) {\n                bold = \"900\";\n              } else if (fontObj.bold) {\n                bold = \"bold\";\n              }\n              var italic = fontObj.italic ? \"italic\" : \"normal\";\n              if (size < 0) {\n                size = -size;\n                current.fontDirection = -1;\n              } else {\n                current.fontDirection = 1;\n              }\n              current.fontSize = size;\n              current.fontFamily = fontObj.loadedName;\n              current.fontWeight = bold;\n              current.fontStyle = italic;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.xcoords = [];\n            }\n          }, {\n            key: \"endText\",\n            value: function endText() {\n              var current = this.current;\n              if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n                current.element = current.txtElement;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"setLineWidth\",\n            value: function setLineWidth(width) {\n              if (width > 0) {\n                this.current.lineWidth = width;\n              }\n            }\n          }, {\n            key: \"setLineCap\",\n            value: function setLineCap(style) {\n              this.current.lineCap = LINE_CAP_STYLES[style];\n            }\n          }, {\n            key: \"setLineJoin\",\n            value: function setLineJoin(style) {\n              this.current.lineJoin = LINE_JOIN_STYLES[style];\n            }\n          }, {\n            key: \"setMiterLimit\",\n            value: function setMiterLimit(limit) {\n              this.current.miterLimit = limit;\n            }\n          }, {\n            key: \"setStrokeAlpha\",\n            value: function setStrokeAlpha(strokeAlpha) {\n              this.current.strokeAlpha = strokeAlpha;\n            }\n          }, {\n            key: \"setStrokeRGBColor\",\n            value: function setStrokeRGBColor(r, g, b) {\n              this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n            }\n          }, {\n            key: \"setFillAlpha\",\n            value: function setFillAlpha(fillAlpha) {\n              this.current.fillAlpha = fillAlpha;\n            }\n          }, {\n            key: \"setFillRGBColor\",\n            value: function setFillRGBColor(r, g, b) {\n              this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n              this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              this.current.xcoords = [];\n            }\n          }, {\n            key: \"setStrokeColorN\",\n            value: function setStrokeColorN(args) {\n              this.current.strokeColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"setFillColorN\",\n            value: function setFillColorN(args) {\n              this.current.fillColor = this._makeColorN_Pattern(args);\n            }\n          }, {\n            key: \"shadingFill\",\n            value: function shadingFill(args) {\n              var width = this.viewport.width;\n              var height = this.viewport.height;\n              var inv = _util.Util.inverseTransform(this.transformMatrix);\n              var bl = _util.Util.applyTransform([0, 0], inv);\n              var br = _util.Util.applyTransform([0, height], inv);\n              var ul = _util.Util.applyTransform([width, 0], inv);\n              var ur = _util.Util.applyTransform([width, height], inv);\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", x0);\n              rect.setAttributeNS(null, \"y\", y0);\n              rect.setAttributeNS(null, \"width\", x1 - x0);\n              rect.setAttributeNS(null, \"height\", y1 - y0);\n              rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n              this._ensureTransformGroup().appendChild(rect);\n            }\n          }, {\n            key: \"_makeColorN_Pattern\",\n            value: function _makeColorN_Pattern(args) {\n              if (args[0] === \"TilingPattern\") {\n                return this._makeTilingPattern(args);\n              }\n              return this._makeShadingPattern(args);\n            }\n          }, {\n            key: \"_makeTilingPattern\",\n            value: function _makeTilingPattern(args) {\n              var color = args[1];\n              var operatorList = args[2];\n              var matrix = args[3] || _util.IDENTITY_MATRIX;\n              var _args$ = _slicedToArray(args[4], 4),\n                x0 = _args$[0],\n                y0 = _args$[1],\n                x1 = _args$[2],\n                y1 = _args$[3];\n              var xstep = args[5];\n              var ystep = args[6];\n              var paintType = args[7];\n              var tilingId = \"shading\".concat(shadingCount++);\n              var _util$Util$applyTrans = _util.Util.applyTransform([x0, y0], matrix),\n                _util$Util$applyTrans2 = _slicedToArray(_util$Util$applyTrans, 2),\n                tx0 = _util$Util$applyTrans2[0],\n                ty0 = _util$Util$applyTrans2[1];\n              var _util$Util$applyTrans3 = _util.Util.applyTransform([x1, y1], matrix),\n                _util$Util$applyTrans4 = _slicedToArray(_util$Util$applyTrans3, 2),\n                tx1 = _util$Util$applyTrans4[0],\n                ty1 = _util$Util$applyTrans4[1];\n              var _util$Util$singularVa = _util.Util.singularValueDecompose2dScale(matrix),\n                _util$Util$singularVa2 = _slicedToArray(_util$Util$singularVa, 2),\n                xscale = _util$Util$singularVa2[0],\n                yscale = _util$Util$singularVa2[1];\n              var txstep = xstep * xscale;\n              var tystep = ystep * yscale;\n              var tiling = this.svgFactory.createElement(\"svg:pattern\");\n              tiling.setAttributeNS(null, \"id\", tilingId);\n              tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n              tiling.setAttributeNS(null, \"width\", txstep);\n              tiling.setAttributeNS(null, \"height\", tystep);\n              tiling.setAttributeNS(null, \"x\", \"\".concat(tx0));\n              tiling.setAttributeNS(null, \"y\", \"\".concat(ty0));\n              var svg = this.svg;\n              var transformMatrix = this.transformMatrix;\n              var fillColor = this.current.fillColor;\n              var strokeColor = this.current.strokeColor;\n              var bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n              this.svg = bbox;\n              this.transformMatrix = matrix;\n              if (paintType === 2) {\n                var _util$Util;\n                var cssColor = (_util$Util = _util.Util).makeCssRgb.apply(_util$Util, _toConsumableArray(color));\n                this.current.fillColor = cssColor;\n                this.current.strokeColor = cssColor;\n              }\n              this.executeOpTree(this.convertOpList(operatorList));\n              this.svg = svg;\n              this.transformMatrix = transformMatrix;\n              this.current.fillColor = fillColor;\n              this.current.strokeColor = strokeColor;\n              tiling.appendChild(bbox.childNodes[0]);\n              this.defs.appendChild(tiling);\n              return \"url(#\".concat(tilingId, \")\");\n            }\n          }, {\n            key: \"_makeShadingPattern\",\n            value: function _makeShadingPattern(args) {\n              switch (args[0]) {\n                case \"RadialAxial\":\n                  var shadingId = \"shading\".concat(shadingCount++);\n                  var colorStops = args[3];\n                  var gradient;\n                  switch (args[1]) {\n                    case \"axial\":\n                      var point0 = args[4];\n                      var point1 = args[5];\n                      gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"x1\", point0[0]);\n                      gradient.setAttributeNS(null, \"y1\", point0[1]);\n                      gradient.setAttributeNS(null, \"x2\", point1[0]);\n                      gradient.setAttributeNS(null, \"y2\", point1[1]);\n                      break;\n                    case \"radial\":\n                      var focalPoint = args[4];\n                      var circlePoint = args[5];\n                      var focalRadius = args[6];\n                      var circleRadius = args[7];\n                      gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                      gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                      gradient.setAttributeNS(null, \"r\", circleRadius);\n                      gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                      gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                      gradient.setAttributeNS(null, \"fr\", focalRadius);\n                      break;\n                    default:\n                      throw new Error(\"Unknown RadialAxial type: \".concat(args[1]));\n                  }\n                  var _iterator20 = _createForOfIteratorHelper(colorStops),\n                    _step20;\n                  try {\n                    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                      var colorStop = _step20.value;\n                      var stop = this.svgFactory.createElement(\"svg:stop\");\n                      stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                      stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                      gradient.appendChild(stop);\n                    }\n                  } catch (err) {\n                    _iterator20.e(err);\n                  } finally {\n                    _iterator20.f();\n                  }\n                  this.defs.appendChild(gradient);\n                  return \"url(#\".concat(shadingId, \")\");\n                case \"Mesh\":\n                  (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                  return null;\n                case \"Dummy\":\n                  return \"hotpink\";\n                default:\n                  throw new Error(\"Unknown IR type: \".concat(args[0]));\n              }\n            }\n          }, {\n            key: \"setDash\",\n            value: function setDash(dashArray, dashPhase) {\n              this.current.dashArray = dashArray;\n              this.current.dashPhase = dashPhase;\n            }\n          }, {\n            key: \"constructPath\",\n            value: function constructPath(ops, args) {\n              var current = this.current;\n              var x = current.x,\n                y = current.y;\n              var d = [];\n              var j = 0;\n              var _iterator21 = _createForOfIteratorHelper(ops),\n                _step21;\n              try {\n                for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                  var op = _step21.value;\n                  switch (op | 0) {\n                    case _util.OPS.rectangle:\n                      x = args[j++];\n                      y = args[j++];\n                      var width = args[j++];\n                      var height = args[j++];\n                      var xw = x + width;\n                      var yh = y + height;\n                      d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                      break;\n                    case _util.OPS.moveTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"M\", pf(x), pf(y));\n                      break;\n                    case _util.OPS.lineTo:\n                      x = args[j++];\n                      y = args[j++];\n                      d.push(\"L\", pf(x), pf(y));\n                      break;\n                    case _util.OPS.curveTo:\n                      x = args[j + 4];\n                      y = args[j + 5];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                      j += 6;\n                      break;\n                    case _util.OPS.curveTo2:\n                      d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      j += 4;\n                      break;\n                    case _util.OPS.curveTo3:\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                      j += 4;\n                      break;\n                    case _util.OPS.closePath:\n                      d.push(\"Z\");\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator21.e(err);\n              } finally {\n                _iterator21.f();\n              }\n              d = d.join(\" \");\n              if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n                d = current.path.getAttributeNS(null, \"d\") + d;\n              } else {\n                current.path = this.svgFactory.createElement(\"svg:path\");\n                this._ensureTransformGroup().appendChild(current.path);\n              }\n              current.path.setAttributeNS(null, \"d\", d);\n              current.path.setAttributeNS(null, \"fill\", \"none\");\n              current.element = current.path;\n              current.setCurrentPoint(x, y);\n            }\n          }, {\n            key: \"endPath\",\n            value: function endPath() {\n              var current = this.current;\n              current.path = null;\n              if (!this.pendingClip) {\n                return;\n              }\n              if (!current.element) {\n                this.pendingClip = null;\n                return;\n              }\n              var clipId = \"clippath\".concat(clipCount++);\n              var clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n              clipPath.setAttributeNS(null, \"id\", clipId);\n              clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              var clipElement = current.element.cloneNode(true);\n              if (this.pendingClip === \"evenodd\") {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n              } else {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n              }\n              this.pendingClip = null;\n              clipPath.appendChild(clipElement);\n              this.defs.appendChild(clipPath);\n              if (current.activeClipUrl) {\n                current.clipGroup = null;\n                this.extraStack.forEach(function (prev) {\n                  prev.clipGroup = null;\n                });\n                clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n              }\n              current.activeClipUrl = \"url(#\".concat(clipId, \")\");\n              this.tgrp = null;\n            }\n          }, {\n            key: \"clip\",\n            value: function clip(type) {\n              this.pendingClip = type;\n            }\n          }, {\n            key: \"closePath\",\n            value: function closePath() {\n              var current = this.current;\n              if (current.path) {\n                var d = \"\".concat(current.path.getAttributeNS(null, \"d\"), \"Z\");\n                current.path.setAttributeNS(null, \"d\", d);\n              }\n            }\n          }, {\n            key: \"setLeading\",\n            value: function setLeading(leading) {\n              this.current.leading = -leading;\n            }\n          }, {\n            key: \"setTextRise\",\n            value: function setTextRise(textRise) {\n              this.current.textRise = textRise;\n            }\n          }, {\n            key: \"setTextRenderingMode\",\n            value: function setTextRenderingMode(textRenderingMode) {\n              this.current.textRenderingMode = textRenderingMode;\n            }\n          }, {\n            key: \"setHScale\",\n            value: function setHScale(scale) {\n              this.current.textHScale = scale / 100;\n            }\n          }, {\n            key: \"setRenderingIntent\",\n            value: function setRenderingIntent(intent) {}\n          }, {\n            key: \"setFlatness\",\n            value: function setFlatness(flatness) {}\n          }, {\n            key: \"setGState\",\n            value: function setGState(states) {\n              var _iterator22 = _createForOfIteratorHelper(states),\n                _step22;\n              try {\n                for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                  var _step22$value = _slicedToArray(_step22.value, 2),\n                    key = _step22$value[0],\n                    value = _step22$value[1];\n                  switch (key) {\n                    case \"LW\":\n                      this.setLineWidth(value);\n                      break;\n                    case \"LC\":\n                      this.setLineCap(value);\n                      break;\n                    case \"LJ\":\n                      this.setLineJoin(value);\n                      break;\n                    case \"ML\":\n                      this.setMiterLimit(value);\n                      break;\n                    case \"D\":\n                      this.setDash(value[0], value[1]);\n                      break;\n                    case \"RI\":\n                      this.setRenderingIntent(value);\n                      break;\n                    case \"FL\":\n                      this.setFlatness(value);\n                      break;\n                    case \"Font\":\n                      this.setFont(value);\n                      break;\n                    case \"CA\":\n                      this.setStrokeAlpha(value);\n                      break;\n                    case \"ca\":\n                      this.setFillAlpha(value);\n                      break;\n                    default:\n                      (0, _util.warn)(\"Unimplemented graphic state operator \".concat(key));\n                      break;\n                  }\n                }\n              } catch (err) {\n                _iterator22.e(err);\n              } finally {\n                _iterator22.f();\n              }\n            }\n          }, {\n            key: \"fill\",\n            value: function fill() {\n              var current = this.current;\n              if (current.element) {\n                current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"stroke\",\n            value: function stroke() {\n              var current = this.current;\n              if (current.element) {\n                this._setStrokeAttributes(current.element);\n                current.element.setAttributeNS(null, \"fill\", \"none\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"_setStrokeAttributes\",\n            value: function _setStrokeAttributes(element) {\n              var lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              var current = this.current;\n              var dashArray = current.dashArray;\n              if (lineWidthScale !== 1 && dashArray.length > 0) {\n                dashArray = dashArray.map(function (value) {\n                  return lineWidthScale * value;\n                });\n              }\n              element.setAttributeNS(null, \"stroke\", current.strokeColor);\n              element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n              element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n              element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n              element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n              element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n              element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n              element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n            }\n          }, {\n            key: \"eoFill\",\n            value: function eoFill() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n              this.fill();\n            }\n          }, {\n            key: \"fillStroke\",\n            value: function fillStroke() {\n              this.stroke();\n              this.fill();\n            }\n          }, {\n            key: \"eoFillStroke\",\n            value: function eoFillStroke() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeStroke\",\n            value: function closeStroke() {\n              this.closePath();\n              this.stroke();\n            }\n          }, {\n            key: \"closeFillStroke\",\n            value: function closeFillStroke() {\n              this.closePath();\n              this.fillStroke();\n            }\n          }, {\n            key: \"closeEOFillStroke\",\n            value: function closeEOFillStroke() {\n              this.closePath();\n              this.eoFillStroke();\n            }\n          }, {\n            key: \"paintSolidColorImageMask\",\n            value: function paintSolidColorImageMask() {\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", \"1px\");\n              rect.setAttributeNS(null, \"height\", \"1px\");\n              rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n              this._ensureTransformGroup().appendChild(rect);\n            }\n          }, {\n            key: \"paintJpegXObject\",\n            value: function paintJpegXObject(objId, w, h) {\n              var imgObj = this.objs.get(objId);\n              var imgEl = this.svgFactory.createElement(\"svg:image\");\n              imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgObj.src);\n              imgEl.setAttributeNS(null, \"width\", pf(w));\n              imgEl.setAttributeNS(null, \"height\", pf(h));\n              imgEl.setAttributeNS(null, \"x\", \"0\");\n              imgEl.setAttributeNS(null, \"y\", pf(-h));\n              imgEl.setAttributeNS(null, \"transform\", \"scale(\".concat(pf(1 / w), \" \").concat(pf(-1 / h), \")\"));\n              this._ensureTransformGroup().appendChild(imgEl);\n            }\n          }, {\n            key: \"paintImageXObject\",\n            value: function paintImageXObject(objId) {\n              var imgData = this.objs.get(objId);\n              if (!imgData) {\n                (0, _util.warn)(\"Dependent image with object ID \".concat(objId, \" is not ready yet\"));\n                return;\n              }\n              this.paintInlineImageXObject(imgData);\n            }\n          }, {\n            key: \"paintInlineImageXObject\",\n            value: function paintInlineImageXObject(imgData, mask) {\n              var width = imgData.width;\n              var height = imgData.height;\n              var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n              var cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", \"0\");\n              cliprect.setAttributeNS(null, \"y\", \"0\");\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              var imgEl = this.svgFactory.createElement(\"svg:image\");\n              imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n              imgEl.setAttributeNS(null, \"x\", \"0\");\n              imgEl.setAttributeNS(null, \"y\", pf(-height));\n              imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n              imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n              imgEl.setAttributeNS(null, \"transform\", \"scale(\".concat(pf(1 / width), \" \").concat(pf(-1 / height), \")\"));\n              if (mask) {\n                mask.appendChild(imgEl);\n              } else {\n                this._ensureTransformGroup().appendChild(imgEl);\n              }\n            }\n          }, {\n            key: \"paintImageMaskXObject\",\n            value: function paintImageMaskXObject(imgData) {\n              var current = this.current;\n              var width = imgData.width;\n              var height = imgData.height;\n              var fillColor = current.fillColor;\n              current.maskId = \"mask\".concat(maskCount++);\n              var mask = this.svgFactory.createElement(\"svg:mask\");\n              mask.setAttributeNS(null, \"id\", current.maskId);\n              var rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", pf(width));\n              rect.setAttributeNS(null, \"height\", pf(height));\n              rect.setAttributeNS(null, \"fill\", fillColor);\n              rect.setAttributeNS(null, \"mask\", \"url(#\".concat(current.maskId, \")\"));\n              this.defs.appendChild(mask);\n              this._ensureTransformGroup().appendChild(rect);\n              this.paintInlineImageXObject(imgData, mask);\n            }\n          }, {\n            key: \"paintFormXObjectBegin\",\n            value: function paintFormXObjectBegin(matrix, bbox) {\n              if (Array.isArray(matrix) && matrix.length === 6) {\n                this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n              }\n              if (bbox) {\n                var width = bbox[2] - bbox[0];\n                var height = bbox[3] - bbox[1];\n                var cliprect = this.svgFactory.createElement(\"svg:rect\");\n                cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                cliprect.setAttributeNS(null, \"width\", pf(width));\n                cliprect.setAttributeNS(null, \"height\", pf(height));\n                this.current.element = cliprect;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n          }, {\n            key: \"paintFormXObjectEnd\",\n            value: function paintFormXObjectEnd() {}\n          }, {\n            key: \"_initialize\",\n            value: function _initialize(viewport) {\n              var svg = this.svgFactory.create(viewport.width, viewport.height);\n              var definitions = this.svgFactory.createElement(\"svg:defs\");\n              svg.appendChild(definitions);\n              this.defs = definitions;\n              var rootGroup = this.svgFactory.createElement(\"svg:g\");\n              rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n              svg.appendChild(rootGroup);\n              this.svg = rootGroup;\n              return svg;\n            }\n          }, {\n            key: \"_ensureClipGroup\",\n            value: function _ensureClipGroup() {\n              if (!this.current.clipGroup) {\n                var clipGroup = this.svgFactory.createElement(\"svg:g\");\n                clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                this.svg.appendChild(clipGroup);\n                this.current.clipGroup = clipGroup;\n              }\n              return this.current.clipGroup;\n            }\n          }, {\n            key: \"_ensureTransformGroup\",\n            value: function _ensureTransformGroup() {\n              if (!this.tgrp) {\n                this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n                if (this.current.activeClipUrl) {\n                  this._ensureClipGroup().appendChild(this.tgrp);\n                } else {\n                  this.svg.appendChild(this.tgrp);\n                }\n              }\n              return this.tgrp;\n            }\n          }]);\n          return SVGGraphics;\n        }();\n      }\n\n      /***/\n    }, /* 19 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNodeStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(20);\n      var fs = require(\"fs\");\n      var http = require(\"http\");\n      var https = require(\"https\");\n      var url = require(\"url\");\n      var fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n      function parseUrl(sourceUrl) {\n        var parsedUrl = url.parse(sourceUrl);\n        if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n          return parsedUrl;\n        }\n        if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n          return url.parse(\"file:///\".concat(sourceUrl));\n        }\n        if (!parsedUrl.host) {\n          parsedUrl.protocol = \"file:\";\n        }\n        return parsedUrl;\n      }\n      var PDFNodeStream = /*#__PURE__*/function () {\n        function PDFNodeStream(source) {\n          _classCallCheck(this, PDFNodeStream);\n          this.source = source;\n          this.url = parseUrl(source.url);\n          this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n          this.isFsUrl = this.url.protocol === \"file:\";\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFNodeStream, [{\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader);\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n            this._rangeRequestReaders.push(rangeReader);\n            return rangeReader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeRequestReaders.slice(0);\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n        return PDFNodeStream;\n      }();\n      exports.PDFNodeStream = PDFNodeStream;\n      var BaseFullReader = /*#__PURE__*/function () {\n        function BaseFullReader(stream) {\n          _classCallCheck(this, BaseFullReader);\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          var source = stream.source;\n          this._contentLength = source.length;\n          this._loaded = 0;\n          this._filename = null;\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._headersCapability = (0, _util.createPromiseCapability)();\n        }\n        _createClass(BaseFullReader, [{\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n              var chunk, buffer;\n              return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return this._readCapability.promise;\n                  case 2:\n                    if (!this._done) {\n                      _context9.next = 4;\n                      break;\n                    }\n                    return _context9.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 4:\n                    if (!this._storedError) {\n                      _context9.next = 6;\n                      break;\n                    }\n                    throw this._storedError;\n                  case 6:\n                    chunk = this._readableStream.read();\n                    if (!(chunk === null)) {\n                      _context9.next = 10;\n                      break;\n                    }\n                    this._readCapability = (0, _util.createPromiseCapability)();\n                    return _context9.abrupt(\"return\", this.read());\n                  case 10:\n                    this._loaded += chunk.length;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded,\n                        total: this._contentLength\n                      });\n                    }\n                    buffer = new Uint8Array(chunk).buffer;\n                    return _context9.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 14:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9, this);\n            }));\n            function read() {\n              return _read3.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this42 = this;\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this42._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this42._done = true;\n              _this42._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this42._error(reason);\n            });\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }]);\n        return BaseFullReader;\n      }();\n      var BaseRangeReader = /*#__PURE__*/function () {\n        function BaseRangeReader(stream) {\n          _classCallCheck(this, BaseRangeReader);\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          this._loaded = 0;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          var source = stream.source;\n          this._isStreamingSupported = !source.disableStream;\n        }\n        _createClass(BaseRangeReader, [{\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n              var chunk, buffer;\n              return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return this._readCapability.promise;\n                  case 2:\n                    if (!this._done) {\n                      _context10.next = 4;\n                      break;\n                    }\n                    return _context10.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 4:\n                    if (!this._storedError) {\n                      _context10.next = 6;\n                      break;\n                    }\n                    throw this._storedError;\n                  case 6:\n                    chunk = this._readableStream.read();\n                    if (!(chunk === null)) {\n                      _context10.next = 10;\n                      break;\n                    }\n                    this._readCapability = (0, _util.createPromiseCapability)();\n                    return _context10.abrupt(\"return\", this.read());\n                  case 10:\n                    this._loaded += chunk.length;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded\n                      });\n                    }\n                    buffer = new Uint8Array(chunk).buffer;\n                    return _context10.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 14:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10, this);\n            }));\n            function read() {\n              return _read4.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n        }, {\n          key: \"_error\",\n          value: function _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n        }, {\n          key: \"_setReadableStream\",\n          value: function _setReadableStream(readableStream) {\n            var _this43 = this;\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", function () {\n              _this43._readCapability.resolve();\n            });\n            readableStream.on(\"end\", function () {\n              readableStream.destroy();\n              _this43._done = true;\n              _this43._readCapability.resolve();\n            });\n            readableStream.on(\"error\", function (reason) {\n              _this43._error(reason);\n            });\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }]);\n        return BaseRangeReader;\n      }();\n      function createRequestOptions(url, headers) {\n        return {\n          protocol: url.protocol,\n          auth: url.auth,\n          host: url.hostname,\n          port: url.port,\n          path: url.path,\n          method: \"GET\",\n          headers: headers\n        };\n      }\n      var PDFNodeStreamFullReader = /*#__PURE__*/function (_BaseFullReader) {\n        _inherits(PDFNodeStreamFullReader, _BaseFullReader);\n        var _super34 = _createSuper(PDFNodeStreamFullReader);\n        function PDFNodeStreamFullReader(stream) {\n          var _this44;\n          _classCallCheck(this, PDFNodeStreamFullReader);\n          _this44 = _super34.call(this, stream);\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this44._url, \"\\\".\"));\n              _this44._storedError = error;\n              _this44._headersCapability.reject(error);\n              return;\n            }\n            _this44._headersCapability.resolve();\n            _this44._setReadableStream(response);\n            var getResponseHeader = function getResponseHeader(name) {\n              return _this44._readableStream.headers[name.toLowerCase()];\n            };\n            var _ref31 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: _this44._rangeChunkSize,\n                disableRange: _this44._disableRange\n              }),\n              allowRangeRequests = _ref31.allowRangeRequests,\n              suggestedLength = _ref31.suggestedLength;\n            _this44._isRangeSupported = allowRangeRequests;\n            _this44._contentLength = suggestedLength || _this44._contentLength;\n            _this44._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          };\n          _this44._request = null;\n          if (_this44._url.protocol === \"http:\") {\n            _this44._request = http.request(createRequestOptions(_this44._url, stream.httpHeaders), handleResponse);\n          } else {\n            _this44._request = https.request(createRequestOptions(_this44._url, stream.httpHeaders), handleResponse);\n          }\n          _this44._request.on(\"error\", function (reason) {\n            _this44._storedError = reason;\n            _this44._headersCapability.reject(reason);\n          });\n          _this44._request.end();\n          return _this44;\n        }\n        return _createClass(PDFNodeStreamFullReader);\n      }(BaseFullReader);\n      var PDFNodeStreamRangeReader = /*#__PURE__*/function (_BaseRangeReader) {\n        _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);\n        var _super35 = _createSuper(PDFNodeStreamRangeReader);\n        function PDFNodeStreamRangeReader(stream, start, end) {\n          var _this45;\n          _classCallCheck(this, PDFNodeStreamRangeReader);\n          _this45 = _super35.call(this, stream);\n          _this45._httpHeaders = {};\n          for (var property in stream.httpHeaders) {\n            var value = stream.httpHeaders[property];\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n            _this45._httpHeaders[property] = value;\n          }\n          _this45._httpHeaders[\"Range\"] = \"bytes=\".concat(start, \"-\").concat(end - 1);\n          var handleResponse = function handleResponse(response) {\n            if (response.statusCode === 404) {\n              var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this45._url, \"\\\".\"));\n              _this45._storedError = error;\n              return;\n            }\n            _this45._setReadableStream(response);\n          };\n          _this45._request = null;\n          if (_this45._url.protocol === \"http:\") {\n            _this45._request = http.request(createRequestOptions(_this45._url, _this45._httpHeaders), handleResponse);\n          } else {\n            _this45._request = https.request(createRequestOptions(_this45._url, _this45._httpHeaders), handleResponse);\n          }\n          _this45._request.on(\"error\", function (reason) {\n            _this45._storedError = reason;\n          });\n          _this45._request.end();\n          return _this45;\n        }\n        return _createClass(PDFNodeStreamRangeReader);\n      }(BaseRangeReader);\n      var PDFNodeStreamFsFullReader = /*#__PURE__*/function (_BaseFullReader2) {\n        _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);\n        var _super36 = _createSuper(PDFNodeStreamFsFullReader);\n        function PDFNodeStreamFsFullReader(stream) {\n          var _this46;\n          _classCallCheck(this, PDFNodeStreamFsFullReader);\n          _this46 = _super36.call(this, stream);\n          var path = decodeURIComponent(_this46._url.path);\n          if (fileUriRegex.test(_this46._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          fs.lstat(path, function (error, stat) {\n            if (error) {\n              if (error.code === \"ENOENT\") {\n                error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(path, \"\\\".\"));\n              }\n              _this46._storedError = error;\n              _this46._headersCapability.reject(error);\n              return;\n            }\n            _this46._contentLength = stat.size;\n            _this46._setReadableStream(fs.createReadStream(path));\n            _this46._headersCapability.resolve();\n          });\n          return _this46;\n        }\n        return _createClass(PDFNodeStreamFsFullReader);\n      }(BaseFullReader);\n      var PDFNodeStreamFsRangeReader = /*#__PURE__*/function (_BaseRangeReader2) {\n        _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);\n        var _super37 = _createSuper(PDFNodeStreamFsRangeReader);\n        function PDFNodeStreamFsRangeReader(stream, start, end) {\n          var _this47;\n          _classCallCheck(this, PDFNodeStreamFsRangeReader);\n          _this47 = _super37.call(this, stream);\n          var path = decodeURIComponent(_this47._url.path);\n          if (fileUriRegex.test(_this47._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          _this47._setReadableStream(fs.createReadStream(path, {\n            start: start,\n            end: end - 1\n          }));\n          return _this47;\n        }\n        return _createClass(PDFNodeStreamFsRangeReader);\n      }(BaseRangeReader);\n      /***/\n    }, /* 20 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createResponseStatusError = createResponseStatusError;\n      exports.extractFilenameFromHeader = extractFilenameFromHeader;\n      exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n      exports.validateResponseStatus = validateResponseStatus;\n      var _util = __w_pdfjs_require__(1);\n      var _content_disposition = __w_pdfjs_require__(21);\n      function validateRangeRequestCapabilities(_ref32) {\n        var getResponseHeader = _ref32.getResponseHeader,\n          isHttp = _ref32.isHttp,\n          rangeChunkSize = _ref32.rangeChunkSize,\n          disableRange = _ref32.disableRange;\n        (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n        var returnValues = {\n          allowRangeRequests: false,\n          suggestedLength: undefined\n        };\n        var length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n        if (!Number.isInteger(length)) {\n          return returnValues;\n        }\n        returnValues.suggestedLength = length;\n        if (length <= 2 * rangeChunkSize) {\n          return returnValues;\n        }\n        if (disableRange || !isHttp) {\n          return returnValues;\n        }\n        if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n          return returnValues;\n        }\n        var contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n        if (contentEncoding !== \"identity\") {\n          return returnValues;\n        }\n        returnValues.allowRangeRequests = true;\n        return returnValues;\n      }\n      function extractFilenameFromHeader(getResponseHeader) {\n        var contentDisposition = getResponseHeader(\"Content-Disposition\");\n        if (contentDisposition) {\n          var filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n          if (filename.includes(\"%\")) {\n            try {\n              filename = decodeURIComponent(filename);\n            } catch (ex) {}\n          }\n          if (/\\.pdf$/i.test(filename)) {\n            return filename;\n          }\n        }\n        return null;\n      }\n      function createResponseStatusError(status, url) {\n        if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n          return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n        }\n        return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n      }\n      function validateResponseStatus(status) {\n        return status === 200 || status === 206;\n      }\n\n      /***/\n    }, /* 21 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n      function getFilenameFromContentDispositionHeader(contentDisposition) {\n        var needsEncodingFixup = true;\n        var tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          var filename = rfc2616unquote(tmp);\n          filename = unescape(filename);\n          filename = rfc5987decode(filename);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n        tmp = rfc2231getparam(contentDisposition);\n        if (tmp) {\n          var _filename = rfc2047decode(tmp);\n          return fixupEncoding(_filename);\n        }\n        tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          var _filename2 = rfc2616unquote(tmp);\n          _filename2 = rfc2047decode(_filename2);\n          return fixupEncoding(_filename2);\n        }\n        function toParamRegExp(attributePattern, flags) {\n          return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n        }\n        function textdecode(encoding, value) {\n          if (encoding) {\n            if (!/^[\\x00-\\xFF]+$/.test(value)) {\n              return value;\n            }\n            try {\n              var decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              var bytes = Array.from(value, function (ch) {\n                return ch.charCodeAt(0) & 0xff;\n              });\n              value = decoder.decode(new Uint8Array(bytes));\n              needsEncodingFixup = false;\n            } catch (e) {\n              if (/^utf-?8$/i.test(encoding)) {\n                try {\n                  value = decodeURIComponent(escape(value));\n                  needsEncodingFixup = false;\n                } catch (err) {}\n              }\n            }\n          }\n          return value;\n        }\n        function fixupEncoding(value) {\n          if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n            value = textdecode(\"utf-8\", value);\n            if (needsEncodingFixup) {\n              value = textdecode(\"iso-8859-1\", value);\n            }\n          }\n          return value;\n        }\n        function rfc2231getparam(contentDisposition) {\n          var matches = [];\n          var match;\n          var iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n          while ((match = iter.exec(contentDisposition)) !== null) {\n            var _match = match,\n              _match2 = _slicedToArray(_match, 4),\n              n = _match2[1],\n              quot = _match2[2],\n              part = _match2[3];\n            n = parseInt(n, 10);\n            if (n in matches) {\n              if (n === 0) {\n                break;\n              }\n              continue;\n            }\n            matches[n] = [quot, part];\n          }\n          var parts = [];\n          for (var _n = 0; _n < matches.length; ++_n) {\n            if (!(_n in matches)) {\n              break;\n            }\n            var _matches$_n = _slicedToArray(matches[_n], 2),\n              _quot = _matches$_n[0],\n              _part = _matches$_n[1];\n            _part = rfc2616unquote(_part);\n            if (_quot) {\n              _part = unescape(_part);\n              if (_n === 0) {\n                _part = rfc5987decode(_part);\n              }\n            }\n            parts.push(_part);\n          }\n          return parts.join(\"\");\n        }\n        function rfc2616unquote(value) {\n          if (value.startsWith('\"')) {\n            var parts = value.slice(1).split('\\\\\"');\n            for (var i = 0; i < parts.length; ++i) {\n              var quotindex = parts[i].indexOf('\"');\n              if (quotindex !== -1) {\n                parts[i] = parts[i].slice(0, quotindex);\n                parts.length = i + 1;\n              }\n              parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n            }\n            value = parts.join('\"');\n          }\n          return value;\n        }\n        function rfc5987decode(extvalue) {\n          var encodingend = extvalue.indexOf(\"'\");\n          if (encodingend === -1) {\n            return extvalue;\n          }\n          var encoding = extvalue.slice(0, encodingend);\n          var langvalue = extvalue.slice(encodingend + 1);\n          var value = langvalue.replace(/^[^']*'/, \"\");\n          return textdecode(encoding, value);\n        }\n        function rfc2047decode(value) {\n          if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n            return value;\n          }\n          return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (_, charset, encoding, text) {\n            if (encoding === \"q\" || encoding === \"Q\") {\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/=([0-9a-fA-F]{2})/g, function (_, hex) {\n                return String.fromCharCode(parseInt(hex, 16));\n              });\n              return textdecode(charset, text);\n            }\n            try {\n              text = atob(text);\n            } catch (e) {}\n            return textdecode(charset, text);\n          });\n        }\n        return \"\";\n      }\n\n      /***/\n    }, /* 22 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNetworkStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(20);\n      ;\n      var OK_RESPONSE = 200;\n      var PARTIAL_CONTENT_RESPONSE = 206;\n      function getArrayBuffer(xhr) {\n        var data = xhr.response;\n        if (typeof data !== \"string\") {\n          return data;\n        }\n        var array = (0, _util.stringToBytes)(data);\n        return array.buffer;\n      }\n      var NetworkManager = /*#__PURE__*/function () {\n        function NetworkManager(url, args) {\n          _classCallCheck(this, NetworkManager);\n          this.url = url;\n          args = args || {};\n          this.isHttp = /^https?:/i.test(url);\n          this.httpHeaders = this.isHttp && args.httpHeaders || {};\n          this.withCredentials = args.withCredentials || false;\n          this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n            return new XMLHttpRequest();\n          };\n          this.currXhrId = 0;\n          this.pendingRequests = Object.create(null);\n        }\n        _createClass(NetworkManager, [{\n          key: \"requestRange\",\n          value: function requestRange(begin, end, listeners) {\n            var args = {\n              begin: begin,\n              end: end\n            };\n            for (var prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n            return this.request(args);\n          }\n        }, {\n          key: \"requestFull\",\n          value: function requestFull(listeners) {\n            return this.request(listeners);\n          }\n        }, {\n          key: \"request\",\n          value: function request(args) {\n            var xhr = this.getXhr();\n            var xhrId = this.currXhrId++;\n            var pendingRequest = this.pendingRequests[xhrId] = {\n              xhr: xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n            for (var property in this.httpHeaders) {\n              var value = this.httpHeaders[property];\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n              xhr.setRequestHeader(property, value);\n            }\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", \"bytes=\".concat(args.begin, \"-\").concat(args.end - 1));\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n            xhr.responseType = \"arraybuffer\";\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n        }, {\n          key: \"onProgress\",\n          value: function onProgress(xhrId, evt) {\n            var pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            if (pendingRequest.onProgress) {\n              pendingRequest.onProgress(evt);\n            }\n          }\n        }, {\n          key: \"onStateChange\",\n          value: function onStateChange(xhrId, evt) {\n            var pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            var xhr = pendingRequest.xhr;\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n            if (xhr.readyState !== 4) {\n              return;\n            }\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n            delete this.pendingRequests[xhrId];\n            if (xhr.status === 0 && this.isHttp) {\n              if (pendingRequest.onError) {\n                pendingRequest.onError(xhr.status);\n              }\n              return;\n            }\n            var xhrStatus = xhr.status || OK_RESPONSE;\n            var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              if (pendingRequest.onError) {\n                pendingRequest.onError(xhr.status);\n              }\n              return;\n            }\n            var chunk = getArrayBuffer(xhr);\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              var rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk: chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk: chunk\n              });\n            } else if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n          }\n        }, {\n          key: \"hasPendingRequests\",\n          value: function hasPendingRequests() {\n            for (var xhrId in this.pendingRequests) {\n              return true;\n            }\n            return false;\n          }\n        }, {\n          key: \"getRequestXhr\",\n          value: function getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n        }, {\n          key: \"isPendingRequest\",\n          value: function isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n        }, {\n          key: \"abortAllRequests\",\n          value: function abortAllRequests() {\n            for (var xhrId in this.pendingRequests) {\n              this.abortRequest(xhrId | 0);\n            }\n          }\n        }, {\n          key: \"abortRequest\",\n          value: function abortRequest(xhrId) {\n            var xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n        }]);\n        return NetworkManager;\n      }();\n      var PDFNetworkStream = /*#__PURE__*/function () {\n        function PDFNetworkStream(source) {\n          _classCallCheck(this, PDFNetworkStream);\n          this._source = source;\n          this._manager = new NetworkManager(source.url, {\n            httpHeaders: source.httpHeaders,\n            withCredentials: source.withCredentials\n          });\n          this._rangeChunkSize = source.rangeChunkSize;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFNetworkStream, [{\n          key: \"_onRangeRequestReaderClosed\",\n          value: function _onRangeRequestReaderClosed(reader) {\n            var i = this._rangeRequestReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader);\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeRequestReaders.slice(0);\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n        return PDFNetworkStream;\n      }();\n      exports.PDFNetworkStream = PDFNetworkStream;\n      var PDFNetworkStreamFullRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamFullRequestReader(manager, source) {\n          _classCallCheck(this, PDFNetworkStreamFullRequestReader);\n          this._manager = manager;\n          var args = {\n            onHeadersReceived: this._onHeadersReceived.bind(this),\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = source.url;\n          this._fullRequestId = manager.requestFull(args);\n          this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._contentLength = source.length;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = false;\n          this._isRangeSupported = false;\n          this._cachedChunks = [];\n          this._requests = [];\n          this._done = false;\n          this._storedError = undefined;\n          this._filename = null;\n          this.onProgress = null;\n        }\n        _createClass(PDFNetworkStreamFullRequestReader, [{\n          key: \"_onHeadersReceived\",\n          value: function _onHeadersReceived() {\n            var fullRequestXhrId = this._fullRequestId;\n            var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n            var getResponseHeader = function getResponseHeader(name) {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n            var _ref33 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: this._manager.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              }),\n              allowRangeRequests = _ref33.allowRangeRequests,\n              suggestedLength = _ref33.suggestedLength;\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n            this._headersReceivedCapability.resolve();\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(args) {\n            if (args) {\n              if (this._requests.length > 0) {\n                var requestCapability = this._requests.shift();\n                requestCapability.resolve({\n                  value: args.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(args.chunk);\n              }\n            }\n            this._done = true;\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n          }\n        }, {\n          key: \"_onError\",\n          value: function _onError(status) {\n            var url = this._url;\n            var exception = (0, _network_utils.createResponseStatusError)(status, url);\n            this._storedError = exception;\n            this._headersReceivedCapability.reject(exception);\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.reject(exception);\n            });\n            this._requests = [];\n            this._cachedChunks = [];\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(data) {\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: data.loaded,\n                total: data.lengthComputable ? data.total : this._contentLength\n              });\n            }\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReceivedCapability.promise;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    if (!this._storedError) {\n                      _context11.next = 2;\n                      break;\n                    }\n                    throw this._storedError;\n                  case 2:\n                    if (!(this._cachedChunks.length > 0)) {\n                      _context11.next = 5;\n                      break;\n                    }\n                    chunk = this._cachedChunks.shift();\n                    return _context11.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 5:\n                    if (!this._done) {\n                      _context11.next = 7;\n                      break;\n                    }\n                    return _context11.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 7:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context11.abrupt(\"return\", requestCapability.promise);\n                  case 10:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11, this);\n            }));\n            function read() {\n              return _read5.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._headersReceivedCapability.reject(reason);\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n            this._fullRequestReader = null;\n          }\n        }]);\n        return PDFNetworkStreamFullRequestReader;\n      }();\n      var PDFNetworkStreamRangeRequestReader = /*#__PURE__*/function () {\n        function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n          _classCallCheck(this, PDFNetworkStreamRangeRequestReader);\n          this._manager = manager;\n          var args = {\n            onDone: this._onDone.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._requestId = manager.requestRange(begin, end, args);\n          this._requests = [];\n          this._queuedChunk = null;\n          this._done = false;\n          this.onProgress = null;\n          this.onClosed = null;\n        }\n        _createClass(PDFNetworkStreamRangeRequestReader, [{\n          key: \"_close\",\n          value: function _close() {\n            if (this.onClosed) {\n              this.onClosed(this);\n            }\n          }\n        }, {\n          key: \"_onDone\",\n          value: function _onDone(data) {\n            var chunk = data.chunk;\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            this._close();\n          }\n        }, {\n          key: \"_onProgress\",\n          value: function _onProgress(evt) {\n            if (!this.isStreamingSupported && this.onProgress) {\n              this.onProgress({\n                loaded: evt.loaded\n              });\n            }\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n              var chunk, requestCapability;\n              return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    if (!(this._queuedChunk !== null)) {\n                      _context12.next = 4;\n                      break;\n                    }\n                    chunk = this._queuedChunk;\n                    this._queuedChunk = null;\n                    return _context12.abrupt(\"return\", {\n                      value: chunk,\n                      done: false\n                    });\n                  case 4:\n                    if (!this._done) {\n                      _context12.next = 6;\n                      break;\n                    }\n                    return _context12.abrupt(\"return\", {\n                      value: undefined,\n                      done: true\n                    });\n                  case 6:\n                    requestCapability = (0, _util.createPromiseCapability)();\n                    this._requests.push(requestCapability);\n                    return _context12.abrupt(\"return\", requestCapability.promise);\n                  case 9:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12, this);\n            }));\n            function read() {\n              return _read6.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._done = true;\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n            this._close();\n          }\n        }]);\n        return PDFNetworkStreamRangeRequestReader;\n      }();\n      /***/\n    }, /* 23 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFetchStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(20);\n      function createFetchOptions(headers, withCredentials, abortController) {\n        return {\n          method: \"GET\",\n          headers: headers,\n          signal: abortController && abortController.signal,\n          mode: \"cors\",\n          credentials: withCredentials ? \"include\" : \"same-origin\",\n          redirect: \"follow\"\n        };\n      }\n      function createHeaders(httpHeaders) {\n        var headers = new Headers();\n        for (var property in httpHeaders) {\n          var value = httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          headers.append(property, value);\n        }\n        return headers;\n      }\n      var PDFFetchStream = /*#__PURE__*/function () {\n        function PDFFetchStream(source) {\n          _classCallCheck(this, PDFFetchStream);\n          this.source = source;\n          this.isHttp = /^https?:/i.test(source.url);\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _createClass(PDFFetchStream, [{\n          key: \"_progressiveDataLength\",\n          get: function get() {\n            return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n          }\n        }, {\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader);\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            var reader = new PDFFetchStreamRangeReader(this, begin, end);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n            var readers = this._rangeRequestReaders.slice(0);\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n        return PDFFetchStream;\n      }();\n      exports.PDFFetchStream = PDFFetchStream;\n      var PDFFetchStreamReader = /*#__PURE__*/function () {\n        function PDFFetchStreamReader(stream) {\n          var _this48 = this;\n          _classCallCheck(this, PDFFetchStreamReader);\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          this._filename = null;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._contentLength = source.length;\n          this._headersCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._headers = createHeaders(this._stream.httpHeaders);\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            _this48._reader = response.body.getReader();\n            _this48._headersCapability.resolve();\n            var getResponseHeader = function getResponseHeader(name) {\n              return response.headers.get(name);\n            };\n            var _ref34 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: _this48._stream.isHttp,\n                rangeChunkSize: _this48._rangeChunkSize,\n                disableRange: _this48._disableRange\n              }),\n              allowRangeRequests = _ref34.allowRangeRequests,\n              suggestedLength = _ref34.suggestedLength;\n            _this48._isRangeSupported = allowRangeRequests;\n            _this48._contentLength = suggestedLength || _this48._contentLength;\n            _this48._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (!_this48._isStreamingSupported && _this48._isRangeSupported) {\n              _this48.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n            }\n          }).catch(this._headersCapability.reject);\n          this.onProgress = null;\n        }\n        _createClass(PDFFetchStreamReader, [{\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersCapability.promise;\n          }\n        }, {\n          key: \"filename\",\n          get: function get() {\n            return this._filename;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n              var _yield$this$_reader$r, value, done, buffer;\n              return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.next = 2;\n                    return this._headersCapability.promise;\n                  case 2:\n                    _context13.next = 4;\n                    return this._reader.read();\n                  case 4:\n                    _yield$this$_reader$r = _context13.sent;\n                    value = _yield$this$_reader$r.value;\n                    done = _yield$this$_reader$r.done;\n                    if (!done) {\n                      _context13.next = 9;\n                      break;\n                    }\n                    return _context13.abrupt(\"return\", {\n                      value: value,\n                      done: done\n                    });\n                  case 9:\n                    this._loaded += value.byteLength;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded,\n                        total: this._contentLength\n                      });\n                    }\n                    buffer = new Uint8Array(value).buffer;\n                    return _context13.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 13:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13, this);\n            }));\n            function read() {\n              return _read7.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n        }]);\n        return PDFFetchStreamReader;\n      }();\n      var PDFFetchStreamRangeReader = /*#__PURE__*/function () {\n        function PDFFetchStreamRangeReader(stream, begin, end) {\n          var _this49 = this;\n          _classCallCheck(this, PDFFetchStreamRangeReader);\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          var source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._isStreamingSupported = !source.disableStream;\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n          this._headers = createHeaders(this._stream.httpHeaders);\n          this._headers.append(\"Range\", \"bytes=\".concat(begin, \"-\").concat(end - 1));\n          var url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            _this49._readCapability.resolve();\n            _this49._reader = response.body.getReader();\n          });\n          this.onProgress = null;\n        }\n        _createClass(PDFFetchStreamRangeReader, [{\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n              var _yield$this$_reader$r2, value, done, buffer;\n              return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return this._readCapability.promise;\n                  case 2:\n                    _context14.next = 4;\n                    return this._reader.read();\n                  case 4:\n                    _yield$this$_reader$r2 = _context14.sent;\n                    value = _yield$this$_reader$r2.value;\n                    done = _yield$this$_reader$r2.done;\n                    if (!done) {\n                      _context14.next = 9;\n                      break;\n                    }\n                    return _context14.abrupt(\"return\", {\n                      value: value,\n                      done: done\n                    });\n                  case 9:\n                    this._loaded += value.byteLength;\n                    if (this.onProgress) {\n                      this.onProgress({\n                        loaded: this._loaded\n                      });\n                    }\n                    buffer = new Uint8Array(value).buffer;\n                    return _context14.abrupt(\"return\", {\n                      value: buffer,\n                      done: false\n                    });\n                  case 13:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14, this);\n            }));\n            function read() {\n              return _read8.apply(this, arguments);\n            }\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n        }]);\n        return PDFFetchStreamRangeReader;\n      }();\n      /***/\n    }\n    /******/])\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","installedModules","__w_pdfjs_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","pdfjsVersion","pdfjsBuild","pdfjsSharedUtil","pdfjsDisplayAPI","pdfjsDisplayTextLayer","pdfjsDisplayAnnotationLayer","pdfjsDisplayDisplayUtils","pdfjsDisplaySVG","pdfjsDisplayWorkerOptions","pdfjsDisplayAPICompatibility","_w_pdfjs_require__","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","build","version","getDocument","LoopbackPort","PDFDataRangeTransport","PDFWorker","renderTextLayer","AnnotationLayer","createPromiseCapability","PasswordResponses","InvalidPDFException","MissingPDFException","SVGGraphics","NativeImageDecoding","CMapCompressionType","PermissionFlag","UnexpectedResponseException","OPS","VerbosityLevel","UNSUPPORTED_FEATURES","createValidAbsoluteUrl","createObjectURL","removeNullCharacters","shadow","Util","RenderingCancelledException","getFilenameFromUrl","LinkTarget","addLinkAttributes","loadScript","PDFDateString","GlobalWorkerOptions","apiCompatibilityParams","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","NONE","DECODE","DISPLAY","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","INFOS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","concat","warn","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","_isValidProtocol","protocol","absoluteUrl","ex","obj","prop","configurable","writable","BaseException","BaseExceptionClosure","message","constructor","PasswordException","_BaseException","_inherits","_super","_createSuper","code","_this","_classCallCheck","_createClass","UnknownErrorException","_BaseException2","_super2","details","_this2","_BaseException3","_super3","apply","arguments","_BaseException4","_super4","_BaseException5","_super5","status","_this3","FormatError","_BaseException6","_super6","AbortException","_BaseException7","_super7","NullCharactersRegExp","str","replace","bytesToString","bytes","length","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","strBuf","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","rgbBuf","makeCssRgb","g","b","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","PDFStringTranslateTable","stringToPDFString","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","isBool","isNum","isString","isArrayBuffer","isArrayEqual","arr1","arr2","every","element","index","capability","isSettled","promise","Promise","resolve","reject","reason","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","type","ii","b1","b2","b3","d1","d2","d3","d4","_util","_display_utils","_font_loader","_api_compatibility","_canvas","_worker_options","_is_node","_message_handler","_metadata","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","src","task","PDFDocumentLoadingTask","source","range","rangeTransport","worker","window","location","href","pdfBytes","isNaN","rangeChunkSize","CMapReaderFactory","DOMCMapReaderFactory","ignoreErrors","stopAtErrors","pdfBug","NativeImageDecoderValues","values","nativeImageDecoderSupport","includes","maxImageSize","disableFontFace","disableRange","disableStream","disableAutoFetch","disableCreateObjectURL","workerParams","port","workerPort","fromPort","_worker","docId","then","destroyed","_fetchDocument","workerId","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","send","catch","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","PDFDocumentLoadingTaskClosure","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","destroy","_this4","transportDestroyed","onFulfilled","onRejected","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","_iterator","_createForOfIteratorHelper","_step","done","err","f","onDataProgress","loaded","total","_this5","_iterator2","_step2","onDataProgressiveRead","_this6","_iterator3","_step3","onDataProgressiveDone","_this7","_iterator4","_step4","transportReady","requestDataRange","end","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getOpenActionDestination","deprecated","openAction","dest","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","intentStates","rotate","userUnit","view","getViewport","_ref","scale","_ref$rotation","rotation","_ref$offsetX","offsetX","_ref$offsetY","offsetY","_ref$dontFlip","dontFlip","PageViewport","viewBox","getAnnotations","_ref2","_ref2$intent","intent","annotationsPromise","annotationsIntent","render","_ref3","_this8","canvasContext","viewport","_ref3$intent","_ref3$enableWebGL","enableWebGL","_ref3$renderInteracti","renderInteractiveForms","_ref3$transform","_ref3$imageLayer","imageLayer","_ref3$canvasFactory","canvasFactory","_ref3$background","background","time","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","DOMCanvasFactory","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","indexOf","internalRenderTask","splice","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","_ref4","_ref4$normalizeWhites","normalizeWhitespace","_ref4$disableCombineT","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","size","textContent","items","getTextContent","readableStream","pump","reader","read","_ref5","_textContent$items","assign","styles","_toConsumableArray","getReader","_destroy","_this9","pageCache","waitOn","keys","forEach","force","renderCompleted","cancel","clear","all","resetStats","_this10","some","_startRenderPage","_renderPageChunk","operatorListChunk","args","_this11","streamReader","_ref6","_ref7","_this12","_ref7$force","setTimeout","defer","_listeners","_defer","_deferred","postMessage","transfers","_this13","cloneValue","cloned","has","transferable","byteOffset","Array","isArray","desc","getOwnPropertyDescriptor","getPrototypeOf","WeakMap","addEventListener","removeEventListener","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","document","pdfjsFilePath","currentScript","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","globalThis","pdfjsWorker","WorkerMessageHandler","setupFakeWorkerGlobal","loader","_ref8","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","eval","stop","createCDNWrapper","wrapper","_ref9","_ref9$name","_ref9$port","_ref9$verbosity","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","_this14","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","_this15","workerHandler","setup","delete","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","isCompressed","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","_this16","page","terminated","cancelAllRequests","_this17","sink","getFullReader","evt","onPull","_ref10","close","enqueue","onCancel","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_ref11","_ref12","_numPages","exception","updatePassword","_data","_slicedToArray","exportedData","exportedError","fontRegistry","FontInspector","enabled","registerFont","fontAdded","FontFaceObject","finally","_data2","imageData","pageProxy","img","Image","onload","onerror","releaseImageResources","MAX_IMAGE_SIZE_TO_STORE","_data3","imageUrl","components","width","height","rgbaLength","buf","Uint8ClampedArray","tmpCanvas","createElement","tmpCtx","getContext","drawImage","getImageData","j","fetched","fetch","builtInCMap","cMapData","_ref13","featureId","_this18","_this19","results","metadata","Metadata","contentDispositionFilename","filename","_this20","cleanupSuccessful","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","_ref14","_ref14$useRequestAnim","_ref14$pdfBug","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","canvas","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","_this$params","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","_this21","requestAnimationFrame","_next2","_callee2","_callee2$","_context2","executeOperatorList","DEFAULT_LINK_REL","SVG_NS","context","reset","canvasAndContext","_ref15","_ref15$baseUrl","_ref15$isCompressed","_fetch","_x","toString","_ref17","_callee4","_ref16","_this22","compressionType","_callee4$","_context4","baseURI","_ref18","_callee3","response","_callee3$","_context3","ok","statusText","t0","arrayBuffer","t1","sent","t2","text","t3","_x3","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","_x2","DOMSVGFactory","svg","createElementNS","setAttribute","_ref19","_ref19$offsetX","_ref19$offsetY","_ref19$dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","abs","clone","_ref20","_ref20$scale","_ref20$rotation","_ref20$offsetX","_ref20$offsetY","_ref20$dontFlip","convertToViewportPoint","x","y","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","_util$BaseException","_super8","_this23","SELF","BLANK","PARENT","TOP","link","_ref21","target","rel","_ref21$enabled","urlNullRemoved","title","onclick","targetStr","anchor","query","substring","lastIndexOf","started","times","Date","now","start","outBuf","longest","_iterator5","_step5","_iterator6","_step6","duration","padEnd","Response","ReadableStream","_ref22","script","head","documentElement","appendChild","startsWith","revokeObjectURL","removeAttribute","pdfDateStringRegex","toDateObject","input","RegExp","matches","exec","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","BaseFontLoader","_ref23","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","remove","_bind","_callee5","_this24","_callee5$","_context5","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_x4","supported","rules","fontsToLoad","_BaseFontLoader","GenericFontLoader","_super9","_this25","loadingContext","requests","nextRequestId","loadTestFontId","navigator","userAgent","completeRequest","otherRequest","shift","getLoadTestFont","atob","int32","offset","spliceString","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","_loadTestFont","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","removeChild","translatedData","_ref24","_ref24$isEvalSupporte","_ref24$disableFontFac","_ref24$ignoreErrors","_ref24$onUnsupportedF","_ref24$fontRegistry","compiledGlyphs","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","compatibilityParams","_w_pdfjs_require__2","isIE","test","isIOSChrome","checkOnBlobSupport","checkFontFaceAndImage","freeze","process","versions","_pattern_helper","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","getCurrentTransform","getCurrentTransformInverse","ad_bc","bc_ad","ctxSave","old","ctxRestore","pop","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","cos","sinValue","sin","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","j0","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","sum","steps","Int32Array","outlines","coords","p0","pp","step","drawOutline","beginPath","jj","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","EXECUTION_TIME","EXECUTION_STEPS","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","thisChunkHeight","elemsInThisChunk","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","copyCtxState","sourceCtx","destCtx","properties","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","scaleX","scaleY","isEnabled","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","_ref25","_ref25$transparency","_ref25$background","fillRect","transparentCanvas","compositeCtx","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","_iterator7","_step7","depObjId","objsPool","CanvasGraphics_endDrawing","endSMaskGroup","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","CanvasGraphics_setLineJoin","CanvasGraphics_setMiterLimit","limit","CanvasGraphics_setDash","dashArray","dashPhase","flatness","CanvasGraphics_setGState","states","state","suspendSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","clearRect","resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","getSinglePixelWidth","xw","yh","bezierCurveTo","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","getPattern","CanvasGraphics_closeStroke","CanvasGraphics_fill","isPatternFill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","path","addToPath","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","_this$cachedCanvases$","CanvasGraphics_showText","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","scaledAccentX","scaledAccentY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","charWidth","CanvasGraphics_showType3Text","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","_this26","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","floor","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintJpegXObject","w","h","domImage","getCanvasPosition","appendImage","CanvasGraphics_paintImageMaskXObject","compiled","maskCanvas","CanvasGraphics_paintImageMaskXObjectRepeat","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","map","CanvasGraphics_paintInlineImageXObject","widthScale","heightScale","imgToPaint","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","CanvasGraphics_paintInlineImageXObjectGroup","entry","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_paintXObject","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","CanvasGraphics_beginMarkedContentProps","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","inverse","CanvasGraphics_getCanvasPosition","op","ShadingIRs","applyBoundingBox","Path2D","region","RadialAxial","fromIR","RadialAxial_fromIR","raw","colorStops","r1","RadialAxial_getPattern","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","round","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","drawFigures","Mesh","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","Dummy_fromIR","Dummy_fromIR_getPattern","shadingIR","TilingPatternClosure","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","_this27","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","_this28","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","ready","success","_deleteStreamController","_deleteStreamController2","_callee6","_callee6$","_context6","allSettled","_x5","_xml_parser","_repair","parser","SimpleXMLParser","xmlDocument","parseFromString","_metadataMap","Map","_parse","codes","chars","rdf","nodeName","toLowerCase","firstChild","nextSibling","hasChildNodes","children","childNodes","trim","getAll","_iterator8","_step8","_step8$value","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","isWhitespaceString","XMLParserBase","_resolveEntities","_this29","entity","onResolveEntity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","ch2","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","isEmpty","SimpleDOMNode","nodeValue","parentNode","child","_XMLParserBase","_super10","_this30","_currentFragment","_stack","_errorCode","_this$_currentFragmen","_get","_getPrototypeOf","node","lastElement","_this31","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_begin","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","_progressiveDataLength","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_iterator9","_step9","_requests","_headersReady","requestCapability","_read","_callee7","_callee7$","_context7","_end","_queuedChunk","requestsCapability","_read2","_callee8","_callee8$","_context8","_ref26","_ref26$enable","_enabled","WebGLUtils","tryInitGL","_ref27","_ref28","WebGLUtilsClosure","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","initSmaskGL","vertexShader","fragmentShader","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","scaleLocation","offsetLocation","colorLocation","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","renderTextLayerClosure","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","isAllWhitespace","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_textDivProperties","tx","_viewport","atan2","fontName","PI","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","dataset","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","_canceled","textDivs","textDivsLength","_renderingDone","expand","expanded","expandBounds","divProperties","ts","Float64Array","findPositiveMin","boxScale","boxes","box","x1New","x2New","expandBoundsLTR","fakeBoundary","Infinity","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","TextLayerRenderTask","_ref29","_this32","textContentStream","container","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","TextLayer_cancel","_processItems","styleCache","len","_textDiv$style","_this$_layoutTextCtx$","_render","TextLayer_render","timeout","_this33","mozOpaque","textItems","textStyles","_ref30","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","_createContainer","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","_createPopup","trigger","popupElement","PopupElement","modificationDate","contents","hideWrapper","popup","_AnnotationElement","_super11","className","newWindow","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","destination","_this34","getDestinationHash","navigateTo","_this35","getAnchorUrl","executeNamedAction","_AnnotationElement2","_super12","hasPopup","alt","l10nId","l10nArgs","JSON","stringify","_AnnotationElement3","_super13","_WidgetAnnotationElem","_super14","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","disabled","readOnly","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","display","_setTextStyle","textAlignment","textAlign","direction","fontWeight","fontStyle","_WidgetAnnotationElem2","_super15","_WidgetAnnotationElem3","_super16","fieldName","buttonValue","_LinkAnnotationElemen","_super17","_WidgetAnnotationElem4","_super18","selectElement","combo","options","multiSelect","multiple","_iterator10","_step10","option","optionElement","displayValue","exportValue","_AnnotationElement4","_super19","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentLeft","parseFloat","parentWidth","pinned","BACKGROUND_ENLIGHT","hideElement","dateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","hasAttribute","zIndex","unpin","_AnnotationElement5","_super20","_AnnotationElement6","_super21","lineCoordinates","append","_AnnotationElement7","_super22","square","_AnnotationElement8","_super23","circle","_AnnotationElement9","_super24","_this36","containerClassName","svgElementName","_iterator11","vertices","_step11","coordinate","polyline","_PolylineAnnotationEl","_super25","_this37","_AnnotationElement10","_super26","_AnnotationElement11","_super27","_this38","_iterator12","inkLists","_step12","inkList","_iterator13","_step13","_AnnotationElement12","_super28","_AnnotationElement13","_super29","_AnnotationElement14","_super30","_AnnotationElement15","_super31","_AnnotationElement16","_super32","_AnnotationElement17","_super33","_this39","_this39$data$file","file","eventBus","dispatch","_assertThisInitialized","_download","downloadData","sortedAnnotations","popupAnnotations","_iterator14","annotations","_step14","_i7","_sortedAnnotations","update","_iterator15","_step15","opListToTree","opList","opTree","_iterator16","_step16","opListElement","fn","pf","toFixed","pm","acos","SVG_DEFAULTS","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","Buffer","from","output","maxBlockLength","deflateBlocks","idat","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","_this40","_iterator17","_step17","_loop","getSVG","_this41","svgElement","convertOpList","operatorIdMapping","_iterator18","_step18","opTreeElement","lineMatrix","xcoords","tspan","setAttributeNS","txtElement","txtgrp","_iterator19","_step19","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","defs","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","_args$","tilingId","_util$Util$applyTrans","_util$Util$applyTrans2","tx0","ty0","_util$Util$applyTrans3","_util$Util$applyTrans4","tx1","ty1","_util$Util$singularVa","_util$Util$singularVa2","xscale","yscale","txstep","tystep","tiling","_util$Util","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","_iterator20","_step20","colorStop","_iterator21","_step21","getAttributeNS","clipId","clipPath","clipElement","cloneNode","_iterator22","_step22","_step22$value","imgObj","imgEl","imgSrc","cliprect","definitions","rootGroup","_ensureClipGroup","_network_utils","fs","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_read3","_callee9","_callee9$","_context9","_error","_setReadableStream","_this42","BaseRangeReader","_read4","_callee10","_callee10$","_context10","_this43","createRequestOptions","headers","auth","hostname","method","_BaseFullReader","_super34","_this44","handleResponse","statusCode","getResponseHeader","_ref31","validateRangeRequestCapabilities","allowRangeRequests","suggestedLength","extractFilenameFromHeader","_request","_BaseRangeReader","_super35","_this45","_httpHeaders","_BaseFullReader2","_super36","_this46","lstat","stat","createReadStream","_BaseRangeReader2","_super37","_this47","_content_disposition","_ref32","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","createResponseStatusError","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","decode","match","iter","_match","_match2","quot","part","parts","_matches$_n","quotindex","extvalue","encodingend","langvalue","_","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","array","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","hasPendingRequests","getRequestXhr","isPendingRequest","abortAllRequests","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_ref33","lengthComputable","_read5","_callee11","_callee11$","_context11","_requestId","_close","_read6","_callee12","_callee12$","_context12","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_this48","_withCredentials","AbortController","_abortController","_headers","_ref34","_read7","_callee13","_yield$this$_reader$r","_callee13$","_context13","_this49","_read8","_callee14","_yield$this$_reader$r2","_callee14$","_context14"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-unused-vars */\n\n\"use strict\";\n\nvar pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\nvar pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nvar pdfjsSharedUtil = require(\"./shared/util.js\");\nvar pdfjsDisplayAPI = require(\"./display/api.js\");\nvar pdfjsDisplayTextLayer = require(\"./display/text_layer.js\");\nvar pdfjsDisplayAnnotationLayer = require(\"./display/annotation_layer.js\");\nvar pdfjsDisplayDisplayUtils = require(\"./display/display_utils.js\");\nvar pdfjsDisplaySVG = require(\"./display/svg.js\");\nconst pdfjsDisplayWorkerOptions = require(\"./display/worker_options.js\");\nconst pdfjsDisplayAPICompatibility = require(\"./display/api_compatibility.js\");\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (pdfjsDisplayDisplayUtils.isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      if (\n        PDFFetchStream &&\n        pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)\n      ) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function() {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (\n    pdfjsDisplayDisplayUtils.isFetchSupported() &&\n    isChromeWithFetchCredentials()\n  ) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n    if (\n      PDFFetchStream &&\n      pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)\n    ) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexports.build = pdfjsDisplayAPI.build;\nexports.version = pdfjsDisplayAPI.version;\nexports.getDocument = pdfjsDisplayAPI.getDocument;\nexports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\nexports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\nexports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\nexports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\nexports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\nexports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\nexports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\nexports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\nexports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\nexports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\nexports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\nexports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;\nexports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;\nexports.UnexpectedResponseException =\n  pdfjsSharedUtil.UnexpectedResponseException;\nexports.OPS = pdfjsSharedUtil.OPS;\nexports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\nexports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\nexports.createObjectURL = pdfjsSharedUtil.createObjectURL;\nexports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\nexports.shadow = pdfjsSharedUtil.shadow;\nexports.Util = pdfjsSharedUtil.Util;\nexports.RenderingCancelledException =\n  pdfjsDisplayDisplayUtils.RenderingCancelledException;\nexports.getFilenameFromUrl = pdfjsDisplayDisplayUtils.getFilenameFromUrl;\nexports.LinkTarget = pdfjsDisplayDisplayUtils.LinkTarget;\nexports.addLinkAttributes = pdfjsDisplayDisplayUtils.addLinkAttributes;\nexports.loadScript = pdfjsDisplayDisplayUtils.loadScript;\nexports.PDFDateString = pdfjsDisplayDisplayUtils.PDFDateString;\nexports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;\nexports.apiCompatibilityParams =\n  pdfjsDisplayAPICompatibility.apiCompatibilityParams;\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst NativeImageDecoding = {\n  NONE: \"none\",\n  DECODE: \"decode\",\n  DISPLAY: \"display\",\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  font: \"font\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function(element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function(resolve, reject) {\n    capability.resolve = function(data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function(reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  NativeImageDecoding,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n// Skip compatibility checks for modern builds (unless we're running the\n// unit-tests in Node.js/Travis) and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!SKIP_BABEL || (LIB && TESTING)\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const { isNodeJS } = require(\"./is_node.js\");\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function(chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function(input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function() {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function(...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function(...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function(token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function(state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function(state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  NativeImageDecoding,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  releaseImageResources,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params The document initialization\n * parameters. The \"url\" key is always present.\n * @returns {IPDFStream}\n */\n\n/** @type IPDFStreamFactory */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates a IPDFStream as an alternative PDF data\n * transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - the factory function\n * that takes document initialization parameters (including a \"url\") and returns\n * an instance of IPDFStream.\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [nativeImageDecoderSupport] - Strategy for\n *   decoding certain (simple) JPEG images in the browser. This is useful for\n *   environments without DOM image and canvas support, such as e.g. Node.js.\n *   Valid values are 'decode', 'display' or 'none'; where 'decode' is intended\n *   for browsers with full image/canvas support, 'display' for environments\n *   with limited image support through stubs (useful for SVG conversion),\n *   and 'none' where JPEG images will be decoded entirely by PDF.js.\n *   The default value is 'decode'.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [disableCreateObjectURL] - Disable the use of\n *   `URL.createObjectURL`, for compatibility with older browsers.\n *   The default value is `false`.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.pdfBug = params.pdfBug === true;\n\n  const NativeImageDecoderValues = Object.values(NativeImageDecoding);\n  if (\n    params.nativeImageDecoderSupport === undefined ||\n    !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)\n  ) {\n    params.nativeImageDecoderSupport =\n      apiCompatibilityParams.nativeImageDecoderSupport ||\n      NativeImageDecoding.DECODE;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n  if (typeof params.disableCreateObjectURL !== \"boolean\") {\n    params.disableCreateObjectURL =\n      apiCompatibilityParams.disableCreateObjectURL || false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function() {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n      return _fetchDocument(worker, params, rangeTransport, docId).then(\n        function(workerId) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          let networkStream;\n          if (rangeTransport) {\n            networkStream = new PDFDataTransportStream(\n              {\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream,\n              },\n              rangeTransport\n            );\n          } else if (!params.data) {\n            networkStream = createPDFNetworkStream({\n              url: params.url,\n              length: params.length,\n              httpHeaders: params.httpHeaders,\n              withCredentials: params.withCredentials,\n              rangeChunkSize: params.rangeChunkSize,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            });\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      disableCreateObjectURL: source.disableCreateObjectURL,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      nativeImageDecoderSupport: source.nativeImageDecoderSupport,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n    })\n    .then(function(workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n\n    /**\n     * Registers callbacks to indicate the document loading completion.\n     * @ignore\n     */\n    then(onFulfilled, onRejected) {\n      throw new Error(\n        \"Removed API method: \" +\n          \"PDFDocumentLoadingTask.then, use the `promise` getter instead.\"\n      );\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function(openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      (arguments.length > 1 || typeof arguments[0] === \"number\")\n    ) {\n      throw new Error(\n        \"PDFPageProxy.getViewport is called with obsolete arguments.\"\n      );\n    }\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function(resolve, reject) {\n      function pump() {\n        reader.read().then(function({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function(renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function() {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function() {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          throw new Error(\"SystemJS must be used to load fake worker.\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function() {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function(page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(this._networkStream);\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(isArrayBuffer(value));\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(this._networkStream);\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(isArrayBuffer(value));\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function(ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader.bind(font).then(\n            () => {\n              this.commonObjs.resolve(id, font);\n            },\n            reason => {\n              messageHandler\n                .sendWithPromise(\"FontFallback\", {\n                  id,\n                })\n                .finally(() => {\n                  this.commonObjs.resolve(id, font);\n                });\n            }\n          );\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"JpegStream\":\n          return new Promise((resolve, reject) => {\n            const img = new Image();\n            img.onload = function() {\n              resolve(img);\n            };\n            img.onerror = function() {\n              // Note that when the browser image loading/decoding fails,\n              // we'll fallback to the built-in PDF.js JPEG decoder; see\n              // `PartialEvaluator.buildPaintImageXObject` in the\n              // `src/core/evaluator.js` file.\n              reject(new Error(\"Error during JPEG image loading\"));\n\n              // Always remember to release the image data if errors occurred.\n              releaseImageResources(img);\n            };\n            img.src = imageData;\n          }).then(img => {\n            pageProxy.objs.resolve(id, img);\n          });\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"JpegDecode\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n\n      if (typeof document === \"undefined\") {\n        // Make sure that this code is not executing in node.js, as\n        // it's using DOM image, and there is no library to support that.\n        return Promise.reject(new Error('\"document\" is not defined.'));\n      }\n\n      const [imageUrl, components] = data;\n      if (components !== 3 && components !== 1) {\n        return Promise.reject(\n          new Error(\"Only 3 components or 1 component can be returned\")\n        );\n      }\n\n      return new Promise(function(resolve, reject) {\n        const img = new Image();\n        img.onload = function() {\n          const { width, height } = img;\n          const size = width * height;\n          const rgbaLength = size * 4;\n          const buf = new Uint8ClampedArray(size * components);\n          let tmpCanvas = document.createElement(\"canvas\");\n          tmpCanvas.width = width;\n          tmpCanvas.height = height;\n          let tmpCtx = tmpCanvas.getContext(\"2d\");\n          tmpCtx.drawImage(img, 0, 0);\n          const data = tmpCtx.getImageData(0, 0, width, height).data;\n\n          if (components === 3) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n              buf[j] = data[i];\n              buf[j + 1] = data[i + 1];\n              buf[j + 2] = data[i + 2];\n            }\n          } else if (components === 1) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n              buf[j] = data[i];\n            }\n          }\n          resolve({ data: buf, width, height });\n\n          // Immediately release the image data once decoding has finished.\n          releaseImageResources(img);\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          tmpCanvas.width = 0;\n          tmpCanvas.height = 0;\n          tmpCanvas = null;\n          tmpCtx = null;\n        };\n        img.onerror = function() {\n          reject(new Error(\"JpegDecode failed to load image\"));\n\n          // Always remember to release the image data if errors occurred.\n          releaseImageResources(img);\n        };\n        img.src = imageUrl;\n      });\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function(builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function(reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function(reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableCreateObjectURL: params.disableCreateObjectURL,\n      disableFontFace: params.disableFontFace,\n      nativeImageDecoderSupport: params.nativeImageDecoderSupport,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    for (const objId in this._objs) {\n      const { data } = this._objs[objId];\n\n      if (typeof Image !== \"undefined\" && data instanceof Image) {\n        // Always release the image data when clearing out the cached objects.\n        releaseImageResources(data);\n      }\n    }\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n\n  /**\n   * Registers callbacks to indicate the rendering task completion.\n   * @ignore\n   */\n  then(onFulfilled, onRejected) {\n    throw new Error(\n      \"Removed API method: \" +\n        \"RenderTask.then, use the `promise` getter instead.\"\n    );\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve()\n          .then(this._nextBound)\n          .catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      // case 0:\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function() {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nfunction releaseImageResources(img) {\n  assert(img instanceof Image, \"Invalid `img` parameter.\");\n\n  const url = img.src;\n  if (\n    typeof url === \"string\" &&\n    url.startsWith(\"blob:\") &&\n    URL.revokeObjectURL\n  ) {\n    URL.revokeObjectURL(url);\n  }\n  img.removeAttribute(\"src\");\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  releaseImageResources,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function(nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({ featureId: UNSUPPORTED_FEATURES.font });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function() {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function() {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({ featureId: UNSUPPORTED_FEATURES.font });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function(c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function(c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"../shared/is_node.js\");\n\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Checks if possible to use URL.createObjectURL()\n  // Support: IE, Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes IE and Chrome on iOS losing the data created with\n    // createObjectURL(), see issues #3977 and #8081.\n    if (isIE || isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Support: Node.js\n  (function checkFontFaceAndImage() {\n    // Node.js is missing native support for `@font-face` and `Image`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n      compatibilityParams.nativeImageDecoderSupport = \"none\";\n    }\n  })();\n}\n\nexports.apiCompatibilityParams = Object.freeze(compatibilityParams);\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions[\"nw\"] &&\n  !process.versions[\"electron\"];\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function(c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (var i = 0, ii = outlines.length; i < ii; i++) {\n      var o = outlines[i];\n      c.moveTo(o[0], o[1]);\n      for (var j = 2, jj = o.length; j < jj; j += 2) {\n        c.lineTo(o[j], o[j + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && font.data;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n      const domImage = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!domImage) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.save();\n\n      var ctx = this.ctx;\n      // scale the image to the unit square\n      ctx.scale(1 / w, -1 / h);\n\n      ctx.drawImage(\n        domImage,\n        0,\n        0,\n        domImage.width,\n        domImage.height,\n        0,\n        -h,\n        w,\n        h\n      );\n      if (this.imageLayer) {\n        var currentTransform = ctx.mozCurrentTransformInverse;\n        var position = this.getCanvasPosition(0, 0);\n        this.imageLayer.appendImage({\n          objId,\n          left: position[0],\n          top: position[1],\n          width: w / currentTransform[0],\n          height: h / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertial or horizontal scaling shall not be more than 2 to not loose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        let k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        new Promise(function(resolve) {\n          resolve(action(data.data));\n        }).then(\n          function(result) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function(resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function() {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function(reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function(resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function() {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function(resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function() {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function(capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function(all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function(code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function(str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function(child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(pdfDataRangeTransport);\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function(rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(found);\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function(rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function(requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    if (geom.str.length > 1) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function(p, i) {\n        var t = Util.applyTransform(p, m);\n        ts[i + 0] = c && (e.left - t[0]) / c;\n        ts[i + 4] = s && (e.top - t[1]) / s;\n        ts[i + 8] = c && (e.right - t[0]) / c;\n        ts[i + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[i + 16] = s && (e.left - t[0]) / -s;\n        ts[i + 20] = c && (e.top - t[1]) / c;\n        ts[i + 24] = s && (e.right - t[0]) / -s;\n        ts[i + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[i + 32] = c && (e.left - t[0]) / -c;\n        ts[i + 36] = s && (e.top - t[1]) / -s;\n        ts[i + 40] = c && (e.right - t[0]) / -c;\n        ts[i + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[i + 48] = s && (e.left - t[0]) / s;\n        ts[i + 52] = c && (e.top - t[1]) / -c;\n        ts[i + 56] = s && (e.right - t[0]) / s;\n        ts[i + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      var findPositiveMin = function(ts, offset, count) {\n        var result = 0;\n        for (var i = 0; i < count; i++) {\n          var t = ts[offset++];\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n        return result;\n      };\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function(box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function(b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function(box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function(b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function(a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function(boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function(horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function() {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function() {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintJpegXObject:\n            this.paintJpegXObject(args[0], args[1], args[2]);\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += -glyph * fontSize * 0.001;\n          continue;\n        }\n\n        const width = glyph.width;\n        const character = glyph.fontChar;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const charWidth = width * widthAdvanceScale + spacing * fontDirection;\n\n        if (!glyph.isInFont && !font.missingFile) {\n          x += charWidth;\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n          continue;\n        }\n        current.xcoords.push(current.x + x);\n        current.tspan.textContent += character;\n        x += charWidth;\n      }\n      if (vertical) {\n        current.y -= x * textHScale;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        fontObj.data &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function(prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function(value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintJpegXObject(objId, w, h) {\n      const imgObj = this.objs.get(objId);\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgObj.src);\n      imgEl.setAttributeNS(null, \"width\", pf(w));\n      imgEl.setAttributeNS(null, \"height\", pf(h));\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-h));\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / w)} ${pf(-1 / h)})`\n      );\n\n      this._ensureTransformGroup().appendChild(imgEl);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(url, headers) {\n  return {\n    protocol: url.protocol,\n    auth: url.auth,\n    host: url.hostname,\n    port: url.port,\n    path: url.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders[\"Range\"] = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function(ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDisposition) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDisposition)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function(_, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function(_, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function(evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}